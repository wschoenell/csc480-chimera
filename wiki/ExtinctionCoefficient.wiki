#summary How Chimera will compute the Extinction Coefficient

= Introduction =

Steps to compute extinction coefficient:

 * `public computeExtinctionCoefficient(raDec[], latitude[], flux[])` called by EXTERNAL code.
   # For each element in raDec, latitude, flux call computeEC. This returns magnititude, airmass. Store in `magnitude[], airmass[]`.
   # Run a least squares fit on magnitude, airmass.
   # Return the numeric value here (the extinction coefficient).

 * `private computeEC(raDec, latitude, flux)` called by computeExtinctionCoefficient. Returns Airmass and Magnitude.
   # Compute Local Sidereal Time (lst) (call LST(self) in core/site.py)
   # Call function raDectoAltAz(raDec, latitude, lst) in position.py. This returns altitude and azimuth.
   # Compute airmass = 1/cos(altitude).
   # Compute magnitude = 2.5*log(flux)
   # return airmass and magnitude.

Note there will also be a least squares package we will include with this, but this is the main outline of what we have to do.

Also, the data in computeExtinctionCoefficient can be used for a graph.

Note - in case LST doesn't work, Shashi gave me this site: http://www.pietro.org/Astro_Util_StaticDemo/FDetailSiderealConv.htm