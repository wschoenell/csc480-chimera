<?xml version="1.0" encoding="UTF-8"?>
<XMI verified="false" xmi.version="1.2" timestamp="2009-02-23T12:06:24" xmlns:UML="http://schema.omg.org/spec/UML/1.3" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.5.8</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.version="1.3" href="UML.xml" xmi.name="UML" />
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isAbstract="false" isLeaf="false" xmi.id="m1" isRoot="false" name="UML Model" >
   <UML:Namespace.ownedElement>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="folder" name="folder" />
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="datatype" name="datatype" />
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Logical View" name="Logical View" >
     <UML:Namespace.ownedElement>
      <UML:Package stereotype="folder" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Datatypes" name="Datatypes" >
       <UML:Namespace.ownedElement>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yrAddGpLzGMk" name="int" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uHjAoyXKUVOM" name="char" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VmDDtj7sZHTA" name="bool" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VIVVYpDT4ubs" name="float" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="q6CJbYf5KqGE" name="double" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YN47eXH9okcK" name="short" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="annegMXWThp2" name="long" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GT7aJNmrkowM" name="unsigned int" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="MBU8w6SWsE8Y" name="unsigned short" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ad23Lq4ZJB7a" name="unsigned long" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XuQFiMc2W6AS" name="string" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ios4RlDltUFg" name=";" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VERjbhcMMn0z" name="array" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3m3hfLSexQN5" name="tuple" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="s8UclqDE4eyg" name="set" />
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZLZYk26Sfkjo" name="MinimoException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="rjmlVuKrStbS" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ZLZYk26Sfkjo" xmi.id="rjmlVuKrStbS" parent="FRDTSCi1H5yV" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="nW4FNdhKdnyM" xmi.id="UUmEMxR7RTKo" parent="ftXkF8yIkWNJ" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ngjo71dC1kqm" name="Minimo" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="954QUK1r0ig8" />
        <UML:Generalization xmi.idref="jCCjuqpc57M4" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sv4w0Q0GIpSr" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="o3TO5XqxQurQ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="A0NrxGGfURB7" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Jsebh6Qp5lh2" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="aKs0DjRWZ35G" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0vfUMoa8r3Ww" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AW4FFlFFesi0" name="__stop__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0HcZLioVCsiR" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gI8WLdSuvIs8" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bvfFlNFRdLvy" name="control" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JyoTqUuRPZeA" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wOqsejye0bCL" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uraXCVU7rIzW" name="doMethod" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GaE5tDZs8isf" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1x80WILnG8G4" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="c9T2g7Abyk69" type="XuQFiMc2W6AS" value="" name="bar" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yCSFKhHwqlwW" name="doEvent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="LiWTOO6LYXYs" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="s77ppEw3mA9d" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Epn4ajaRogGe" name="doRaise" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8DChkkXyaK08" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sCfcKoGfVm8r" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2YZoCpS4z6hH" name="doStatic" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="uvwNh3FnGPSy" type="XuQFiMc2W6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="A0wiIuqISQ7f" name="doClass" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="S6igWAee8YMR" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DXhDdMUWHPtw" type="XuQFiMc2W6AS" value="" name="cls" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="Ngjo71dC1kqm" xmi.id="954QUK1r0ig8" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nW4FNdhKdnyM" name="IMinimo" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="UUmEMxR7RTKo" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="Ngjo71dC1kqm" xmi.id="jCCjuqpc57M4" parent="nW4FNdhKdnyM" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SCjscoVoMDzx" name="DomeTest" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="aaZi8v9a6rRi" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Z1GfqhMVbqTj" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="40rgpKN9ijMX" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KQMFooyYx0jW" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xnhWRZB1YPeO" type="XuQFiMc2W6AS" value="" name="manager" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XI5SHmzEXgkz" name="init" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="K4griOquIodZ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Dt0lJc7Ndz1S" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HOZ07tXcBa5S" type="XuQFiMc2W6AS" value="" name="config" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Rlw4kwU1K11Q" name="main" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Z6ipvLOK6IMo" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uW2545WO9CGq" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="SCjscoVoMDzx" xmi.id="aaZi8v9a6rRi" parent="XRTpqLjIRRyv" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EqoXrnxjKzmO" name="MeadeDebug" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5IlCT1027ip0" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zPY48N5AYNI2" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7XTgumguzORy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2FiWyvqV7qLE" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dWRjSqFRDmUJ" type="XuQFiMc2W6AS" value="" name="manager" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JFTO3mchH1Oj" name="init" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lOF0QdjFDqGa" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pb93NdMT8q70" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cnvZ9KXSZyoa" type="XuQFiMc2W6AS" value="" name="config" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Td1ZR8a1vVa4" name="main" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nXG0NVZp8YMZ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="p8UM6GupdAn3" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="EqoXrnxjKzmO" xmi.id="5IlCT1027ip0" parent="XRTpqLjIRRyv" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hwacP8fEG7YL" name="MeadeTest" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="MT8zdw0ORGNm" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fnP62mqleQb7" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TDz7baEvZR6T" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KzEAuyQzLtGo" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="svcIeQJJDiNF" type="XuQFiMc2W6AS" value="" name="manager" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PUQjNhVDa7TC" name="init" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="aIg8Q9KvwpcR" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VmVjVswy3v5f" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VIa3jeU69tnU" type="XuQFiMc2W6AS" value="" name="config" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fXNgQQLuiuxP" name="main" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xIrt7SIkzdRP" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YPUfIHAsaq0y" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="hwacP8fEG7YL" xmi.id="MT8zdw0ORGNm" parent="XRTpqLjIRRyv" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4kJkeE8Becqu" name="MeadePEC" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="tynRmlNk4Fb9" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Yi6axiicaaE5" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="gouGM8JBMw1t" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pGfqZxU4NJCR" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xEKX1ftZM08J" type="XuQFiMc2W6AS" value="" name="manager" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tUyGl8fiMyDN" name="init" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ZyHtwSGWZ9Te" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="b7ux70Fno71A" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FILaFLT6pRLa" type="XuQFiMc2W6AS" value="" name="config" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9gPwnQ61hQbw" name="main" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="o9kNGC2OsRKe" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="l42YUL61KLtE" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="4kJkeE8Becqu" xmi.id="tynRmlNk4Fb9" parent="XRTpqLjIRRyv" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qQfXoERZGR5i" name="Example1" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="nCk7VdJJk4hz" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tTUcV9blowqu" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="RyS6EcG63kiZ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bapeyEYX7yNP" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rHIfB8YmhNQd" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="5gm7PSgGjyuu" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bxAgvY3MUVQg" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5Semp5PO2X5v" name="doSomething" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="mZUm6ZhAeufE" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="56FXafEdLyki" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RQzANt3QJhC8" type="XuQFiMc2W6AS" value="" name="arg" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="qQfXoERZGR5i" xmi.id="nCk7VdJJk4hz" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZrptqabHyYPL" name="Simplest" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="PQji8vosSJdX" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ze3RxgynzbGA" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xrb2wRDv3FN0" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uuu4QW4UjJXS" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ZrptqabHyYPL" xmi.id="PQji8vosSJdX" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tJlqtz0nuvrI" name="FocusFit" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="ZLzcYKaSdLIW" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0AnbU56nMN0Y" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="VdeHHCcHNPsp" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WT9VkshGC2ud" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="tJlqtz0nuvrI" xmi.id="ZLzcYKaSdLIW" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VycrMaOq3XLl" name="Autofocus" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="Q22a2wDXXpno" />
        <UML:Generalization xmi.idref="KbFCPNQjsU8v" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="VycrMaOq3XLl" xmi.id="Q22a2wDXXpno" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5Eya4jM48PRx" name="IAutofocus" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="VycrMaOq3XLl" xmi.id="KbFCPNQjsU8v" parent="5Eya4jM48PRx" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0imsAsm086EY" name="Extinction" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="Ut04T3gnRKFD" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Q4hpOu3lWLok" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Ue2xzRrOTWDs" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tsv9kxYTlvHg" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QGbuaQcTIYb1" name="extinctionComplete" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ddBu9ktdrLsp" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="V7SF0hvUKvPJ" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KEhokve89F1j" type="XuQFiMc2W6AS" value="" name="data" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2lJMehezvLne" name="__main__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="y39nOzcOiujN" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ERmOen5IPEAW" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="0imsAsm086EY" xmi.id="Ut04T3gnRKFD" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bLKWg7AvWvJ8" name="ExtinctionData" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="gMO5bYcXbjLx" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="bLKWg7AvWvJ8" xmi.id="gMO5bYcXbjLx" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jGhI00Ghwa6j" name="ExtinctionHTTPServer" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="brAxv3x54tk1" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="jGhI00Ghwa6j" xmi.id="brAxv3x54tk1" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FyAJpsIuNuX0" name="ExtinctionDatabase" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="BHMihyF6tRQL" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="FyAJpsIuNuX0" xmi.id="BHMihyF6tRQL" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WQXNrxiYQ5N6" name="Photometry" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="RF0iHDpAgqN2" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ceUHUqHmPppR" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xzN2OCO1qtIK" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XK2gJxdEb7XH" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hZ44MuVsCXWV" name="calibrate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="zgaBB4eeDMhQ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="T9i2FFJCChEZ" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="taYkRo28N7Ai" type="XuQFiMc2W6AS" value="" name="imageRequest" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="WQXNrxiYQ5N6" xmi.id="RF0iHDpAgqN2" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ayckdoJXNrFo" name="PointVerify" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="fFv1K5hJjFUv" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ayckdoJXNrFo" xmi.id="fFv1K5hJjFUv" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OAO7Nq0gxWBP" name="CantPointScopeException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="SsTCCxIY7ggV" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="OAO7Nq0gxWBP" xmi.id="SsTCCxIY7ggV" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="w8j1nPUI1ekC" name="CantSetScopeException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="wc1Hqh9C0ohE" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="w8j1nPUI1ekC" xmi.id="wc1Hqh9C0ohE" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5W83KpHF0799" name="XEphem" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="lGBX2E5DlsQx" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="5W83KpHF0799" xmi.id="lGBX2E5DlsQx" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xt5imVdAGghM" name="ThreadingXMLRPCServer" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="a7ZooEAuOfv8" />
        <UML:Generalization xmi.idref="NPkOWvFR7ryP" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="umU1bTPXOfhl" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wZfKsoXJDvGc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZpsGo2PYPJBD" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SROzQv1JhVIG" type="XuQFiMc2W6AS" value="" name="addr" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="whoIMV3uJuA7" type="XuQFiMc2W6AS" value="" name=";" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oHvTlDjfvXwF" name="shutdown" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="oZ10SHcGZVjI" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1x9IrKNmr04k" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iSxbyrpxpwFg" name="get_request" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6yjdRStAtrjp" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="EaQ6aUoM3pMT" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="69V0kjFBAgbi" name="SocketServer" >
       <UML:Namespace.ownedElement>
        <UML:Class visibility="public" isSpecification="false" namespace="69V0kjFBAgbi" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="J9z9qn1nf6UP" name="ThreadingTCPServer" />
        <UML:Class visibility="public" isSpecification="false" namespace="69V0kjFBAgbi" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TuPyQVHFxxMO" name="BaseRequestHandler" />
        <UML:Class visibility="public" isSpecification="false" namespace="69V0kjFBAgbi" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DFtSoUfA2F9F" name="ThreadingUDPServer" />
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="xt5imVdAGghM" xmi.id="a7ZooEAuOfv8" parent="J9z9qn1nf6UP" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="xt5imVdAGghM" xmi.id="NPkOWvFR7ryP" parent="ios4RlDltUFg" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iWmVTzChXan7" name="serverThread" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5BiclWhm5ArU" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8d4DovfkIcTu" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="5P2L1WGhuTRc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gQFjh4a2Iyub" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LoyrSu8YWAlI" type="XuQFiMc2W6AS" value="" name="server" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="X1cnxUPGIL7i" name="shutdown" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Yz6SSX2xWcjR" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FDGjO01RP4lQ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="78hNTm6gxMQL" name="run" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="jUqD7ZeEfLb6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KPlhTW81VEUv" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3bT4QqYVmH6E" name="threading" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="iWmVTzChXan7" xmi.id="5BiclWhm5ArU" parent="i0MZp3MVa613" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5fl209MKY722" name="ChimeraXMLDispatcher" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="b814KTx1ylE5" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0HDy3R1KHIIS" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JsHyBq5GWoIU" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xemVjoVIuXMC" type="XuQFiMc2W6AS" value="" name="ctrl" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7Lib9154draL" name="_dispatch" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JJDXElnYKM99" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="e5dWcyjbFwZG" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MZadrr6wCmXK" type="XuQFiMc2W6AS" value="" name="request" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ncOPSwk62Lac" type="XuQFiMc2W6AS" value="" name="params" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DF6N2dfnE4Ag" name="XMLRPC" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="yskyEIbXcm2o" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="DF6N2dfnE4Ag" xmi.id="yskyEIbXcm2o" parent="psCjOJu1QKPz" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ZwF9iHvE5F3D" xmi.id="k0YR3F8kddc1" parent="Rvn8CIa99AA3" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="qHHVmJCFY8Uq" xmi.id="GyNb4CpMeQPy" parent="ZwF9iHvE5F3D" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xrz2kWm2eVRA" name="Commander" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="9XcdMQAIG7I0" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="x8iDF1Bq5B5d" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="H8ZMJcxt7vPa" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cVzWV5aIsWR3" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5NQBtOboWIzj" type="XuQFiMc2W6AS" value="" name="controller" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="00srUHuZeIiW" name="quit" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="rlyT4gxivGtV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gHIAZGrqOQBg" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="36Z81xh0vZrP" type="XuQFiMc2W6AS" value="" name="from_here" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WiJs7UYAb8Ga" name="do_EOF" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9skiyyH1upzP" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3xayVPNMBJnD" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xlvszmLTVfJc" type="XuQFiMc2W6AS" value="" name="args" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FKjQdWdYFWQC" name="emptyline" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4UmyJjNY34we" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JmdmPxOYp6Fl" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bXAo4azLKc7j" name="default" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wKYExdwS6Anf" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XTGKZT5dxraE" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Yxlb2fDbDNNF" type="XuQFiMc2W6AS" value="" name="line" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dsGYiqkGmVqm" name="completenames" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="5wQ83t4lHTZq" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="B1NMNiZH37Ty" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="kPOoZBTA2hgk" type="XuQFiMc2W6AS" value="" name="text" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WRyIum43oPP9" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="c0zeifME4JUz" name="_execute" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="OOTilY6zhEUI" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5Y2rvQy0MO7O" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="G99VchJFhIrN" type="XuQFiMc2W6AS" value="" name="cmd" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wEZ0V3zaZ0QS" type="XuQFiMc2W6AS" value="" name="args" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vnVa6My2YX03" name="_do" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="LmStISxpQXtK" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Zyc6w2ZKO029" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Y78DLaVEO0oS" type="XuQFiMc2W6AS" value="" name="args" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZSexQf5wmBA5" name="_complete" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Mesi9ofkHYAl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mdHAc5axq2o6" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SjtrGmBpFolf" type="XuQFiMc2W6AS" value="" name="prefix" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TqcD1kGnNXvx" type="XuQFiMc2W6AS" value="" name="line" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cTuQVjWwSPnj" type="XuQFiMc2W6AS" value="" name="prefix_start" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="CwWPkH2D7cO7" type="XuQFiMc2W6AS" value="" name="prefix_end" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Fffh2SOCMvZ7" name="_help" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="1sDHQL0fyfL1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AcIIEhNZJFFT" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5jBRclYnNr3Z" name="__getattr__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fce0RfXv3eie" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WO6ndLGfCRua" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="luGjZZicGu3r" type="XuQFiMc2W6AS" value="" name="attr" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pXcnApfrKQfp" name="Cmd" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="xrz2kWm2eVRA" xmi.id="9XcdMQAIG7I0" parent="pXcnApfrKQfp" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xxH9MBk73yra" name="Console" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="VZClRGa6qE6F" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2mAq0E5qqDi4" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JT1vGCzGy97x" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4DGr0bzwcFvZ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LAnAOTESfUHd" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QkQMrVJCe4K2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3HXdWSCpwDlA" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WZSB3jm50JiW" name="__stop__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fAmJD7Jjglsh" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lvKf63nUnCrc" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VemVxV0gOIKU" name="__main__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ZaqDLivoKfKF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="L7z6HoixwUG9" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="xxH9MBk73yra" xmi.id="VZClRGa6qE6F" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8IwWaE1tJyzb" name="_ConsoleControllerSingleton" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="mhYi9msjMiwg" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EPya6sETijAB" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="2HvAjTRxqPVu" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="T7mWyu611aM6" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HkNxRW6udtOa" name="setController" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="sJOUAm2vFbiI" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lVZn3vr5DnDw" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Get41MzH6MCV" type="XuQFiMc2W6AS" value="" name="controller" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XYMkLZeZCVdD" name="setCommander" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="1m6DHjP8Kr4F" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rcSwxfRnwpH6" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cH1pti8QGU8Z" type="XuQFiMc2W6AS" value="" name="commander" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WU2QJIWtZWjS" name="quit" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ov66k8LFcOfu" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="EpqSHyzIi5Wz" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eClDiUeuJUKY" name="getManager" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="HcDuytmc3Xol" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RJr9OL7AGBHy" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0SdHwxqNGhVc" name="getObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="dHhtyCTymFCV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2cmGl1E2eQua" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JgBMCz5CRiTL" type="XuQFiMc2W6AS" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="8IwWaE1tJyzb" xmi.id="mhYi9msjMiwg" parent="Rvn8CIa99AA3" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="HRXtpSR86cSI" xmi.id="bXS0DwKqD1hA" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NeU3DLONSXXS" name="Error" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="r8fjiTolkwFr" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9narkpiTkShs" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="k0PUQ6MD9kwz" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="n2NlsuwzoQaF" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ScTaKSPRGxIy" type="XuQFiMc2W6AS" value="" name="msg" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eqyQHWdh96IR" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="CBjJveGYUEwl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Zfsna8jK88pW" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="NeU3DLONSXXS" xmi.id="r8fjiTolkwFr" parent="HRXtpSR86cSI" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jaRqghFDM7yw" name="Hint" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="FhELp3r0FYJ8" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="20UFXoMhOyK8" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="qBMC9hLfQxJw" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XjegYxU3WTt9" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Se27bBabC4rh" type="XuQFiMc2W6AS" value="" name="msg" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ulzOErYfTYk4" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="clQ0ijwaVuzh" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jKftPUaFfvSn" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="jaRqghFDM7yw" xmi.id="FhELp3r0FYJ8" parent="HRXtpSR86cSI" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HRXtpSR86cSI" name="Message" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="bXS0DwKqD1hA" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9RdKQKUbSbUp" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Dd0dCUS4PseH" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uuScsx9FsmjQ" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tUXThcIq2tAQ" type="XuQFiMc2W6AS" value="" name="msg" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="onUgZC4QgZrN" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="5G8U9mjxZDb6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="A9BC2JaDuaq6" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="jXMC57EmPtgo" xmi.id="OE219SmjDCjt" parent="HRXtpSR86cSI" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KFhuyMjMOvzB" name="Namespace" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="dqGE5brPpYJn" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8sdxRwkKwrbp" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="HlJTIKhOBLLc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="w0TfLYJyKwRV" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="F3uAsTxpUPSn" name="__contains__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TgZx50i0kRIO" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xklHeAmvw4MC" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="M4aXNt7au1km" type="XuQFiMc2W6AS" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="b2HV6efTgF03" name="names" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KD52cLQCOghU" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="66d07Mla0KV5" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="letTxMgyqPlq" name="list" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="KFhuyMjMOvzB" xmi.id="dqGE5brPpYJn" parent="letTxMgyqPlq" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KNvyau1h0cf5" name="AliasCommand" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="wQgwj9z3L54x" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="toCErGAGiJ0r" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="NVspFfz6TBLJ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6FHGOezO1MPz" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RVZ8mXztnE79" name="execute" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="V5Wrn7R9i6zT" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="s6VuRuroNjba" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Obhqm09CVgKF" type="XuQFiMc2W6AS" value="" name="args" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DH8yVG7OKbGj" type="XuQFiMc2W6AS" value="" name="namespace" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="66dZkvpwCvuh" name="longhelp" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nLJTRHuWNX36" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="903SbHB4NfvA" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Sq2cmwKtuLLV" name="shorthelp" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="gHi2nl8DcAqM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dVayAT8voPNE" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="KNvyau1h0cf5" xmi.id="wQgwj9z3L54x" parent="ZwF9iHvE5F3D" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="48FzRZU4220A" name="ObjectCommand" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="W86IWTWCiCEV" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="MGu4S7YORFuu" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="HR1Ax61b2KRp" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="kkRNqxRStY7s" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ewLsp5aBJUDj" type="XuQFiMc2W6AS" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bj63w0xelM1Z" type="XuQFiMc2W6AS" value="" name="obj" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="N1ygWAO7tUAo" name="_getCommands" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="qsQrArgYrfCN" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="S5SBRSkitkro" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="paUg4dSXgvi6" name="complete" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="qcRUexJIU9OR" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LTmEDd21TQsc" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GZA7CMSzxudz" type="XuQFiMc2W6AS" value="" name="prefix" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="X6WCzDIKe2Wr" type="XuQFiMc2W6AS" value="" name="line" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gYq7xjjDIrIS" type="XuQFiMc2W6AS" value="" name="prefix_start" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="CkR9e48A8dM7" type="XuQFiMc2W6AS" value="" name="prefix_end" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="q5c6vuY7cxEG" name="execute" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tRuA565gaIlC" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2KO8xiGlIfDv" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dUD5cZUSf6Za" type="XuQFiMc2W6AS" value="" name="args" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="y5fa3to3DBB9" type="XuQFiMc2W6AS" value="" name="namespace" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qFfVJC3HHipK" name="_getMethodSignature" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="WTDn906iaTVK" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bbNmkXvcwom1" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="urhU7ShxfKQy" type="XuQFiMc2W6AS" value="" name="method" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yQwvCgw6XeZd" name="_methodHandler" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6KqWEf86ZPZw" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4EakY1i4Supc" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uvIUNnnLChGO" type="XuQFiMc2W6AS" value="" name="method" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OBTvp2YtG7do" type="XuQFiMc2W6AS" value="" name="args" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CMFO3WlPhEJU" name="_configCompleter" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="RaxiiW9S9jmC" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GrNWwzI2H8ZT" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lfZK46GFSUdU" type="XuQFiMc2W6AS" value="" name="prefix" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0MrfaA7q0UKw" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="p1RGV2iTPZ6z" name="_configHandler" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="qNXFvdDdq1LV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="kDokf6e7hbnP" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5xpFecPRbqf6" type="XuQFiMc2W6AS" value="" name="args" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="48FzRZU4220A" xmi.id="W86IWTWCiCEV" parent="ZwF9iHvE5F3D" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7zaobMCgH1tv" name="QuitCommand" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="bIMC62GxNnCI" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7SfUEplcDepZ" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="eyAI5OyAode2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rV35jIsKiLBA" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QNfd0SBrvCwe" name="execute" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="LvdRPbaEZru8" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UmwD58Lk6V09" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ryJgZvizJLbH" type="XuQFiMc2W6AS" value="" name="args" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lm8ew2HRoDct" type="XuQFiMc2W6AS" value="" name="namespace" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="7zaobMCgH1tv" xmi.id="bIMC62GxNnCI" parent="ZwF9iHvE5F3D" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nb66uhNeRTIL" name="SiteCommand" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="VZkJnMA8GmYf" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eZZsJ5VhBMe7" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="aKYGbvgDTF5m" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6fsRnfdZpUnS" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IYTUv5b1jSRW" name="list" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="dPUjHpT4rPH6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="745vWqL78uLk" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="n1xEF11XZS1S" type="XuQFiMc2W6AS" value="" name="args" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WbSF3tj8vm3P" type="XuQFiMc2W6AS" value="" name="namespace" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OGdvidOCCqPF" name="add" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YmKMGWNXBTeF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="h6LatPzUoUD3" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Jf584MCQcoLJ" type="XuQFiMc2W6AS" value="" name="args" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PjVbXtqCzBms" type="XuQFiMc2W6AS" value="" name="namespace" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pqdSeyl3gEeD" name="complete_add" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="LAND94gHfIJV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7SO5cAvAwGVA" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="msgxLKA9AnZn" type="XuQFiMc2W6AS" value="" name="prefix" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jKoPWRbctzhT" type="XuQFiMc2W6AS" value="" name="line" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9ce4s7CcxsXH" type="XuQFiMc2W6AS" value="" name="prefix_start" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AhQLSz6CHubl" type="XuQFiMc2W6AS" value="" name="prefix_end" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qHHVmJCFY8Uq" name="HighLevelCommand" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="GyNb4CpMeQPy" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6xfkO2is3x7h" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9zNLjmqjjsyc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Ui9JZ6vjEjRV" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0z2HsAYw5DhT" type="XuQFiMc2W6AS" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DNJGKPxp546e" type="XuQFiMc2W6AS" value="" name="aliases" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0WW6hBXuZr8r" name="_getCommands" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6R8pI6PIawMF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="G4eL8lyFkJbR" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7s9ehGUvK8EQ" name="_getCompleters" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="EnFnhZ2oRAR6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rCgaUH1agANy" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Qv1k1GAtQqRu" name="complete" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="y3d71KopkKE3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5SSkaqipdvcK" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Te6uoVzEO0wQ" type="XuQFiMc2W6AS" value="" name="prefix" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="E7HfviXz80jj" type="XuQFiMc2W6AS" value="" name="line" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="oPWRJ6jmkneX" type="XuQFiMc2W6AS" value="" name="prefix_start" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Hdjfeg3slIVe" type="XuQFiMc2W6AS" value="" name="prefix_end" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Qxp8iTdx5Ldj" name="execute" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="iXnoVjtnUpoW" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zeZkx5Mt6yy7" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Imw24A5S5sZl" type="XuQFiMc2W6AS" value="" name="args" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KAjPVK6UyfCt" type="XuQFiMc2W6AS" value="" name="namespace" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="nb66uhNeRTIL" xmi.id="VZkJnMA8GmYf" parent="qHHVmJCFY8Uq" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PV8LMfaWL0pl" name="UnaliasCommand" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="xtxCoXx7hJKp" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mYFUraHDZLBq" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="mT28lfGVEWx3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ghVWJThZ3K9Z" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6EGfXSTD7zkP" name="execute" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7SweUYsBOc7l" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SPwUh53TX4cG" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jslvOjzSvD5T" type="XuQFiMc2W6AS" value="" name="args" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dZglWO8wn4OS" type="XuQFiMc2W6AS" value="" name="namespace" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="L6DGJHjxoOgK" name="longhelp" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="SSgr4naNrneB" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="moEYsd0x3wcV" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2L6qhk8UYL2O" name="shorthelp" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="woonaQwaj0RR" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="w0JzxtSNM8EQ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZwF9iHvE5F3D" name="Command" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="k0YR3F8kddc1" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2UKd7vcL2x6P" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="sUduQhJ4HdKW" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="eZKGHLZFK2GV" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bUP6HlgHDzsI" type="XuQFiMc2W6AS" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zsjHuzkTU8Zj" name="name" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="gGovs6SryB6r" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tEz4DrM5Kzzk" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BqIdyqKp4JrF" name="aliases" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="5EE2OIrZ79A3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="BDKTCHDrVzmN" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zUt3miGvwaO6" name="addAlias" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xtBrSZyH8vae" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pZxLYkidwvdK" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DUrKc1ObUFdG" type="XuQFiMc2W6AS" value="" name="alias" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dHFaCtsNLkgx" name="delAlias" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yx6JfmFNomY1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="j2ZBFARA1a2T" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="70jDtJrXY75k" type="XuQFiMc2W6AS" value="" name="alias" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wyBxYDPgB8t5" name="execute" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4RUcBYqgqPwv" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Playqdgmak3E" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WIbI47J05Twe" type="XuQFiMc2W6AS" value="" name="args" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gLKqRBtouRki" type="XuQFiMc2W6AS" value="" name="namespace" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XEtahpEL8WBX" name="complete" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="FptvXG4JyhdR" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="i2MaT6JXVn8f" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JwLAKF3rTwRA" type="XuQFiMc2W6AS" value="" name="prefix" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="keUqAfOqgkP9" type="XuQFiMc2W6AS" value="" name="line" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="oifKTnznhIv1" type="XuQFiMc2W6AS" value="" name="prefix_start" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VyqzsI7cubR2" type="XuQFiMc2W6AS" value="" name="prefix_end" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SaCAq7BM50Ly" name="longhelp" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JEbFwCfMnrUb" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GQYA2zCHm3CH" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zex2eGyuhX4h" name="shorthelp" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="IUb5L5eIjcJN" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UEyFI8WZM5pG" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="PV8LMfaWL0pl" xmi.id="xtxCoXx7hJKp" parent="ZwF9iHvE5F3D" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kZtGstcotwlo" name="ImageRequest" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="k0JTyksjIlzA" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pTH7CEFpoCJK" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="p0jcC0u5bYwh" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vder899zCh3b" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GoiqsIOhjdmu" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="f3grihQzV8pO" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="h66Je20I4h7m" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PB38mq2ZqjB0" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OYlseYG1jHAT" name="fetchPreHeaders" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="B2WsKeKPnNLd" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7A3vsEwZI2sv" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2rD4YKruscmV" type="XuQFiMc2W6AS" value="" name="manager" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZFAsF1nFs0KQ" name="fetchPostHeaders" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KclCa5atEv4y" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KBKBl7eu78lP" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="n5nYQ6BzJLrY" type="XuQFiMc2W6AS" value="" name="manager" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0gq5obTbgE76" name="_getHeaders" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="FL0jF7nBolMP" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KI4dct9wWu94" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="yhxAc18afzeU" type="XuQFiMc2W6AS" value="" name="manager" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Y55DJDHbTLE3" type="XuQFiMc2W6AS" value="" name="proxies" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pDCBMOaIBM3j" name="dict" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="kZtGstcotwlo" xmi.id="k0JTyksjIlzA" parent="pDCBMOaIBM3j" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kUxQRZuyexBx" name="ImageServer" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="8SYamkd15diJ" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="kUxQRZuyexBx" xmi.id="8SYamkd15diJ" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GS1J4jamA3HN" name="ImageServerHTTP" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="rBK61dnSqRVy" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fuFVJjUYDh1D" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="LzBWgBiQh9hk" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mWTH21qF9BdK" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="oNKbORO3LcXd" type="XuQFiMc2W6AS" value="" name="ctrl" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AXxHhabVww4K" name="run" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="eYwMic4q918o" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NRLh3sKMrTsY" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ajKWdMo1n9gq" name="stop" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wS83REs1xAXb" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="20ArR3N6ZKQH" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WJaKTG8TEJId" name="index" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lqjz72dRgKJe" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Kgjty79uXHvz" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Vl0QvWzQpXkG" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QSWxjRwCDva6" name="image" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="UyEhtonIMIWU" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RaWE7EVt5EqC" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ERcukvY8N434" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="W1LbG9mSZONJ" name="list" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="x0oWM9nd2CFy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HtPeySgQQu7J" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="isb588Xf7qEL" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="i0MZp3MVa613" name="Thread" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="GS1J4jamA3HN" xmi.id="rBK61dnSqRVy" parent="i0MZp3MVa613" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="fvO5pTPWMyZS" xmi.id="447CuMXrMJMh" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZA7wTTbwbvRx" name="InvalidFitsImageException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="Tswxk0E4S1hs" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fvO5pTPWMyZS" name="ImageServerException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="447CuMXrMJMh" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ZA7wTTbwbvRx" xmi.id="Tswxk0E4S1hs" parent="fvO5pTPWMyZS" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2dWUeCKz1fk2" name="Calibration" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aldfs7DQDgZE" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Kni41uQQSjoc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XfgHh6kjjEEM" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QYLQB6Qlp1Qf" type="XuQFiMc2W6AS" value="" name="caliblocation" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9c5MIcapHG5y" type="XuQFiMc2W6AS" value="" name="writeto" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nCNbEmGNOKhe" name="makeZero" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="mEhDxVplhAMt" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wHTEVWAoJsqJ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="waGIuvwpAO1g" name="makeDark" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hoCMxWGt7UCz" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uBSE2IXoWEzT" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Q6maUnEPxgdz" name="makeFlat" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="bbMi4WfUcS25" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="w8lSMlu1X6NU" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FFUAt59qDtIX" name="Reduction" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="cAY9FtcqVwYZ" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="FFUAt59qDtIX" xmi.id="cAY9FtcqVwYZ" parent="psCjOJu1QKPz" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="oNUHH0ojBpkp" xmi.id="qpe5PfF3oFvo" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="C4r2gxjx4puC" name="Machine" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="qyPD7cZ1GoaZ" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wMvD8TkonA0n" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TTPcFXVrcxF3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Su0niFoO9m9s" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="c7SQRCKOYFZg" type="XuQFiMc2W6AS" value="" name="scheduler" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gJUTRSHuLFh1" type="XuQFiMc2W6AS" value="" name="controller" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9ZPgmwKTDnuf" name="state" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="R0hfncK1lpX8" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="D9XYPEZshzSu" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Uxj6sw72WXgG" type="XuQFiMc2W6AS" value="" name="state" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="37yi4RaYOHcH" name="run" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="FdizSF7TK69O" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DjHhExygxfLj" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VhuryW89GNrS" name="sleep" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="qmtBq2XLhSDd" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Kp8GSRxi2dfS" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wJnAhedzRlDr" name="wakeup" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="cK7HkIvhZirE" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DAXFlCiczbnn" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KUEjEPaRY8eJ" name="_process" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ryLP40hMIccC" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IKvHug3U1Alj" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SgQ1MGGeiSNw" type="XuQFiMc2W6AS" value="" name="exp" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="C4r2gxjx4puC" xmi.id="qyPD7cZ1GoaZ" parent="i0MZp3MVa613" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JfeInQ1D6QCR" name="Constraint" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="amltNN3e0iwl" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1evzKplQkhb4" name="checkMe" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3KkzyLEzx9yI" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qAzOpHoxouQ0" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="JfeInQ1D6QCR" xmi.id="amltNN3e0iwl" parent="eQ5MsTHiPc5R" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yhgjNHlDSiZH" name="Exposure" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="yNDmHbkJwSIu" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="yhgjNHlDSiZH" xmi.id="yNDmHbkJwSIu" parent="eQ5MsTHiPc5R" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PEXJhnDSI4Bx" name="Observation" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="rAYKoqCjtE4c" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="PEXJhnDSI4Bx" xmi.id="rAYKoqCjtE4c" parent="eQ5MsTHiPc5R" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vh3ov5RkjlYB" name="Program" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="bZ0d68NQRZ2m" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="vh3ov5RkjlYB" xmi.id="bZ0d68NQRZ2m" parent="eQ5MsTHiPc5R" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="q7PGeR0azz1f" name="Setting" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="TlEdXbkNOXvv" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eQ5MsTHiPc5R" name="Entity" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="q7PGeR0azz1f" xmi.id="TlEdXbkNOXvv" parent="eQ5MsTHiPc5R" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3CgRjcLcHLQc" name="SequentialScheduler" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5DnuNDLzdOY0" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cbgDxCBMy1ZA" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="gdj22zhcYLpW" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="G3PiE4p02Y2L" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XzsV0QfER2wf" name="reschedule" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="RdtsgoYlVAsn" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7je9IeVyHCyI" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AfuiyiCVh30f" type="XuQFiMc2W6AS" value="" name="machine" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oNk5YgLiKGOI" name="next" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tTpPdhAR3uVZ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wbobemG5Q7x4" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bqHv4dD0Ezbq" name="done" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="BuiNrHEd59n0" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mpvAvrEmI1Bw" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iMLjEoInfXij" type="XuQFiMc2W6AS" value="" name="task" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oNUHH0ojBpkp" name="IScheduler" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="qpe5PfF3oFvo" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EwY19RpbjGTt" name="reschedule" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="AYkrmBkE9ZF6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Syp1w2qv1N3n" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="byPhX7Cj1jk9" type="XuQFiMc2W6AS" value="" name="machine" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Z4zYP2L0yliV" name="next" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="qKRzre3Ri2z5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qsCpZvykRgbD" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2J602oTsegfE" name="done" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wgEZKuntWhrm" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Zcw0GXD6pe6h" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="I96zA34CMADO" type="XuQFiMc2W6AS" value="" name="task" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="3CgRjcLcHLQc" xmi.id="5DnuNDLzdOY0" parent="oNUHH0ojBpkp" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yzmH0wBhGWQU" name="MoonDistanceConstraint" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="dzJi67g34QK5" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8EFDdZGx20Yz" name="getMyKey" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ctYjx7v3JAEw" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8bI0sW27QTBg" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hSujSQhb1zZt" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DHyVSCP9dHr5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VZyw08ac18Mw" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hYegVBX0kUul" name="checkConstraint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xictitHrfgix" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cUNbbhYmzUHP" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ehYHwNLcvzIQ" type="XuQFiMc2W6AS" value="" name="paramMin" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="BoPtIHcsm0TL" type="XuQFiMc2W6AS" value="" name="paramMax" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hz7eTP384aN0" type="XuQFiMc2W6AS" value="" name="exposure" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LhGyEwfNqLli" name="IConstraint" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="yzmH0wBhGWQU" xmi.id="dzJi67g34QK5" parent="LhGyEwfNqLli" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="wLniJG3yEAdh" xmi.id="XenbE9aCrA3X" parent="Rvn8CIa99AA3" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="zwyuzvehIKxj" xmi.id="RrwYfpSZVVdX" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="88fCHqyjQETp" name="TestAutoMap" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="PonSF9J4vdg5" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6m71Pl6GqlJ1" name="setup" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GPv4OM8U8DTV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="EoKovnfrEEGs" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zZlnI3pVr7Jk" name="teardown" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GX6Ojatg7dTO" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vxc99q1NFuRc" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eItVQADJ5pSC" name="test_map" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7rtFSNd6dUZ1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dSZrMzTbUZxD" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="88fCHqyjQETp" xmi.id="PonSF9J4vdg5" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zwyuzvehIKxj" name="TestAutofocus" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="RrwYfpSZVVdX" />
        <UML:Generalization xmi.idref="cmKialuBDU2X" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Dv2iQfFotVAZ" name="setup" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ixOULpxYlzF9" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0kENJmjlykVS" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cSvVy44woHJ5" name="teardown" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ct9LqMUTpOwn" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="12qymMQSHmwb" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SzjEE2KF4ADo" name="test_focus" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="poKeCGPcD8oR" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UcGkOBL04SLt" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="34JHI8932wJO" name="test_point" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="PucVJclKe2cw" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ha6PtsK3yagi" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="zwyuzvehIKxj" xmi.id="cmKialuBDU2X" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AlxAgGYNqeki" name="EndDispatcher" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="OFt0IVwQErbu" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ttC6klyqtEkd" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="MNN9kghtw3vR" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FMsKhY2RPkQ1" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zvyTKyDDpNJY" type="XuQFiMc2W6AS" value="" name="cls" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9IO2W6fjSV19" type="XuQFiMc2W6AS" value="" name="instance" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="31YSmwRjrQCB" type="XuQFiMc2W6AS" value="" name="func" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9Y8b3Ak4BGVx" name="special" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="r2N2JsyTncV9" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Cwe2MqDgBaqw" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FXp9bjYiHhKJ" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="AlxAgGYNqeki" xmi.id="OFt0IVwQErbu" parent="X4jTfPB2HmWY" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="psCjOJu1QKPz" xmi.id="5CRKtlbilzl2" parent="RjocHeYU9Mei" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="psCjOJu1QKPz" xmi.id="VDFEjYCrLgBX" parent="AAtv7cyvJUVY" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dgM9OmyrjK3G" name="ClassLoader" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="QsfuZMvIVVwt" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Gakj3ha49cAU" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="jDjb4O1Iwm20" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jJQXoYg3ah1w" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ra2aDD3wWTRI" name="loadClass" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6QOZdU8AZwfQ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="z8LZpKWWVD5Z" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Z7qVtqTIQWsb" type="XuQFiMc2W6AS" value="" name="clsname" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jvYDNzTM5mws" type="XuQFiMc2W6AS" value="" name="path" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="m9iBfYmMSKZp" name="reloadClass" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GC2iUZXkZg6L" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="I2BLm5EsVaR6" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2XGbUu1E3jPg" type="XuQFiMc2W6AS" value="" name="clsname" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mKBFscKv7aWZ" name="_lookupClass" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yOPJaZ7KFecc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UWoVFBBTLDBo" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="kgYJNcc7unMn" type="XuQFiMc2W6AS" value="" name="clsname" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NgiTFC2jioDw" type="XuQFiMc2W6AS" value="" name="path" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="dgM9OmyrjK3G" xmi.id="QsfuZMvIVVwt" parent="Rvn8CIa99AA3" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="GCj9y4wLkcmz" xmi.id="mnhVbuPXGmrq" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wDC9ESaAr1kl" name="Action" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="PPlh3pgvHjrB" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="wDC9ESaAr1kl" xmi.id="PPlh3pgvHjrB" parent="GCj9y4wLkcmz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="R8YipPtkvrRf" name="Parameter" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="m8LtxAGEXlMv" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="R8YipPtkvrRf" xmi.id="m8LtxAGEXlMv" parent="GCj9y4wLkcmz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BbWiMseK5Lvx" name="CLICheckers" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WCGozFuB7iHn" name="check_includepath" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="BG64PHwkIyD3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xzFI1aYCB2vV" type="XuQFiMc2W6AS" value="" name="option" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sXnxsjuOv8Bs" type="XuQFiMc2W6AS" value="" name="opt_str" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="N33TlIGiGVyH" type="XuQFiMc2W6AS" value="" name="value" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3UTCWMhOrSMj" type="XuQFiMc2W6AS" value="" name="parser" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GRjUwflx9D9f" name="check_location" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="VGurj08sqN7t" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Xo1PHN8ScCXz" type="XuQFiMc2W6AS" value="" name="option" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RRjjPxmeMV8J" type="XuQFiMc2W6AS" value="" name="opt_str" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8sEH3OuaCwzT" type="XuQFiMc2W6AS" value="" name="value" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="H6wtIRsksaTG" type="XuQFiMc2W6AS" value="" name="parser" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="l2UvwTPDZJ5q" name="CLIValues" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="ivaaV3o0Hgs1" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JnYZTOY8NPei" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nLZAiBq1CdH2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="J1nGsp8AEC0u" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JgIMuGuE1QnT" type="XuQFiMc2W6AS" value="" name="defaults" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QODcYBWsqmEk" name="__setattr__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yem1f9hsNNFF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="16w2UjTH23Pi" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="CEiPrxPGLasu" type="XuQFiMc2W6AS" value="" name="attr" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mNkc9wKA2HBU" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="l2UvwTPDZJ5q" xmi.id="ivaaV3o0Hgs1" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LeVeFLWziGZs" name="ChimeraCLI" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="At0CABh9qR8T" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="LeVeFLWziGZs" xmi.id="At0CABh9qR8T" parent="Rvn8CIa99AA3" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="GCj9y4wLkcmz" xmi.id="gt5UIBxtyHp9" parent="Rvn8CIa99AA3" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="rx45HyXmk8jh" xmi.id="cE72DdXSCgMQ" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DbZtMKsBYkKL" name="IgnoreChecker" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="WyGlYY4OZHrc" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zKcZZRBj3GbN" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nRySsEfqWHN6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="X3sQ4EfNU4FT" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hWpkmP6ISwiU" name="check" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="336Typx99pmX" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="BMrdO669W2bM" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="EGAlYXrD4exo" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="DbZtMKsBYkKL" xmi.id="WyGlYY4OZHrc" parent="rx45HyXmk8jh" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="treNtFk8Vur1" name="IntChecker" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="SiEUMAIOBNr9" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Wc3izup9f6QF" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8bOTyhAUJDCI" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7EhxeYeJ5URW" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="52Pl6pyD1f8f" name="check" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fwrfbzInmF10" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DmwGGOnNz9qx" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qyQA9aQCcqxg" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="treNtFk8Vur1" xmi.id="SiEUMAIOBNr9" parent="rx45HyXmk8jh" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="boNYxBWm7wwG" name="FloatChecker" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="WMT7AOloIdTs" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3rNMSqE4arRY" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="WYGvDKUG9scb" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Vm6wSCLKmTKG" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iodGf2pBot5H" name="check" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="1N4oEA5HYe4O" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3Obpqt5MPJHc" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="blrkdTLKIzav" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="boNYxBWm7wwG" xmi.id="WMT7AOloIdTs" parent="rx45HyXmk8jh" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="W7ivRzY2lPnM" name="StringChecker" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="q6g65H05c4tr" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="moiPqZE3VKk3" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ekGEI4p4qVTh" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Vp8ob8TNeBtX" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4hiX0SYVHeHr" name="check" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="uAp9p4yZpCyk" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mlEQw7vZsCn8" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="EaC35ek7JScJ" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="W7ivRzY2lPnM" xmi.id="q6g65H05c4tr" parent="rx45HyXmk8jh" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ItJA34IGeSJj" name="BoolChecker" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="63oQTQjLYWSL" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2y6bSYu1xnQZ" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QROi4cV6YZf1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="eYSN0W7Tn7bX" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5Y23LQcyz4Jx" name="check" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="qL2nOLkuj9EE" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YQQKV1rtRFbV" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="s4ZOdDPilQj4" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ItJA34IGeSJj" xmi.id="63oQTQjLYWSL" parent="rx45HyXmk8jh" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="865ZJg29kaYN" name="OptionsChecker" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="nv4WLnaA7dvT" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Wt0dWv4QZR4K" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TM00m3LjyXLn" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zvEbrfXR6cm8" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DTwjBFZh8XIc" type="XuQFiMc2W6AS" value="" name="options" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AsCGUxOhOJOZ" name="_readOptions" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4WhSn41H2EtV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WyFcVXCwsCvc" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FELBlgwtY992" type="XuQFiMc2W6AS" value="" name="opt" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="m3QcDLERXZaI" name="check" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lwLITvYjShW4" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GXBoeIpimUAZ" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Y9qYOh48iSiw" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="865ZJg29kaYN" xmi.id="nv4WLnaA7dvT" parent="rx45HyXmk8jh" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zJkmnsJK28sO" name="RangeChecker" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="puWWMES58nNb" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sXM0Iiaydt5E" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="z0war2oVHaDQ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="eHokB8ZxljmX" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lw8fbDwTiHSy" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="imNUV71E27ud" name="check" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="07W2EQfUEiSI" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Io4y5Uw2UsdL" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sPq701Xgov8H" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="zJkmnsJK28sO" xmi.id="puWWMES58nNb" parent="rx45HyXmk8jh" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="COKhFv07JpFH" name="EnumChecker" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="qmxef4wgBQiO" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="48JFYzdMLUOP" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="RV2kxO8i3m9J" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lfeQGZLkTLYE" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YcoVc28e8Rug" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JS2nlazHAnml" name="check" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tQ23BooxhCq0" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="nvPvKHZjnbSk" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0aR1MaJf2LQl" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="COKhFv07JpFH" xmi.id="qmxef4wgBQiO" parent="rx45HyXmk8jh" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TQhE19xzjOz3" name="CoordOption" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="wIhwb7hUVjXh" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Zy95fhkAzOLT" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ekmHreWaIwJG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qUOhLWZLbO20" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DpNHHexpc6uH" type="XuQFiMc2W6AS" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="leQk0lBoEYTZ" type="XuQFiMc2W6AS" value="" name="value" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="42uePweak0pz" type="XuQFiMc2W6AS" value="" name="checker" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gU3u0WT5XLhw" name="set" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="OfIvyxrDHL9Y" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FJWxJLvy6fDv" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KjTagmrKFsEF" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GCj9y4wLkcmz" name="Option" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="mnhVbuPXGmrq" />
        <UML:Generalization xmi.idref="gt5UIBxtyHp9" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="E6tUtiLEfSpD" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="pdKS58fG7eK3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="B106ww0tmBaE" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AHRvb8FpF8I6" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YIwLTWXcmyXL" name="validate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="onLvPfwxwqGP" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7mBKsTQh4i97" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Noz7kWSpGb77" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8s14jGR42RBm" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2Xm4EuB2hUy4" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vbaABhHDD1IR" name="__repr__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="uT5wuEgonGyy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vRTauPe2Ie41" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XJYTYNdMLEKv" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="qn1vkoZ4DYhp" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="yfSLKgauNsFZ" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NWTkqpRL7zof" type="XuQFiMc2W6AS" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KP1dcKYax0uH" type="XuQFiMc2W6AS" value="" name="value" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="eS92IMbeq3Og" type="XuQFiMc2W6AS" value="" name="checker" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sFOnDG3qgAqy" name="set" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="SxT87H5cgf07" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XPaNQy4Hj3AT" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rjX3ICq8REud" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="c2ML3WptEKwU" name="get" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Fb9wE71q9NAB" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XmawzUXPRyYX" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="TQhE19xzjOz3" xmi.id="wIhwb7hUVjXh" parent="GCj9y4wLkcmz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="f2Ujhhe1P5a3" name="CoordChecker" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="sRN5HbKfGbZC" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="s176ceI82fuk" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="AogBSYtamzEn" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AE5e2BqWr4Nf" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pJG0azRSyWWa" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="85H07fduwtuX" name="check" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="mVT1WZh3XwNT" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qKxooSMxE16g" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZzGKyT55YK5f" type="XuQFiMc2W6AS" value="" name="value" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zgZuXSPOkMAW" type="XuQFiMc2W6AS" value="" name="state" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rx45HyXmk8jh" name="Checker" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="cE72DdXSCgMQ" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ASxM7Hntd2kL" name="check" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="s3CT3voUiiFb" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RntntXOyimlz" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rFs9nofxEaIL" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="f2Ujhhe1P5a3" xmi.id="sRN5HbKfGbZC" parent="rx45HyXmk8jh" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jXMC57EmPtgo" name="Config" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="OE219SmjDCjt" />
        <UML:Generalization xmi.idref="NQYvlbYiH5cp" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AcSLnACfod2I" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xsglVi3XnYVG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="46XxTuwxXfrz" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2XqdFgMNGng1" type="XuQFiMc2W6AS" value="" name="obj" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QPEx25u4ckhp" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="1Ulo0E5QdHLf" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="O2CdnsekkLTD" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="00Ke1c2khTd3" name="_readOptions" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4Zxj0ams06gn" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uPKppmLSExJp" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vmsuuFAuFUZE" type="XuQFiMc2W6AS" value="" name="opt" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="s1F6zZtsJkkD" name="__contains__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="RpViZDuW7ygT" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xu6CMdOQAL9A" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uu1s0hftgsxf" type="XuQFiMc2W6AS" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="b2rlMztEtu6t" name="__len__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="cbWiZCBAC1tW" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="blkIdiv3VPj2" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0nkthqkHZVXB" name="__getitem__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="essDNNMWnYAb" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="BQCgpvgQXC86" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MHFYI85Gvp7b" type="XuQFiMc2W6AS" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Sqzz273OMGwf" name="__setitem__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="NhCGPmSRjAHF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PztIn1rRthcE" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4xkqVsRxiQuk" type="XuQFiMc2W6AS" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Vw6rC2UZ0Oqn" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2gAk43SZzYP9" name="__iter__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GG3xQKCS1LA5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YrjWDXJaETob" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OcdN80UhrBD5" name="iterkeys" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="uKbtfky1MZMT" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iVfxyUYCkZA9" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZrAR2LUlo9gl" name="itervalues" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="kT353PYcGg1H" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bCxKm5ReQ2X3" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1T0obeZCqWUa" name="iteritems" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="SHqgxsvxJvlu" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="avEywl1gF4lG" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZK7OoZwOVBMP" name="keys" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4QzNMkIt4NFs" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uM57OpNo6EV2" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wCFPNZoFvsNI" name="values" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="UeDY1RPvdcLy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fk6jwbl00kOK" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="B7D5zaNcJRMF" name="items" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="vG8YsRU1Xg6U" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="17G1scLMEWtD" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ER7XtTluaztQ" name="__iadd__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3o0cnt2M3n7k" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZClnie0cs6Ai" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Wdj3JqVXFc38" type="XuQFiMc2W6AS" value="" name="other" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="jXMC57EmPtgo" xmi.id="NQYvlbYiH5cp" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="P5MH9Uxf7hgQ" name="EventsProxy" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VCwkmzrqlpQY" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="LqpQVVp0fljQ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hSskEzUd2qtB" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iYERNez44ppI" name="subscribe" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="BTmGGZY2rQqx" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mHuo6nzPbop7" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Ie5vNoL5MZWk" type="XuQFiMc2W6AS" value="" name="handler" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DoKnc9usozoB" name="unsubscribe" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QwXCtJLfTYo8" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="o9F8hjqsBd6R" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="CdS13GwF4G2f" type="XuQFiMc2W6AS" value="" name="handler" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GeyRF5qQiGRj" name="publish" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="05svn0hpUAJV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XMyZa0EyukAo" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3UTU2HcGuZh9" type="XuQFiMc2W6AS" value="" name="topic" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="eWXKmz1HJ0rt" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QulKTRR5vzNh" name="EventWrapperDispatcher" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="wOxDMo6NrwGf" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="QulKTRR5vzNh" xmi.id="wOxDMo6NrwGf" parent="X4jTfPB2HmWY" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="i4OrX8epAvS1" xmi.id="QNaGKqtHlNgp" parent="FRDTSCi1H5yV" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HRu4fmUfCtom" name="InvalidLocationException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="XTKMpadZOUGz" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="HRu4fmUfCtom" xmi.id="XTKMpadZOUGz" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lia9Cq6p0bka" name="ObjectNotFoundException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="s1RYALt4hrAu" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="lia9Cq6p0bka" xmi.id="s1RYALt4hrAu" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YzODqW7SXkHg" name="NotValidChimeraObjectException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="U8dvZeXmoy0W" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="YzODqW7SXkHg" xmi.id="U8dvZeXmoy0W" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xUAlSAGZwJqw" name="ChimeraObjectException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="UTTfTAh0z81Z" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="xUAlSAGZwJqw" xmi.id="UTTfTAh0z81Z" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="p5hpEhM3QwkR" name="ClassLoaderException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="SmPTz8tJ6raK" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="p5hpEhM3QwkR" xmi.id="SmPTz8tJ6raK" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="L3aPs8hWtnOI" name="InstrumentBusyException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="F0VoJVaHpNd6" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="L3aPs8hWtnOI" xmi.id="F0VoJVaHpNd6" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HLF7isBcHvov" name="OptionConversionException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="sGpnH7bO6uQs" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="HLF7isBcHvov" xmi.id="sGpnH7bO6uQs" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SCwY6KOh3FzX" name="ChimeraValueError" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="qHJooCSCEhpA" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="SCwY6KOh3FzX" xmi.id="qHJooCSCEhpA" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qOi25XCquAsd" name="NotImplementedException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="gSmPxVDlbgZv" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="qOi25XCquAsd" xmi.id="gSmPxVDlbgZv" parent="i4OrX8epAvS1" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ftXkF8yIkWNJ" xmi.id="QvGzboujhxcE" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9mLrhx3cybr8" name="Location" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="WX0vTP0XwPAQ" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="9mLrhx3cybr8" xmi.id="WX0vTP0XwPAQ" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="obYjyg9TwQzX" name="LockWrapperDispatcher" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="a6HUWr3rUCCg" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="obYjyg9TwQzX" xmi.id="a6HUWr3rUCCg" parent="X4jTfPB2HmWY" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SBIuLUYV5uC8" name="ChimeraFormatter" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="dg5iZIpOBlgK" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3BAEwqYEIvgM" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="RorL05Jk0ylj" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8UzYF0l7wBGz" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mxh1i4plFzzA" type="XuQFiMc2W6AS" value="" name="fmt" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qWM6P2TXUQ5k" type="XuQFiMc2W6AS" value="" name="datefmt" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2YSGVQQJwmOL" name="formatException" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QuVKeteQkVgx" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="orrIFu0ejpyh" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sHRrFCaIi0WD" type="XuQFiMc2W6AS" value="" name="exc_info" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pvyJ9Wm4EgrK" name="logging" >
       <UML:Namespace.ownedElement>
        <UML:Class visibility="public" isSpecification="false" namespace="pvyJ9Wm4EgrK" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XD0Sp8tFHBAa" name="Formatter" />
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="SBIuLUYV5uC8" xmi.id="dg5iZIpOBlgK" parent="XD0Sp8tFHBAa" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Phc6UYnNpEE4" name="ManagerAdapter" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="Onp6WIRAQDU2" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="35URHzTvlUgO" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Dxea9h8NfFOO" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="b1TcJnfjPC3Z" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="E073jmNmpqD6" type="XuQFiMc2W6AS" value="" name="manager" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ne0Y8ewjdQJw" type="XuQFiMc2W6AS" value="" name="host" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zk8nYJtLwrr4" name="getManager" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="K1SxEpKEXQz5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Tlm6B31Mydv7" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kqQgiHi92SGC" name="getProxyForObj" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="2uU3LkDpxhHp" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UFWSsPYAQ05f" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="nPrKqoNYenEM" type="XuQFiMc2W6AS" value="" name="obj" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7nxVm28ZSxsG" name="connect" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8XV0mXEilEci" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lFoQ10k1uE4D" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wF2txIi45dXp" type="XuQFiMc2W6AS" value="" name="obj" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ggP6dFMPS8pT" type="XuQFiMc2W6AS" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OmK4koGBilVM" name="Pyro" >
       <UML:Namespace.ownedElement>
        <UML:Class visibility="public" isSpecification="false" namespace="OmK4koGBilVM" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="e9mMcTJ28t6c" name="core" >
         <UML:Namespace.ownedElement>
          <UML:Class visibility="public" isSpecification="false" namespace="e9mMcTJ28t6c" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RuxE69JTtbXe" name="Daemon" />
          <UML:Class visibility="public" isSpecification="false" namespace="e9mMcTJ28t6c" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OfEZvTuuA25b" name="ObjBase" />
         </UML:Namespace.ownedElement>
        </UML:Class>
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="Phc6UYnNpEE4" xmi.id="Onp6WIRAQDU2" parent="RuxE69JTtbXe" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WIkawHPaxmgb" name="Manager" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="12yS8lvEIOE2" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YE7obKrVia8N" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nyZWWfrP8Mtc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tTVUWCysH389" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="nz0YmJQKVV76" type="XuQFiMc2W6AS" value="" name="host" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XpVotdxgbxCN" name="__repr__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3DeAZVm6JFvC" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Gagk4nqrjONF" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rqqSo0n2bRmd" name="_sighandler" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="XBD6cxjpYCiV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="EbUvzq803k8a" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="EvfX8YjzOXPA" type="XuQFiMc2W6AS" value="" name="sig" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2rU3bcbpVEMe" name="getHostname" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QwZw6IS69w7i" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="m3b9azJ6AUCm" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YiY4xsghwHqU" name="getPort" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0Pr7JyqpgMrb" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="G8aQcnB0hixn" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EXJ8p9d3HDSs" name="getResources" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DBLsXCTkimsX" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ybsdJpOICFNV" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uTY9f01bbuFt" name="getResourcesByClass" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="d9WC1j5jKEbB" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hd9urWN2iiuD" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tMxb6o60FeAu" type="XuQFiMc2W6AS" value="" name="cls" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jyCRf6eWQc5X" name="getDaemon" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="jeV3t6Dc3P1g" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OBVdnfWQn2bo" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TfCuFHPdQuFB" name="getProxy" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Ah1xIUezBwiC" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YlaLlB7UpdVg" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hgIk3JOXxYPA" type="XuQFiMc2W6AS" value="" name="location" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pooDg3PEozZX" type="XuQFiMc2W6AS" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="E4h9d6JQs5eZ" name="_belongsToMe" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="2G1tMfSSeDLe" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="61nu0LP80Q5G" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tjF4evGq0wxb" type="XuQFiMc2W6AS" value="" name="location" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WkkU9ok2Vy49" name="shutdown" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7YxkjGMGz7k8" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tIxrEuSHBU8V" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vVAQRCYKUVAj" name="wait" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="EGbBLKJEnRdE" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OayX462AcxuL" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dBW5ego2HkXJ" name="addLocation" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DosnAkgptoIT" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="oZRQXLmjaNsv" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fBASangBwDGY" type="XuQFiMc2W6AS" value="" name="location" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="t3Z8n6Scgt2B" type="XuQFiMc2W6AS" value="" name="path" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZwcT9s21vb7j" name="addClass" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="rSg7RXUGMt0m" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fZJJRLUe8KPG" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="235vqLMNIyrP" type="XuQFiMc2W6AS" value="" name="cls" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rrOkQWT53kPU" type="XuQFiMc2W6AS" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6r6CATSCVX8L" type="XuQFiMc2W6AS" value="" name="config" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="WIkawHPaxmgb" xmi.id="12yS8lvEIOE2" parent="RjocHeYU9Mei" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PSqQCDvG2zSC" name="_ManagerBeaconHandler" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="Tqcnhda45OVF" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FlOI7tYgH4If" name="handle" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Oac1DoJQXhjd" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="06TrHG6xFaaC" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="PSqQCDvG2zSC" xmi.id="Tqcnhda45OVF" parent="TuPyQVHFxxMO" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bHJqJbVJfzBw" name="ManagerBeacon" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="1SgXANAjeTZv" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="D82pcckddzLb" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="oFpPE90Y5mWY" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MwmxTNOPcyO4" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hbXsTWCfeEUE" type="XuQFiMc2W6AS" value="" name="manager" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8swkoKmTvJKN" name="shutdown" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="bvUgfyDno7Vd" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="nW2QiWcVjSux" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RH4LZOgKsgkZ" name="get_request" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="FDG4Imfi1j1Y" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AN4unypMrH0V" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6htwLbVTyXNj" name="finish_request" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="jkLyr3YiOoYT" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WB5LS6qgH7ia" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rNIs4JP8yI5H" type="XuQFiMc2W6AS" value="" name="request" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tYkq66ZaHdvh" type="XuQFiMc2W6AS" value="" name="client_address" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5xZ1DcI5B1vF" name="run" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QJxp6UGBPnBd" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7SpM5i1oSNlH" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="bHJqJbVJfzBw" xmi.id="1SgXANAjeTZv" parent="DFtSoUfA2F9F" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QTiZSboZ3bt7" name="ManagerNotFoundException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="HvtiIezgyvV2" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NmbJh4L4mWqH" name="locate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tEChHexwunej" type="XuQFiMc2W6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="QTiZSboZ3bt7" xmi.id="HvtiIezgyvV2" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VRn79c0UOZl3" name="MetaObject" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="S8LMux3POrUV" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XKVv90OaSMLW" name="__new__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="AN8zP5uSROv8" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4B9s4BJoqCiK" type="XuQFiMc2W6AS" value="" name="meta" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IzGUZWb6o4zv" type="XuQFiMc2W6AS" value="" name="clsname" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2MVVgozkz8c1" type="XuQFiMc2W6AS" value="" name="bases" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Htq85WQLUgo3" type="XuQFiMc2W6AS" value="" name="_dict" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="d65NdveW7oBP" name="type" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="VRn79c0UOZl3" xmi.id="S8LMux3POrUV" parent="d65NdveW7oBP" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="X4jTfPB2HmWY" name="MethodWrapperDispatcher" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="CssAyT9FMxLQ" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2FeMD0kfjUZ9" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="1lkqnkpmSSVe" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zWjscGAlhsNV" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="T4TwdZNfo1z1" type="XuQFiMc2W6AS" value="" name="wrapper" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1kejEDsBkb3K" type="XuQFiMc2W6AS" value="" name="instance" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rB5Y1Q1UUSQ5" type="XuQFiMc2W6AS" value="" name="cls" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dNpLwtfn2iK4" name="__repr__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7PEZrhBU31oz" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7LWZmxfngPbT" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sTnuA5wHOTqA" name="__call__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="INugojpCCnF3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OTy4rXWywiWn" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PfGSg4SYVDRf" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ij0FRU0q9GHo" name="call" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fwJmBaaTFvF9" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IhMounRA9Mox" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3d8DONFh4DwV" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="X4jTfPB2HmWY" xmi.id="CssAyT9FMxLQ" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ihHp16n2jvF8" name="Monitor" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="GUpKfjpKd67o" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="l9tOEyDteTlE" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DBrrcd4YOZfT" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wnV75cIUVUbI" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vqKmsfLbmF00" type="XuQFiMc2W6AS" value="" name="lock" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ihHp16n2jvF8" xmi.id="GUpKfjpKd67o" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BwwhQVxJMF5C" name="ChimeraPath" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="uPofcmfpxVfX" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OUCJzpq5WvYm" name="root" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="eSEHILKdPeJh" type="XuQFiMc2W6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2BtonkD9CNSA" name="instruments" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="CIDiBlUoBj5T" type="XuQFiMc2W6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2O7S0Q90Z0pK" name="controllers" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="i0TuNv4ZBGFM" type="XuQFiMc2W6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1j8DQCeTaltY" name="drivers" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="B2Zi2O2iMVch" type="XuQFiMc2W6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="BwwhQVxJMF5C" xmi.id="uPofcmfpxVfX" parent="Rvn8CIa99AA3" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="RjocHeYU9Mei" xmi.id="Ek4mVxLfxuNx" parent="OfEZvTuuA25b" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="c1QJJGQSba9V" name="Resource" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="gxGQ5f04Wvpd" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="m4pIxcv4lPlr" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="iVePckAOoxhl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IvaATaNH1yez" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aanLyWAGRjQu" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="cvIOsx7QWtjU" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Hl9GhmGNHuku" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="c1QJJGQSba9V" xmi.id="gxGQ5f04Wvpd" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Puipb6hspr7W" name="ResourcesManager" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="dNtuFboqW5EN" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YEM2JYNJsBo3" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="jwdzt5VRHpRY" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="eoe3V3zHAnr6" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OppEydIcSwdv" name="add" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="10KJgd0MBl0W" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zcA8P1E6ys6p" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vZGCPfknUZ1S" type="XuQFiMc2W6AS" value="" name="location" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="BJ4dDhWDJgLh" type="XuQFiMc2W6AS" value="" name="instance" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iXneNtTIRhSq" type="XuQFiMc2W6AS" value="" name="uri" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MAdricHtuMU7" type="XuQFiMc2W6AS" value="" name="loop" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dRp48FuTQVK8" name="remove" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lUTBzlH5LI6E" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7Z11tT9vTRC7" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3AUCvSiYuXa2" type="XuQFiMc2W6AS" value="" name="location" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jD7CdJJgTlsN" name="get" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KjYlVQ6hy0p2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="EYt86U8ryc0w" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NH1gX5vGH0Qu" type="XuQFiMc2W6AS" value="" name="item" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UvrQXpMt6LZd" name="getByClass" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8oEE7nqWEfCf" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PSrgTHalz8US" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Wb9SbwT5rITN" type="XuQFiMc2W6AS" value="" name="cls" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xkQwquOMVVn4" name="_get" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="oX9I2uMR8Uke" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RG7IYbfePrrW" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fh3rKDWHyuBo" type="XuQFiMc2W6AS" value="" name="item" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3NJSFAwspxj9" name="_getByIndex" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0OZ4Nk8FEeGC" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9DP77Ytt60B6" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uWY2yGh1byRq" type="XuQFiMc2W6AS" value="" name="item" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8LgvJN4SaRXf" type="XuQFiMc2W6AS" value="" name="index" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uxBWtcK1w1wF" name="_validLocation" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3wCzv6CH4pCS" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MyfxQAcOWBQt" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uY96DPJ7KSbD" type="XuQFiMc2W6AS" value="" name="item" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="znoVwENqnWvy" name="__getitem__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8TQtzLrqXu19" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tC3DefOhZYeS" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="eqhgfu7chv8b" type="XuQFiMc2W6AS" value="" name="item" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XPr4xTUZKCFx" name="__contains__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="23mKD1IHMsyc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4MajGgKO9kH6" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="58wa0vkWKZYF" type="XuQFiMc2W6AS" value="" name="item" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="Puipb6hspr7W" xmi.id="dNtuFboqW5EN" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YI0f1Hl6NffL" name="ReadWriteLock" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="aPpswO7yPrJc" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tX5IOMuGvjTK" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fEmsjCzdj5t7" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YHHc6ri7CrWC" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PoMLVpf26veA" name="acquireRead" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="48T917JmSZjc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mKIxCm7ryuif" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6hIokCvAyHVT" type="XuQFiMc2W6AS" value="" name="timeout" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JqRHi9xnpDbZ" name="acquireWrite" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xG7mSiJpB19v" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NUjLkCnoJExK" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MF6mmpM6enLM" type="XuQFiMc2W6AS" value="" name="timeout" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DujU8fpUuvEg" name="release" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="VMcgLlZXfJ1n" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jakLO6hJKn3m" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="YI0f1Hl6NffL" xmi.id="aPpswO7yPrJc" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wqGqkUUR3FmR" name="TypeNotFoundException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="JRidElQi50MP" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="wqGqkUUR3FmR" xmi.id="JRidElQi50MP" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lz1ozNDiH96U" name="SystemConfigSyntaxException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5FbrdYLVyGQc" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="lz1ozNDiH96U" xmi.id="5FbrdYLVyGQc" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Zt8X7W72Ef2y" name="SystemConfig" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="mKRsehtLAcHk" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="Zt8X7W72Ef2y" xmi.id="mKRsehtLAcHk" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="00FAbVs09ISo" name="ThreadPool" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HW05ijyQYuL0" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Q7yw2KwsZA15" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sFG9YN3YMHgx" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mYxtrOi6sg9a" type="XuQFiMc2W6AS" value="" name="numThreads" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="W5dqKJl4pgxg" name="setThreadCount" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="FlM4SJjUxTRF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4dmwKvUi1Rc3" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lWvIgvNC0y0I" type="XuQFiMc2W6AS" value="" name="newNumThreads" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NtxOKXR33KJj" name="__setThreadCountNolock" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lCFoXWVmBNyn" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FeuDcuVpgrs6" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9ba44zJRtEnB" type="XuQFiMc2W6AS" value="" name="newNumThreads" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ITbwJT2S4cW6" name="getThreadCount" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="M1lXNjIfDtZU" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="anWT1JckWpW1" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="MZwO9QVjDzAC" name="queueTask" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0dvQCOES8euo" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="InwmcSnyRZVo" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GmRTfyx0XrMh" type="XuQFiMc2W6AS" value="" name="task" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HrOSqZe7Marw" type="XuQFiMc2W6AS" value="" name="args" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cpm8f8nwyBNm" name="ThreadPoolThread" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="i1r2ajzYMsyW" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KCgg2fAGq7dd" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="c78QCm18W1hC" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vm0ZfWqho2eI" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aOTAygIIqzxs" type="XuQFiMc2W6AS" value="" name="pool" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XWrMYTc6q3Fo" name="run" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="IVRmX7w2dnM9" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jX6ZU1P47YUJ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FzD52StkyzHQ" name="goAway" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wC0XxNeCMrHM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zhV6DzPTVpF0" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="cpm8f8nwyBNm" xmi.id="i1r2ajzYMsyW" parent="i0MZp3MVa613" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KA4G8Mg71BBE" name="ClassLoaderHelperFoundNotWorking1" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BYheNucJ6co4" name="ClassLoaderHelperFoundNotWorking2" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zSGJKWgceism" name="Coisa" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4Yr3i0HrZwVw" name="ClassLoaderHelperWorking" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="r5Gvh2xfVCyn" name="ManagerHelper" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="icNMLF7NlwRT" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZcUIZvmWc22D" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Z1vJLRQu3sCc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qUde9yCqHN2k" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mw8OzAZndCRm" name="foo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="VDqY60BsvHEu" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8caQzc8Wd4pw" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="r5Gvh2xfVCyn" xmi.id="icNMLF7NlwRT" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Snf3x4n5gNTg" name="ManagerHelperWithError" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="zcCae0W9DKfJ" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ki1V2fpKRyYV" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Nk9c2NUK5Up5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Md1UMYa9qjcX" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7eOYbu4vV3Nr" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="T6fWYUaf7yEi" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cx0Qeby2L7cL" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sGdNJ0DtwBKa" name="foo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="avVfrhNjxy4G" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mGa5NCQoH5Lp" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="Snf3x4n5gNTg" xmi.id="zcCae0W9DKfJ" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wH8qRSPDixJ3" name="ManagerHelperWithInitException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="AhsPnBCL4f0v" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="q6dulbn6uPN9" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="f9YCoQUdW5VF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4tKyVKJZjrL6" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eJLWghfiYzg4" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="46TY9xllE5Hs" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Izb1pv5U4eeq" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mubIrHK9Fw92" name="foo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8A4KFJC1DnH2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rEUvq8jsCBOJ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="wH8qRSPDixJ3" xmi.id="AhsPnBCL4f0v" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3cCIYJINXmIM" name="ManagerHelperWithMainException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="szC4AbNIlPc0" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1ASkZ2iFpf8O" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="sWnrub0ulQeL" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="u21k5v7S4qK0" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RNYE2fcufefk" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wGlheN05kZKl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XmAZcSZSwLHr" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EwfrYIb32kdd" name="foo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="25JlebUqV7h2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AC35VLwRZf7D" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="3cCIYJINXmIM" xmi.id="szC4AbNIlPc0" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QH5Szg37t7AM" name="ManagerHelperWithStartException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="Q4ozjtAkyRVb" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ab392Yk3T9ZX" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nZMOqlhzKk8M" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="E50aevrwrE3t" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GsNjzuHEzHme" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yfwIN4ceu0Lu" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AeYzqcsb9Dzx" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sa8srsUzW0zK" name="foo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="grXYptShTYXJ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="crvl2th0YdGv" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="QH5Szg37t7AM" xmi.id="Q4ozjtAkyRVb" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RzIv0FGa5BK7" name="ManagerHelperWithStopException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="416aeKUI91ry" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ifzreoqX6Utw" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="g6qjTzQBcN3H" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dWBmRJvaidmG" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CrmIJfCw9NhY" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="O1c1MdGWU2on" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ec7MFtauxPdR" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fyioJPKyzRID" name="__main__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tvYOvK9aJpOc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Jt5GGghehIf1" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EhaC8tNRkSg0" name="foo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="h0hyq4a2jBEr" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8LcndIoXBMt7" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="RzIv0FGa5BK7" xmi.id="416aeKUI91ry" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2bHk1xi9GKwu" name="TestBeaconLocator" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="ajPm5GrkGWi4" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4OTJuANRTSit" name="test_locate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="UTM9ItsKHMdA" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="kpLdBVVUPX2Z" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="2bHk1xi9GKwu" xmi.id="ajPm5GrkGWi4" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WzZxPHo959mG" name="TestChimeraObject" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="eIj1nlaFCvPU" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="m90y4NRqcEuC" comment="FIXME: use fixtures to put each test on their own method (unit tests in small units!)" name="test_class_creation" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QFZNG860F4zH" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="e6H0pIns4jv2" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RQ71e0DG4TGu" name="test_method_wrapper" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Vb8kf716V879" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="j3knlfp9tNX7" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6JNBme5VfnGO" name="test_config" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="efN9lSGsjd1V" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Q4YJR3RweZeH" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="F4ytrFHHJpZk" name="test_main" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="VYWE9XiPZgIQ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="q0eSXIjBv4Ig" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tXgALFsBDUck" name="test_location" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="OpDxWTMNz0WK" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mLthQBMvhs9q" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FOTQt58dR1Lp" name="test_state" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="I9WH92bMR3mI" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AfkpVrfthrpB" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8uvXtEM1t6qP" name="test_methods" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JSdiVN0bFv98" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wTGbK3mbCIsJ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="WzZxPHo959mG" xmi.id="eIj1nlaFCvPU" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AV91axOWRf5j" name="TestClassLoader" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="grKt7DAQdo86" name="test_load_class" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="cYO1BTlrI5iP" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="96hP0qX8Mf9u" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GtorfuxmzfBz" name="TestConfig" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="Th7nMGhwm5yx" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ARrwVps1WdoG" name="test_str" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6SLgM5dWVUQ0" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="60HTy8QowAeP" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HGzltnz0nFRj" name="test_number" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7LSanra47Xnz" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NpYJyCi4c1iy" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Lnx62MqNBOg9" name="test_bool" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="OY3U6rTPcQVc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YMB8Lu5SDX01" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mJzvhd3DzEMK" name="test_options" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9GnjgGLQaKLF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6RlIwlHLKKnO" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xOTubnDfEwx8" name="test_range" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="NhYx2sCxEdsp" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fCRxXELeU6O8" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Q3TczQledCc8" name="test_iter" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="OWldAdQYetBd" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Rvkt262PoYKo" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IwGv6s1XllRn" name="test_enum" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="pNfRHq5ZkLSr" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qRAexUSMzDx7" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="GtorfuxmzfBz" xmi.id="Th7nMGhwm5yx" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BROwCni0CqeA" name="Publisher" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="L4UIGRP3o4U3" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sSagX5iQcG1T" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8lIREMz6oZlJ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HWUgNQIz2voV" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cRhDfjguD8bY" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fHMRo5lRUQcA" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZtVZmK4u3LKG" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9I4MQdsxXOVH" name="__stop__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Ngys6a0Gq2aF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gXAjsUzVlKxZ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gRABpfQVDaE3" name="foo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="shWii5vMW6XJ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4CZnWWLrCJjG" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lxowW00YCZMg" name="fooDone" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="aASlhmRkRxvN" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3fYDwFTovyVd" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1QxXWUoGPcCv" type="XuQFiMc2W6AS" value="" name="when" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BNA6LfhK5epa" name="fooDoneClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="CpWGRJqXwg19" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6dqTD2PnDpYu" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="byd2tWN4tX8C" type="XuQFiMc2W6AS" value="" name="when" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gOxtDTmoPNoJ" name="getCounter" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lxGgdFpKdkBo" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tBLlhUxtJS9j" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="BROwCni0CqeA" xmi.id="L4UIGRP3o4U3" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EvadIOuAYGvD" name="Subscriber" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="kq61IEk2Bzin" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="beekdMXpscf6" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fWh1tbeSFIDq" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rKY3XdV6Z8Cl" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="difTJJZAb7D8" name="fooDoneClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JxZu4k0mPD2D" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="igCIoO3SvjRm" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="K3FXMQNx80QP" type="XuQFiMc2W6AS" value="" name="when" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="b4dUn3H56UaS" name="getCounter" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="g8X5LZIwbuPM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uvN0vlQFix7m" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xgR38zU2ur2q" name="getResults" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8PWkHv6EbWGj" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dQ3JOA64Ib9b" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="EvadIOuAYGvD" xmi.id="kq61IEk2Bzin" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VkjQZjEAAHUW" name="TestEvents" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="RYYi9fJH4p1K" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IPdKDeevkBDM" name="setup" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Rw7dZD1pbe7m" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xBUStzWKjktj" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Gkf1vsNq2pIv" name="teardown" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YYK9CRtRBZS4" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pmDWX4Dw0LZX" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RnvRbBKOyXuT" name="test_publish" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="o04xZU2yIxQr" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Z7PXSw2zVM6f" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6kF4G9XnEuLh" name="test_performance" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="UTGmOebVMqZc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pNeKikxWk2RH" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="VkjQZjEAAHUW" xmi.id="RYYi9fJH4p1K" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="x7QCzjro4V6m" name="TestLocation" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="D2Gy2iFW9THY" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vT84vPc2IfUz" name="test_create" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="eLQEYeqT7yW2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GXbxzOc914N6" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="O83emVd22Cx2" name="test_eq" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="kIrpENqaWrEG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aaBceWiGr6SQ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="MpIP0FPanaAP" name="test_valid" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YG827LITAYqA" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4qfvw5JeLBSa" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mFjZntzrkcle" name="test_invalid" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="53XDZOMLb5vN" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="i4J3Djbkzkm6" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="x7QCzjro4V6m" xmi.id="D2Gy2iFW9THY" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ysCgSxL80cAD" name="TestLock" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="LlvKTgQWjvkG" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BknsfV8xZioi" name="test_autolock" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ImO5FiMOS8G5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="D4oWUYKqfECM" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dM2D3otGsfnL" name="test_lock_config" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Gxjg5xmgJmrM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="D5BqHOAZ8YcL" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ysCgSxL80cAD" xmi.id="LlvKTgQWjvkG" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="blbRQMmcPwQg" name="TestLog" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="IbDO9njOkS4n" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xdci3eVQRz42" name="test_log" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TrzZ1tlzULhV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="L5CPfpsbBxuR" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="blbRQMmcPwQg" xmi.id="IbDO9njOkS4n" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0AvPAyRT3dqj" name="Simple" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="QjIaeB172zf4" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sBlu8OwyozHY" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="EagDFpo7yXz6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="f6IWoRWSxy98" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vw3itKGZQZ5C" name="answer" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="WjeUEdZAZcsR" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="yZcwVm2jKiuZ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="0AvPAyRT3dqj" xmi.id="QjIaeB172zf4" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="u8yJf1Vea6Y6" name="NotValid" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="sanAHihnPLFd" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2q8PBN088mcU" name="setup" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="2JW8ddVdSd2b" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NXl5QLTIPUmW" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="y0j6mJb8qMDE" name="teardown" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fko7LogJoOOZ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="geW39HX9a3HB" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hzhWJskxVH0e" name="test_add_start" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ryMfMkE1htXz" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YWl6X0HCk5H3" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kIwFXvr3Rc7y" name="test_remove_stop" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QAg53D4lTz0y" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cO9KRONIKhxe" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sr1HR8D3UMLt" name="test_proxy" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Zs21p2zhszyJ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jg93M7ikFOpG" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5BLYWgRFLbIf" name="test_manager" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="CqY4pUNteiR8" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gyPvMC9u4Btr" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="u8yJf1Vea6Y6" xmi.id="sanAHihnPLFd" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NqLiPbL5akyu" name="TestResources" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="w8ozHfqTWNXJ" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Uxv4hrwcxlZF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ptCRbbXwQscp" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QNguiEEY5Qxe" name="test_add" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0qQvZzAxNrs5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0VbQNDFp98to" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="36b8UZmS2LsP" name="test_str" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="sIPD7FH8JsEl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="X6FgE6UCut8R" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PzERK4ppA4VN" name="test_remove" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6CCN2Q9SNLri" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="80Z3thUjyrv3" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PgXYi1vpzUsq" name="test_get" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="kj774wnTbJ1H" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="CKZ8ASBEeLch" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Kw6HPw7ZFehP" name="test_get_by_class" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QpS16TGQONhl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7qdlCFQwyV10" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HmKWQzvXpZHz" name="TestSite" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="mftj9vjZiBYo" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cd9Kmh8NWIMf" name="setup" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9oXaVRB82ISo" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="946m84o9xNyN" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0ZCUrW71bClh" name="teardown" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="UpAW7bJ5ATXz" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GZpBwnY3Z5e4" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zfyapkG5H5GC" name="test_times" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="F7tNaPKa2H8r" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="smFPptTKieoo" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1OwIRASHwigj" name="test_sidereal_clock" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Kg6MvEDwb7D2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bA3Ims61xxMY" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FfKBL0tx8wDu" name="test_astros" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Y5i9CtAQWSZs" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mJtkEDGZsMtn" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="HmKWQzvXpZHz" xmi.id="mftj9vjZiBYo" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QSnXP0P9JHrV" name="TestSystemConfig" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="U72KTw801o7B" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZCYY0gkfvJtb" name="test_specials" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="CMIJzMpXZO5X" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Uwf6lI4bGCjY" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2nDv74WZyBfj" name="test_auto_type_name" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="sDsPbwvbj6Wo" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RiLiu2E6OWNL" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="A1O6A1oaj7Ge" name="test_auto_host_port" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="bBTKHx7PwVT5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9UiV06qqJhGs" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UHfEOtqXNY0L" name="test_simple_driver" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="AWE6zi9UzogM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="erBvWRn7aEPr" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hUr22sNfhZaD" name="test_simple_driver_with_device" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="LydIlHeQlWTm" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0MIZafQiCdp9" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OoP5NxGMJYvs" name="test_complex_device" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="OCT9iut6jI96" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DJaNwNXHK8a5" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GPQXvLN9fwUZ" name="test_errors" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="2VMllUqztGXp" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Jzpd8NgUZ8dI" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cswFoQm8QbjW" name="test_driver" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="a8rUOMHyFDB3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="yO0WWbmY66Is" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bw91XtXUFVyl" name="test_multiple_drivers" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DAyQL8Sw4byZ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7kHBqX1Rfrt2" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ST1fzzO4jgDY" name="test_driver_error" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="v8FxhDX8fYlc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="BFzr6qrH0ngL" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YAeForlz6ioA" name="test_instrument" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="IpxvLhXrrB5f" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YfQWR6rMC5Ir" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1qc5ZRG74eeV" name="test_multiple_instruments" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KG69PBoOzOUY" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iTqsY8hpvdkE" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pieuMIN2jDuG" name="test_instrument_error" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="gRnfqHEdxsVJ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JZ5CCnRW1XdP" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8tJp4D5On8ax" name="test_controller" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="L2wJsSa0JupN" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uzSvW5ICV6qJ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5tjq1IovHGpo" name="test_multiple_controllers" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="UKenEUAILs8K" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="L5yqBm7Vo4mg" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AwGRA3DU8AKI" name="test_controller_error" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YrKrjSBtNPJX" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wQllUXRyp6j4" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SW1ZeKpbkYKC" name="test_from_default" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hMJ4laZC5Zjj" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3j8snruLiEAQ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="QSnXP0P9JHrV" xmi.id="U72KTw801o7B" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tWIb4cn7Mvz9" name="TestVersion" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="kuTQ6dqnx8pj" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="tWIb4cn7Mvz9" xmi.id="kuTQ6dqnx8pj" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="u3wrBmYr9Rd3" name="DomeLNA40cm" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="16q5rEFFLSxN" />
        <UML:Generalization xmi.idref="vpoGgblHv6zg" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CEd5IalJIBNb" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="SL4BvWZ5iB8z" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QLfkQtYaYZXr" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ltI23fdR1HBP" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="5RknctmLm4Nn" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8hzhGUYinath" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="izEhGN6O443I" name="__stop__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="clDNoaAWXNDl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Ya1KAs1FJl1t" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kH8pLB7ul6Eu" name="_checkDome" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="v4CRRPACeIz0" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zD7Gw8AZuNwi" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="S4sB9458HBMB" name="_checkQuirk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QKK5bH53MxCV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JUkBretlj3AA" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1IbGRxRkSAwH" name="open" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="EP5YKH1LXcZy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="on0Vp8eFTyK4" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="X1hxBbDxMBTB" name="close" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7qndQMbwLGrU" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="K7Rl3lpH9spT" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="r4SCEvNY0mJ3" name="slewToAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="RtxRgGUCKnrG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Y6Lfw883xvgN" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GGJbW96MDYYR" type="XuQFiMc2W6AS" value="" name="az" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wzIttyE9CWkh" name="isSlewing" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ShGmU71O5JFy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fq1qMZInQDE6" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FS7Qyp7de6T0" name="abortSlew" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="W6UbPkXdCc18" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fjm3v0ANfO78" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="P6l3CC4ruosn" name="getAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="mzKybL60Rp2d" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="o0ASPFavM4Uj" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="04SssLfeLn6k" name="openSlit" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="kWcBMenKiFCa" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2gdMj56V4OSd" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="apEucLeczGxi" name="closeSlit" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="F6mxLyXulkoL" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="L1COPe19AdJU" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3Qw0gth0utMJ" name="isSlitOpen" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="rh3cPrwSGsTw" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VNRfzk8EquC9" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lAud1GwWcL9b" name="_read" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DgXp1gO5wCy6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5HntAx31d4b2" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uXTAPu482zl3" type="XuQFiMc2W6AS" value="" name="n" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7z5k2gnwCE6Z" name="_readline" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4G4GU8naGTgK" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="88i85R9J7g67" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MTCGd8Mk8PVA" type="XuQFiMc2W6AS" value="" name="eol" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vpb0Vh7r8J8l" name="_readbool" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hS4pjAZ9b5fT" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QSWYs1gwFkAh" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qxF6RvQKkzKF" type="XuQFiMc2W6AS" value="" name="n" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4LNH3VytSDyr" name="_write" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7vG333hJOUCp" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8MBsMW51w9of" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="INntQSKSmfjn" type="XuQFiMc2W6AS" value="" name="data" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AhfcsbS0vdqF" type="XuQFiMc2W6AS" value="" name="eol" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="u3wrBmYr9Rd3" xmi.id="16q5rEFFLSxN" parent="psCjOJu1QKPz" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="u3wrBmYr9Rd3" xmi.id="vpoGgblHv6zg" parent="n598Y4VBpcur" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uUHe9zQJg5tZ" name="FakeCamera" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="gLXZxOp4H56I" />
        <UML:Generalization xmi.idref="SC1gkl2EvgPA" />
        <UML:Generalization xmi.idref="WcOEJFGuCkEs" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="uUHe9zQJg5tZ" xmi.id="gLXZxOp4H56I" parent="psCjOJu1QKPz" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="uUHe9zQJg5tZ" xmi.id="SC1gkl2EvgPA" parent="dHstLw9Rhjuw" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="uUHe9zQJg5tZ" xmi.id="WcOEJFGuCkEs" parent="zrVuVv3i24lP" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JaNVKaOP0N5e" name="FakeDome" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="CyHpNnweLmyw" />
        <UML:Generalization xmi.idref="WBfqvbmGHmk1" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="O4geqPdu7eu6" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wkLUXfwvjbZX" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="E7yfwhOSxYcu" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0CS5rMB3R9gO" name="slewToAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ciB2rrOgwCRU" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="q4olaOdX8zzf" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="etZLU8qUJGZA" type="XuQFiMc2W6AS" value="" name="az" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Z3zh2yLesuxK" name="isSlewing" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="S4YMFyqo1qV3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0nnJ4KRe3ags" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mofcgcxhNkyR" name="abortSlew" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="SZqTNJU987mm" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4O65ykyOnWk2" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jhR7ROWTmaZi" name="openSlit" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="HMtNTf8BMZGl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LV78zpASOytl" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xmCjNlSgEXmE" name="closeSlit" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0dWKAm58YIpt" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MuglsXU7tNVN" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1FZGmLS9F6s5" name="isSlitOpen" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="88ZgOPYOe5cR" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dMDXkgsiJO3T" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="P4acASinmvIU" name="getAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Gp7uuhJJlrut" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Z8DsWGJcMtJj" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="JaNVKaOP0N5e" xmi.id="CyHpNnweLmyw" parent="psCjOJu1QKPz" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="JaNVKaOP0N5e" xmi.id="WBfqvbmGHmk1" parent="n598Y4VBpcur" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Hcg4VxY45jua" name="FakeFilterWheel" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="zBCK2T1II6BB" />
        <UML:Generalization xmi.idref="MCqcI1n5TGbn" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hUj8iKwLKJuN" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tGEFwttdMck4" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LsRaIdi6ThOC" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ugPCzHZI8zqQ" name="getFilter" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KChgmRkg58s2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aWW4DvE49QJ6" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PQLVPBwzgQ1t" name="setFilter" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="EFUueTmvhiOJ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JDyTeFXwQEaC" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="eKrjQhmo75JU" type="XuQFiMc2W6AS" value="" name="filter" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="Hcg4VxY45jua" xmi.id="zBCK2T1II6BB" parent="psCjOJu1QKPz" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="Hcg4VxY45jua" xmi.id="MCqcI1n5TGbn" parent="zrVuVv3i24lP" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xtDL8nWk5LTW" name="FakeFocuser" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="2DKAIdeVr6PT" />
        <UML:Generalization xmi.idref="U849pBtJnOsj" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8mdvAWeWSLzp" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="LO0pLt9TflMn" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AvCklQ8wywVF" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FzJhKIUTDeDz" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7XZkGtXVsoAB" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5Jt1FPGZlEO6" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5feGHpDK85LM" name="moveIn" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ATwGWHcyrV9f" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SbvDqJJvoqe5" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="j9Yawjl1MNFb" type="XuQFiMc2W6AS" value="" name="n" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oSabGCgzMCZI" name="moveOut" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JBCdOjvH2CVf" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tIHFdWrnxn4T" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2ePtAYYwy7XE" type="XuQFiMc2W6AS" value="" name="n" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hMRc7T477TzF" name="moveTo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="azYfSVvQ25Nf" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0XCwch9wtLZH" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4TW4d1iIL9vQ" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kWZdp6srXPwB" name="getPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9rCAuXnf1KGq" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OcTijO8JLeym" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Q9iyWc7sEaax" name="_setPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="uBL8kw3hdFxy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xjEILC4T2Fdw" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mQZoiqc8zK4T" type="XuQFiMc2W6AS" value="" name="n" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Q2PSF2M1Qwn8" name="_inRange" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="RF6p9ryvHDe0" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mQFjiJCdVXjF" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Rlu40r1QrQs6" type="XuQFiMc2W6AS" value="" name="n" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UobxJKCl54n6" name="getRange" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lNe3YG134c0N" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="umWlDNqcauRj" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="xtDL8nWk5LTW" xmi.id="2DKAIdeVr6PT" parent="psCjOJu1QKPz" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="xtDL8nWk5LTW" xmi.id="U849pBtJnOsj" parent="3kxsrKLPSjcJ" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uB60Du47gYtr" name="FakeTelescope" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="thRTbtAMGoNn" />
        <UML:Generalization xmi.idref="HvkVh7IkU6oQ" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NglrkZHdqZSb" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6ixQ0KRNyCCj" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fPodf921OgB3" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lTMZ0mAeCzHp" name="_getSite" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="is3h4DQqgkNf" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6HqSx1T1iQRg" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VYJhVaUbrL3o" name="_setRaDecFromAltAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wdybOJErrXYM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KWn0uFga5jFA" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="50vwLwieQVeI" name="_setAltAzFromRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Bkx3FTNKTHEn" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iLro26wxksW6" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BwRaP3s8OhuP" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yE7PVLCgFbEe" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="oqMWgqaraXsp" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="f7k1mcQaQk46" name="control" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="NhCcJQFwVxxI" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aey89ov722XX" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aMq04t7dX3lh" name="open" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0qCTo7jORYOW" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rfmuhHP3zZdG" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RT7yUsdMVOEB" name="close" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="AMqbuC5JeCF8" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fbEcBps9g4cS" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3tUYFgjuIvXT" name="ping" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="pHhTRxaUo413" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jPcNSCpcWdBO" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jiv1cSSLq2gG" name="slewToRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="x7nl9R1Owr70" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="EVsl619vGpNi" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mxAYzBbgsWhU" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sGv93GppBzL9" name="slewToAltAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hjMsjg1qarpz" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9wp1RVTMcE7m" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="f6AZxFZnVSwZ" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KILwUQi7WqeR" name="isSlewing" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6AQh1FgLV0Gx" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5BFZd96KtQBa" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Oy4vngKqrXNS" name="abortSlew" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="jIPCGf9ecBXN" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hTnYsw6w6Wd6" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="psDgPb842tas" name="moveEast" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tWhZtjUwr5bB" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pgpuAQ0rgP3w" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3AbfJ828yDoM" type="XuQFiMc2W6AS" value="" name="offset" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mvQnozfcfSWq" type="XuQFiMc2W6AS" value="" name="rate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BbJ8p6Ub1sOn" name="moveWest" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="BjzaiqtPD7yb" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="r2PXUvLLP0tJ" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hNFZQpkZQ1hF" type="XuQFiMc2W6AS" value="" name="offset" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5Bp44BstBHQg" type="XuQFiMc2W6AS" value="" name="rate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wgBMgsaj2Po4" name="moveNorth" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="OXZTvCF7jQUK" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YexktOO45Nfn" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="EWBPd91ZoAwS" type="XuQFiMc2W6AS" value="" name="offset" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0UB2tz6Rd29X" type="XuQFiMc2W6AS" value="" name="rate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XVsJdmleGxe9" name="moveSouth" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="2AcFjBMUyZwC" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ujYWli19Faa8" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="nnDUDimjBe2p" type="XuQFiMc2W6AS" value="" name="offset" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QoRgj3ndmM9V" type="XuQFiMc2W6AS" value="" name="rate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HitRNvGlhfSQ" name="getRa" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="k9VgiRqy9jPU" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iD4TXBwZKZn3" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fdGMIgnytpRR" name="getDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="FAZPrwtWZ7rp" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0OyIvlLduoJb" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ncnhPF6Nb4gW" name="getAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="kIuJPj6DLusi" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qz9ioQH3YoQQ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7y6i0mCqlLXX" name="getAlt" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="IjsbdkKkgQSg" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jobGd1gLHYdh" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AeVvx0Tfo2vP" name="getPositionRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YJREhsurUNkQ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1ZlJ7M0P5qzj" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NB3ADyXFXIWc" name="getPositionAltAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="gymBKWZhicrt" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="eW0iKzPsGq6x" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YN63fcfI6fyQ" name="getTargetRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="2YKiAAbiXglA" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cNIqBMlsJX1d" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IOQN2Onej4Tv" name="getTargetAltAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="n38KjrS0FtNF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QEljmmMmKfUS" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FAszCLudZfKJ" name="getAlignMode" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6pIJgfZwoPt0" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Pf5hIX75bFNI" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="knbJQubnXgUp" name="getLat" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="zghl5ampLL7j" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="EbunoH5s6M9l" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DiUkMyXYXRLJ" name="getLong" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lEu4XzllhFT3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gPBnjKWi1BU4" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="B1cgQvz7I8s1" name="getDate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="L5e2I83R7d7X" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QOiPZCUIQMKv" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="X4epCWpcsX0R" name="getLocalTime" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lClsosNLu284" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jUh7q10B4fBM" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WxfNSfo99WGx" name="getUTCOffset" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="WsaRujVPeAm7" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VF8auHufRgXF" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nYGw2VtYkz6c" name="getLocalSiderealTime" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="B3upCguzC9uD" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="E0HgemvBeUaX" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cnjKlpwxnBdS" name="getCurrentTrackingRate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="cuMn1G0d1jvk" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vXbZ194CCyzM" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YpiJ0JjvqKSr" name="sync" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="I788RYyt5zVX" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TX1eT106tKtu" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YrVaaQI6FyND" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0TdtoUlMJGut" name="park" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lWioVBLUewNQ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="eBxt9K4RPCYr" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="O9lhNfY2oVty" name="unpark" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tzNWwkwKrh0D" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="oyND8v2tRigv" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LYF9265q4T1D" name="isParked" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="m0wcgwp1T28V" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="M24miihai46c" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8CJBfKO1KQn3" name="setParkPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="pLH8m3BtTmiy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9SdpUhRFhLrN" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IeMjgTEofXzI" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="T7D8S4UiioRM" name="startTracking" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="VH2y1kuUr7aI" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Hf8uA8AyRS6B" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="940ptS985I3G" name="stopTracking" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="mx2b3ctAfs0Y" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ODEpdK16Z33a" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="K7gPPjdnvpbY" name="isTracking" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="rorWgp40wiOM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9cfgdiGNfGxg" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="uB60Du47gYtr" xmi.id="thRTbtAMGoNn" parent="psCjOJu1QKPz" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="uB60Du47gYtr" xmi.id="HvkVh7IkU6oQ" parent="ios4RlDltUFg" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Qz7LpityIWdu" name="MeadeException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="ErFs8CWz1NVf" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="Qz7LpityIWdu" xmi.id="ErFs8CWz1NVf" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rvKqJnUTI8YY" name="Meade" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="8xB7UAuj0fEM" />
        <UML:Generalization xmi.idref="qcfqHsAKW4bl" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TnAxrjiBuak2" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QOl2zPsRC3O1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MppWrdAOwSQw" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="m7Bhhvh1kWVa" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9N9JQVJAcUpH" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8ey46O0WklWi" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PWH73kh9OgDU" name="__stop__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3eOg8EvViCdj" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2BylvTR4qYLE" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xIsLw5ozFkiA" name="__main__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="mKmUWPERh6ne" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="B9CzhVDkAaOG" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AZbPJJXVShU7" name="_checkMeade" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="kiURnH3xqeK7" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="CgpKGEb2YNU2" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vpaLU3SejIzx" name="_initTelescope" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="n6sbkAjgxH1R" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WYx2vR4d8Y4v" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KS51i2yEatET" name="open" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KxdHEdiZ3lYl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JI6Rr9MeFCGz" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oXzOODshTy6K" name="close" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="WrrZdQKRvHnJ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5SxKcBIw8tBK" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Sdzua5EfY908" name="autoAlign" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0W6vltFEXC67" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KI3QBElg6cDh" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HImnSmwk2x9C" name="getAlignMode" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ubZPnfU3xGqN" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="BusFU5uTb0ON" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1k81hHDr956b" name="setAlignMode" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="zD06I5iR4kC1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="B14kzT7r2eGo" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JkrFzhc0Si19" type="XuQFiMc2W6AS" value="" name="mode" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BHtEu92BstQr" name="isSlewing" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9TjBCtDN96Z3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Y1pyjo8h16lI" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DbE5SduzehxL" name="slewToRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QrL2ZHL5KMaS" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="W30X8mpHDXRP" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QelXiKavwnzM" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6OkHt9hJnSrT" name="_slewToRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="bwnwGNOKj6bc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mPOgCL1aBKak" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FGu0ijTT8q7J" name="slewToAltAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8BvG13XA9PVa" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="B8tMTS44Oryc" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DNwwTVXhmRhS" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rZfDRbpcyjYQ" name="_slewToAltAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="NM5Xla7a9knY" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="E35ySmRavMpw" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KcAIJjgWklUD" name="_waitSlew" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lUDQLkKuwnDr" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WvnRGaMdxR8g" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1EHAw4jGftXw" type="XuQFiMc2W6AS" value="" name="start_time" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aDSJxxWRqHs6" type="XuQFiMc2W6AS" value="" name="target" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sCindoTe2inz" type="XuQFiMc2W6AS" value="" name="local" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ihIYy8doLLby" name="abortSlew" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3D3z0Gqgx6Eu" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="93bAjO7UqKsB" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EpiZ8IYGL9Q4" name="_move" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="sR8Txv1jZERG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VVXLnPUqaYpY" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mdEijRcyGIXN" type="XuQFiMc2W6AS" value="" name="direction" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="a3dvA1yfWVyJ" type="XuQFiMc2W6AS" value="" name="duration" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="f1CtKiGulrou" name="_stopMove" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="LVF5K1zBlWVy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="skZMFWe5vkWs" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fWZCkzTN0dEK" type="XuQFiMc2W6AS" value="" name="direction" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="073vrYlX4Ljm" name="isMoveCalibrated" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="rBKcgnYgvbcm" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KA9KoLd9oqC9" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7LJBe3vyD2Hz" name="calibrateMove" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="RhpMGP6OlQXP" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Os7CiJLXTd99" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RRMcTbcrRj49" name="_calcDuration" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ZFTYTj0IZKW8" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0NgTzncOSQki" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pq4YEawf1GGU" type="XuQFiMc2W6AS" value="" name="arc" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="psKGZMNXh31g" type="XuQFiMc2W6AS" value="" name="direction" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ob4GzmwnbzJp" type="XuQFiMc2W6AS" value="" name="rate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="etfMue2iE7yD" name="moveEast" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="90RejMdBJtCZ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tv0UsKIRXlx1" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SxH1Go9ufmGa" type="XuQFiMc2W6AS" value="" name="offset" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RJIdOFqF8pi0" type="XuQFiMc2W6AS" value="" name="slewRate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hJSM3iuSzD5N" name="moveWest" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Zegqd9owHxWG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SwdalJasHzU0" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="L89c1JAgac0d" type="XuQFiMc2W6AS" value="" name="offset" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Kv6K6BfY5G6o" type="XuQFiMc2W6AS" value="" name="slewRate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EguoIuSbnYtt" name="moveNorth" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="E0GOGR6fQlJL" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hYPnpVbM9GBk" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PzgevBu9roy8" type="XuQFiMc2W6AS" value="" name="offset" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gQjSwcLd8lQv" type="XuQFiMc2W6AS" value="" name="slewRate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wBVnxRvdpc5l" name="moveSouth" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DVbyyIzr7dBf" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="CPMJ8lEMlUi1" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vpgKaxdW88H5" type="XuQFiMc2W6AS" value="" name="offset" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XBgMnk5y7SHF" type="XuQFiMc2W6AS" value="" name="slewRate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ap9ivQlRbRnN" name="stopMoveEast" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="NRrS427epGKj" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9tLGJcVW55U1" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="e5AGUvbemuu5" name="stopMoveWest" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QL8EZSvDV3R0" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UObXR3ZoSQEW" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="y2elwWqOsQwJ" name="stopMoveNorth" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xOPTRqTQr59l" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TV5utJQHeXVB" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bxAUN6npZtjS" name="stopMoveSouth" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="EWP3ZYoAVyer" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="A7hpeD0abN31" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2QebHN1RSjE7" name="stopMoveAll" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="PcvtaYkbwOCD" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uDfTaiUmCtpl" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jCeBvtGn4vGe" name="getRa" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ybyuxA5gKjrF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="djPnaEY0qStP" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="a60e1FHdygQW" name="getDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="CIXXzNkaTjCU" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sxWhNN6Lw2Dt" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yT5w7WS0Rxho" name="getPositionRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="1D9UwKwul2ot" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Il7FnK6xceSb" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WEtv9ajSLqh6" name="getPositionAltAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="jpVUrHLLVEGd" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8l3iPWHQhPsd" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mx55lkBtVFZv" name="getTargetRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nk9GzPtlMwr5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lqJSFC3w1WPq" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="g0yAFV3yLMOZ" name="getTargetAltAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="rmLBjAGNBCXO" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WRVXvuLgdUvc" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hYN1vlaPB3x4" name="setTargetRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="t3MKV8T89yuK" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wGlZlg9aSUm9" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="d0XmD2AsZVtU" type="XuQFiMc2W6AS" value="" name="ra" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FRtOToSN5Dwo" type="XuQFiMc2W6AS" value="" name="dec" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="z3CYY40nVrBw" name="setTargetAltAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YXOpNNZJlROA" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ecJhpDVhGpzm" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="yQu5PnNMqZuM" type="XuQFiMc2W6AS" value="" name="alt" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bu85jH1NtL4h" type="XuQFiMc2W6AS" value="" name="az" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EjW2IONsGVx0" name="getTargetRa" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="2AZnbvyoeSov" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="kyLeHQLqvhdG" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pBn5ek3PgP3y" name="setTargetRa" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="SBu9Yv5JFpzI" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="nMmg3Nx5XUs6" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Qou2Fhx4sk7V" type="XuQFiMc2W6AS" value="" name="ra" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CuLhPBnn0gpF" name="setTargetDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TZORFCeazvmS" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NnHDVOiwXa35" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="T8MixKy7EHob" type="XuQFiMc2W6AS" value="" name="dec" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HUOp3PsUXFDS" name="getTargetDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="txhsqTJ7vfuy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="X9ZlRLLsvhJ8" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5nTa0e3XlaGC" name="getAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7KA3x4z2rQbp" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wb2pHLxAGe14" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4eKoCby8A1xR" name="getAlt" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="sdth4UV66puG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KtcZXdddvnes" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OtPZsKyCDYlj" name="getTargetAlt" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="EBkI0cYNTvwL" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9NM2A0v0bmgd" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GsWRPHAYeUbn" name="setTargetAlt" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="a0eDUFyxhj1v" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UUl4ERhSaPib" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2GwTCqpQiLr7" type="XuQFiMc2W6AS" value="" name="alt" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BgLl63K8HGZR" name="getTargetAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="jP6O85JHmc1s" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6OrnhhsGhWRB" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fJyxYXOeuEPZ" name="setTargetAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3jWxxwWsCKSw" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vIpamGjUfqsm" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vA1hm2ZSMXNu" type="XuQFiMc2W6AS" value="" name="az" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YCQC0HyvRzdB" name="getLat" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="eAWoSwl169D6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0AdMgyEjikef" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Q90p8d18lcSR" name="setLat" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9tvuUMK52SKP" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bg8HPmw1vQqN" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NZMTgZY5iYup" type="XuQFiMc2W6AS" value="" name="lat" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DGR6hFT2moVS" name="getLong" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8vo9L8WYNve2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="N1V4ZOriHmdl" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="864uuXLFZqH8" name="setLong" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3q3chIitPXLG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="E6rUtSDzN06i" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6bFTWrTfxXXp" type="XuQFiMc2W6AS" value="" name="coord" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xZDKXK1dtE7P" name="getDate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8PxXvGlspyBM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5a216Yo9Opj3" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GAy9O5XTdZSh" name="setDate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="sOpTvHB1YxTd" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5HoU6VXEvSjq" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jUgWRrrh1prN" type="XuQFiMc2W6AS" value="" name="date" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TypORXC8zscQ" name="getLocalTime" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9hBgeeJ7d6T2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iR8hGx56JuYC" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="df8dWk1EC9tQ" name="setLocalTime" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="pHHzPAOR7tnv" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4yVNq3YyijeM" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OvSz1vzdZ7G5" type="XuQFiMc2W6AS" value="" name="local" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uLtc4VwQQONQ" name="getLocalSiderealTime" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="LcLQT8MNTDxV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KM3tRHwHWDEt" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="juu9IHZacaT3" name="setLocalSiderealTime" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="oGfOo6SgUi22" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rNIOYVHs7aIb" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="icw9qudZoXg6" type="XuQFiMc2W6AS" value="" name="local" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DHuLsBuanqid" name="getUTCOffset" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="MTZqBZrPrjij" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="kLCWstbe7G3t" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uaJiQ1L9KWfC" name="setUTCOffset" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JAfeeKozZdR3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NGrSUsLrLtfW" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SWtJGZ0A9KqY" type="XuQFiMc2W6AS" value="" name="offset" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VksqbYL24CJI" name="getCurrentTrackingRate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="NK2wvRxRCqFl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mKRtcHPtP4V3" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ManQl5jXP8Q1" name="setCurrentTrackingRate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4M6TUVSsJLfB" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PqupsOqFit9d" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="K52UtGEFozdZ" type="XuQFiMc2W6AS" value="" name="trk" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jVPRMY2fd37W" name="startTracking" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="EJ2VefhN86mV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JLj7LNfPhlrA" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cnAGqFk7bSCu" name="stopTracking" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="J0SS4Exg15up" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="prJWb8gpSgJ6" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Kdwt57nsy5OX" name="isTracking" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="OQKOTDBno6fr" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="D3Lfjek3cCTg" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DSj9V7hj82Ms" name="_setHighPrecision" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="RCwFIb6T2ndX" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="g6tGGMwdkE1B" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vIG3KdtyhkEy" name="syncRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ufbcOnaQv9DG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="48bmMaxmkuz1" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="V4UXr55mNJof" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jA2R21SW3x3v" name="setSlewRate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="dAlh7na8tFWH" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="26fOOR3I7fuT" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SStMb6cIFekF" type="XuQFiMc2W6AS" value="" name="rate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hZaoCSFfv81U" name="getSlewRate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="E3r5JNN0uvm7" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DblSDTfodRVj" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="L1kG9jjKIUkV" name="getParkPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TV7MOtRku9y2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vQJYrnH5q6A9" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qhM897d4XubM" name="setParkPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yrvVmUpRLExG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hqPWxXfO3lkP" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="e97XI4Z8jtGt" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mbenMNCyWIVn" name="isParked" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KBDdQ8rCjWx5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="M2t3uAwszqMl" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="r74LPX8ja2nU" name="park" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="CHQwnNzcU1xs" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AhK9Vgtos4PG" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Z4b74MZE2tLX" name="unpark" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="RMPvMKltON0Q" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aCLQGlgT24Pn" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hXcjOyFwAaMR" name="_read" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="59eGizfzzVJ2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="J0sJ4F4TbRNx" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="m8o8VmXBJ9ui" type="XuQFiMc2W6AS" value="" name="n" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kLVJnsHX13dU" name="_readline" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="m2Fn5tGv3v5L" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qAf9KYpPfUdN" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RGLQlcQVxwni" type="XuQFiMc2W6AS" value="" name="eol" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ruj7MMSlbnCM" name="_readbool" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="AIeDCjXdbGiw" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PaqLUd3HfJ2i" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aBhBwrWMSKfu" name="_write" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KPuoKFTv7h6F" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="viBY1EGBUuNe" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bsGD8y7i7ms4" type="XuQFiMc2W6AS" value="" name="data" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="eOO4i3ydl89l" type="XuQFiMc2W6AS" value="" name="flush" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="rvKqJnUTI8YY" xmi.id="8xB7UAuj0fEM" parent="psCjOJu1QKPz" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="rvKqJnUTI8YY" xmi.id="qcfqHsAKW4bl" parent="ios4RlDltUFg" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fBwlyopaABcs" name="OptecTCFS" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="CYTvgcg0zZnH" />
        <UML:Generalization xmi.idref="s1isYV9NhKJc" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nLQVfh5D7ECb" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Z2D4KO78jXbN" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fYvAnGubQ4Tr" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EgYLtlvWHqe5" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="rFabm9wyqUKh" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4WeSZ5I68VAS" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DDDV1pY3LCVu" name="__stop__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Yd8M5Q3JbEmc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IlzOG9q8PPh9" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3KfNU8FkuE88" name="open" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="MGtxVfZWxCtP" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MxGjMvssWyFc" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="L7ADLGLhDaQZ" name="close" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="87v3JmSctcpF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VHQ2FfccvVXO" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tBu4lJcGa2Gp" name="moveIn" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="u5uU7AIm1fKM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hsPaLxxT2sWL" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cxwWZljQwbTf" type="XuQFiMc2W6AS" value="" name="n" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cHoc9IwkFsEn" name="moveOut" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="g02tqGeRBqzf" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dxBYWeDRj7to" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GBYHrtbRAN4I" type="XuQFiMc2W6AS" value="" name="n" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SB6AI0yW9Xly" name="moveTo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="vFb5mM18hPhQ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ONOYiQoMOoGE" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2sfDift9oxJ4" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pTmDI0RKt5WZ" name="_move" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ZyGo9XnfovtU" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iNiWK1aEFBHz" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YI8FgpdVGQhY" type="XuQFiMc2W6AS" value="" name="direction" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Q6tHBNrtkZP2" type="XuQFiMc2W6AS" value="" name="steps" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iWxzueVJjMau" name="getPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="E7u21nUhIReC" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jRmR19UY7iMH" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4AVnW6fEVRfU" name="getRange" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="bYArxp2zxXmR" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Z72gqMv4Sq4T" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bQf5pJZOQc5E" name="_setMode" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4zCUZFjVDzuy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wyIOmMrOs0Dq" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="nFpila9KynPn" type="XuQFiMc2W6AS" value="" name="mode" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="MjKChX2SnqAW" name="_ping" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="WKHiKBget0qY" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OKqM5G79FJdo" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Vr1GfBm3TdNY" name="_read" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="t9rMkEvbiadU" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rUh4mJqIb7yt" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HeXAcMi6BjMq" type="XuQFiMc2W6AS" value="" name="n" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tTlTajMrMuzw" name="_readline" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tnHDfG8tw8GK" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Ei0PPNFGU4dC" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IWly6ORyrCRR" type="XuQFiMc2W6AS" value="" name="eol" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TTaxXD9phuoo" name="_readbool" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3HUk9GYQTGXs" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IFk7PBZGwoUa" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4aRziiJCBr7h" type="XuQFiMc2W6AS" value="" name="n" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="R49MsbwvBNur" name="_write" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="kmM69AbmUVs5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3B1D27u5MOqV" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dMt6dRz2V6MM" type="XuQFiMc2W6AS" value="" name="data" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fGFoe7dfIfsI" type="XuQFiMc2W6AS" value="" name="eol" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="fBwlyopaABcs" xmi.id="CYTvgcg0zZnH" parent="psCjOJu1QKPz" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="fBwlyopaABcs" xmi.id="s1isYV9NhKJc" parent="3kxsrKLPSjcJ" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="up6NtSjYjyML" name="RemoteClient" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5y0LdtcNdyRk" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XRTpqLjIRRyv" name="BasicLifeCycle" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="up6NtSjYjyML" xmi.id="5y0LdtcNdyRk" parent="XRTpqLjIRRyv" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4SpfOGQUGu4m" name="RemoteMethodWrapper" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="Fk9OWuQhN0am" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KzNhyvRrkhei" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Yif39TX0WE21" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mskGwS7FXTnV" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="s5h2XGgpE1UC" type="XuQFiMc2W6AS" value="" name="send" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wv3fcfNMY6bS" type="XuQFiMc2W6AS" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SgqghKqdFuGq" name="__call__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JyXWqoMLQXP6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XeC3ilVETBHb" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cmb80b8RFy7w" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IsKk1ZLdMukM" name="__repr__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ty0JVNPoGhWH" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Tsniotc7p7cf" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="4SpfOGQUGu4m" xmi.id="Fk9OWuQhN0am" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HrtdjbxCTlsH" name="TheSkyTelescope" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="cUNRbz4Vv2mR" />
        <UML:Generalization xmi.idref="cXk8JVNhEoVe" />
        <UML:Generalization xmi.idref="HOIWDo8INpBO" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="HrtdjbxCTlsH" xmi.id="cUNRbz4Vv2mR" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QXrJZcizmtdd" name="ITelescopeDriverSlew" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="HrtdjbxCTlsH" xmi.id="cXk8JVNhEoVe" parent="QXrJZcizmtdd" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="HrtdjbxCTlsH" xmi.id="HOIWDo8INpBO" parent="ios4RlDltUFg" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pHyD67b3VNgw" name="SBIG" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="qX3jZauNCzUZ" />
        <UML:Generalization xmi.idref="OdqacK7iWKHl" />
        <UML:Generalization xmi.idref="gXeArwvUSglE" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="pHyD67b3VNgw" xmi.id="qX3jZauNCzUZ" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dHstLw9Rhjuw" name="ICameraDriver" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="pHyD67b3VNgw" xmi.id="OdqacK7iWKHl" parent="dHstLw9Rhjuw" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="pHyD67b3VNgw" xmi.id="gXeArwvUSglE" parent="zrVuVv3i24lP" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="E5ShlBtTsD2D" name="SBIGException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="QciJEDdbFrJb" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6YVMNovolXQ0" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="XIS96ayxsNW5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KzSBybl8co8p" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tJRYDJUJpxdD" type="XuQFiMc2W6AS" value="" name="code" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lZ1W6PVOOxXM" type="XuQFiMc2W6AS" value="" name="msg" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hyOWw0hfZhAd" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="oBpgWJlDG8iA" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6fzTaXn5nGEs" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="E5ShlBtTsD2D" xmi.id="QciJEDdbFrJb" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6Ppf4zGBcDcD" name="ReadoutMode" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="kPIWfVOSeB8A" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Fjotsu1JkP0i" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4naoBaVeSFXy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TrmvYRREM6UV" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NyM3ihNvQ9mG" type="XuQFiMc2W6AS" value="" name="mode" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hyC34eYRcsTI" name="getSize" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KLYkb4iG2sJ5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZqBx0xC4lmqw" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XqU7gxOGoZBo" name="getInternalSize" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="krnlh6qCuIIb" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XNqG7gAQ0g8Z" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ggp2F0okMe0T" name="getWindow" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="h8hZRzAffxhs" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IArGr0pZpcKW" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yVdI7bjPmbgb" name="getPixelSize" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YTfBQM4Mphew" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bT8O4TulbZK2" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GMM0x0bWTiuX" name="getLine" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="n8lcnNX3jt4g" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="BmGmMZns0S4Q" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rdAIL2oUp4H9" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8PyqG0U5bfNx" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="b21bU50FBlsw" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hBPUGebpgdR9" name="__repr__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ibwKGKFvVeOj" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gROqAEmGdi6r" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="6Ppf4zGBcDcD" xmi.id="kPIWfVOSeB8A" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JzZzay6FNT3X" name="TemperatureSetPoint" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="hpnJWsAET5Yh" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aNI1QpinaJd0" name="toAD" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="SxMXJ5oRk075" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FBhBIMeL5NjJ" type="XuQFiMc2W6AS" value="" name="cls" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8eCgNPmvm2xC" type="XuQFiMc2W6AS" value="" name="temp" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rdxSuaQAm6J2" type="XuQFiMc2W6AS" value="" name="sensor" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Nry7ttHjXEBR" name="toDegrees" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="1HYpBBx8XVpu" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pbbZftZ7qvc9" type="XuQFiMc2W6AS" value="" name="cls" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zOYhNdkkUisM" type="XuQFiMc2W6AS" value="" name="SetPoint" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="c957MEY9n8iT" type="XuQFiMc2W6AS" value="" name="sensor" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="JzZzay6FNT3X" xmi.id="hpnJWsAET5Yh" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9XdbDVxpc0uy" name="SBIGDrv" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="CT70ZnRY3zNE" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="845B1TNAlhqX" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="UhST030656G7" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="oOSQYzICPvTp" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XdFGJ3o5PEWx" name="openDriver" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ubNxfd2AEHOX" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DmAahdQ9IqaI" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KAbkP5happBU" name="closeDriver" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0HYEZukr5JbU" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RbdjRC0JlNFO" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OH4B6FfXoGHG" name="openDevice" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="txvhEAvePTsz" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SFXDcmba47mb" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2US7l2b7JdIP" type="XuQFiMc2W6AS" value="" name="device" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DRXFXJqXmHeX" name="closeDevice" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4IlTjbQv1xAY" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JDfcoxzhtuN7" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="F15zGhUZs9Bg" name="establishLink" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="MxcNtmt8lw51" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="58My3j37zmZh" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bZYTjj7msTit" name="isLinked" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="B5UvzZwa8V1p" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Aly8VXprVRCO" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="C7Z2YHvj0urW" name="startExposure" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hLix0Skz5Fub" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PeLs5YEEbg9b" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="D49KZ99jGhko" type="XuQFiMc2W6AS" value="" name="ccd" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ydVxXKRvyml1" type="XuQFiMc2W6AS" value="" name="exp_time" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="I0GsgPRuTaC0" type="XuQFiMc2W6AS" value="" name="shutter" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aLWY5FaMFoEu" name="endExposure" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DStRE7LSk55w" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DfmfDyftHNqI" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="naFto9UMUyuX" type="XuQFiMc2W6AS" value="" name="ccd" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3kpI6fatEnm0" name="exposing" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="416IorGl3c9E" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wEMOAEwMfpnt" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="x6JfBObC9QSD" type="XuQFiMc2W6AS" value="" name="ccd" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="q3YVtLPoPiTY" name="startReadout" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Gh4SCqQVrBrV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="53kETAPXBVn0" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="K3lOdsaUw8xn" type="XuQFiMc2W6AS" value="" name="ccd" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RMbq32O856KZ" type="XuQFiMc2W6AS" value="" name="mode" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1PxvXuiwFHmG" name="endReadout" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="z5fEMRUeXq2l" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="K8MPEgwSNzsX" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pI0eRr9TE6Ml" type="XuQFiMc2W6AS" value="" name="ccd" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UyCpv4KkNLNm" name="readoutLine" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="caFFMzCYDmJF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AWDPba8adomx" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DEcl2eUUagJW" type="XuQFiMc2W6AS" value="" name="ccd" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jbE4wbq564Sh" type="XuQFiMc2W6AS" value="" name="mode" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Qlj1Q0V9bjBW" name="queryUSB" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="I3UVpliEWPDu" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="L1bR316dbLqw" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Pi1yRCUkC39D" name="queryDriverInfo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="l1kFQxAndBm4" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4FreYhYqi2LW" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OEpYIylKCcwk" name="queryCCDInfo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9d6mmsp86cgM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IUZ0UsWFuEVI" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YSfk2ZTI42JW" name="setTemperature" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fYEUdqKGxVu4" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="unkm0D59qBwc" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1ll5NPQtp5es" type="XuQFiMc2W6AS" value="" name="regulation" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="e7Ag9RB1DvoD" type="XuQFiMc2W6AS" value="" name="setpoint" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8tMw4GW3zF8K" type="XuQFiMc2W6AS" value="" name="autofreeze" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="u337yrK4ifyk" name="getTemperature" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7yHqdFYWiMNT" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tVntkwBNUPs6" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FCKAfCEYGGfC" type="XuQFiMc2W6AS" value="" name="ccd" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="9XdbDVxpc0uy" xmi.id="CT70ZnRY3zNE" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GZokwgoCr6MU" name="TestMeade" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="JZ2XpgjueyiF" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oyJQw2d8HN1s" name="setup" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Y4qAD5bz3uOx" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SMj6WIgLeTy7" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="u16BM51oRiuw" name="test_print_info" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="cHSd9qa4qeDA" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zZFd0DiYIXiT" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jDz9vr5uQKWQ" name="test_set_info" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TT5H7ISpVPyP" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VCwlhcEHtfu3" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="G1HfJl3oyyYd" name="printCoord" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ksBgqjJPUCrr" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="akvSPnVrGa8M" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qaBKz7jE8yrP" type="XuQFiMc2W6AS" value="" name="header" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0MiEuraiPj0N" name="test_sync" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ENWgaNYahGmZ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ojbugQJQIV67" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5NHT4IqtzPnd" name="test_slew_rate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="51dmFPLJkbmp" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="p735a7CmViT5" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rcgo1TSoYTt6" name="test_movement" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7yrsXbfMDLAC" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="b6t6oM9sLkeY" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ma0J4sPfyGjk" name="test_align_mode" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="vA66VEJGpHXt" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cqcvaHUfDJXk" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9uW5BFql3Shd" name="test_tracking" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="vhgiwDZ675BG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="h9IuQocJygQS" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="I12LUhwBoE4C" name="test_park" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GVbLalcsmcBE" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0gWxLuPGb3wX" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="H7O5JQHK4lHP" name="test_slew_to_az_alt" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8qUtQf5hmRm6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fedGhZmv4NGe" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="r2OwnfLTHzhy" name="test_slew_to_ra_dec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Js46JqABqW5e" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WTtbp7DvwgoM" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9Q5QNmMuEDT3" name="test_move_calibration" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Rs3IM8wVX1vs" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KgyEMlbgddku" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="GZokwgoCr6MU" xmi.id="JZ2XpgjueyiF" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lHkzUD2muz1E" name="Camera" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="iasJDaDeQFwm" />
        <UML:Generalization xmi.idref="Ci4dxzPJnf9d" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4ERrtbShTewr" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="uv570uH27juy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="L4scrUQGsPtr" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IKflxbbIgTuV" name="getDriver" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="dyVkfNjvhMhe" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="yIjqiahaUlhU" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yIwclr7h7oVn" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="BxatJHXHXStG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PBNtw4LX1qGe" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HyyOnTCAeZ3Y" name="__stop__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="2lsZDjqUimqT" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cM6bBMFMJnFa" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="F2bsacQAyWl9" name="_exposeBeginDrvClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="bQeYuPflM9q8" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qyU7mhioQYMd" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HA5xwwO9wz1U" type="XuQFiMc2W6AS" value="" name="request" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rYuH6GtMOwJK" name="_exposeCompleteDrvClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="uXKHUcbIG13v" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qgSnfRFFrunm" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HSVdcLjRsegy" type="XuQFiMc2W6AS" value="" name="request" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TJAKDv4SOX4y" name="_readoutBeginDrvClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="pyHBVL7O7U7W" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tnNlR1hKZ0b1" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aAJqANldeuvr" type="XuQFiMc2W6AS" value="" name="request" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Wpo3nN2NYLDi" name="_readoutCompleteDrvClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Yy74IKkwG3F5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gwJKqE9eCPng" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iv4pPAMtxAwk" type="XuQFiMc2W6AS" value="" name="request" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FMhQlU6UP8Jn" name="_abortDrvClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="M6kb9zgMLNm5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IdgDobxKZ4Mp" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pqZDzq0FSeRE" name="_tempChangeDrvClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7dB5yX8FYast" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FOYnRuclyKM5" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="J0RdNCiB2FOz" type="XuQFiMc2W6AS" value="" name="temp" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3ODV0ehG0F3P" type="XuQFiMc2W6AS" value="" name="delta" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mY4mlSkpovIp" name="expose" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YHoKC57j5AFG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="X03XD4xJf8Mb" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dVrB3h3nG7Z1" type="XuQFiMc2W6AS" value="" name="request" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EAXsGuTtNK3Q" name="abortExposure" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="qoOB6Rb6VmKf" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="06DGBkFh222C" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="77uAG9OSHwKX" type="XuQFiMc2W6AS" value="" name="readout" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WYMWaMjhUdpk" name="isExposing" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KhUnRoSyMpUw" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="kDC19VWxJu8P" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9BbbmQLWcWVl" name="startCooling" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="FLnrpHaoIH6C" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="11hIunhEVB1w" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ySsKHLFOUq0H" type="XuQFiMc2W6AS" value="" name="tempC" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5mOYvOSrqJC7" name="stopCooling" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QuPg9TtCFFi9" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="eRT6FTNUn9Jc" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dB0TSAY4b2Ap" name="isCooling" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lclzqT6Tc6v4" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VYHIfbt5TIla" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HT8qTHdxnvFS" name="getTemperature" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="iD8KH3PWVVLw" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="U6VvOGV8rG7f" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mwtZr91JDWEa" name="getSetPoint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="NMksp3oczg9p" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="liiawnFeyLzD" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="n980dNaM3Iwz" name="startFan" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GWbJnVGqfss8" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="39c1VZFqvxik" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0UKxASmxbvwE" type="XuQFiMc2W6AS" value="" name="rate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="R5yK2e306LxF" name="stopFan" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fMEIF4Oe9MxB" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="niAOb6brbC8O" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="y095L5I7nSVO" name="isFanning" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="pbXwvU6uSFxl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Z4DAELWufkCu" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KFs5fMREQeMf" name="getMetadata" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="sR6H6Qu3HReq" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xqXdbhVOG2KC" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UO4uezgwEW0t" type="XuQFiMc2W6AS" value="" name="request" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8ACPAWZdtbXX" name="getCCDs" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6j0N8dBFlNcv" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aBRmiRdYthpz" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rBYkm4FMFh8x" name="getCurrentCCD" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Y3OJO0CD9jyv" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6jWzRJwX1vs9" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nBF0sLyz5SwW" name="getBinnings" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="HlTQURKFbZGR" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lt1mmtuIuIbG" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vCQycLSNCT8y" name="getADCs" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="NIGwrUNkemgG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="K2GEIpUZYxy1" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="78cJZiFtiV50" name="getPhysicalSize" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Y9MDv2R091Hi" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IZYqVWrqm6md" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jWaRzfQHDy6g" name="getPixelSize" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="CCHLCX1v3bL3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SxWE1GpaNBlH" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FlISjM89IcNJ" name="getOverscanSize" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wFoErBWhMNui" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sCrDMcUYnkrz" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HqsISDJhya7f" type="XuQFiMc2W6AS" value="" name="ccd" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0NEl75kMtceL" name="supports" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="h1Vae7uS3sCZ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qw0mW7QSKEh9" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ODqkYjQY6eJB" type="XuQFiMc2W6AS" value="" name="feature" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="lHkzUD2muz1E" xmi.id="iasJDaDeQFwm" parent="psCjOJu1QKPz" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="lHkzUD2muz1E" xmi.id="Ci4dxzPJnf9d" parent="ios4RlDltUFg" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yc2IphSDsGvQ" name="Dome" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="zLx5xGEcGjCs" />
        <UML:Generalization xmi.idref="VyvaQ4SZgXYY" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xzIbWq92mVq5" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="didxb7hZ6zAb" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ltyBnjOiAFif" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oIdYnRdYKci8" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="pVOvTYUFo5nZ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="J4oTIX6tFhor" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XP6rzmxIomj4" name="__stop__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Gkt2qgcL5gC4" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HqxWXlLMFjGg" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="S8KEs4J9sEdP" name="_connectTelEvents" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="OXrUD2WdArr2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0zkDg0rwikxW" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="t8BlNo8LlsWS" name="_disconnectTelEvents" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xSc5HU58aEtx" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qNMX5J3Tovv1" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0zImsoCg9YDE" name="_reconnectTelEvents" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="iDOJRFGPFZB5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qFge8be31G8G" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LNjTuvhk8NMG" name="_slewBeginClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hYXptu5osMl7" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="x0JwHPDzaZIz" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pXO24a5Pvosp" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ly7LXNIKuhKy" name="_slewCompleteClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="oSvg9GfOdzZn" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HPMACC0riVhc" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NkQG5BNq7SAd" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9Xfs2KSQ2se7" name="_abortCompleteClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="EyTGo5Mo4GwU" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2zw7Q4kEUguc" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uX0VUXJe2wW5" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KegoIbQC8Pid" name="_slitOpenedClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ISJPpz0kyFfr" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uzFxtl07hRLV" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WhIYvE1Fqh29" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0fwf6I8axQ8t" name="_slitClosedClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="rT4ptBgUImv7" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="c98Rp8a7brUO" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rU8pjnfhQbMU" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vTDWKhsBCzzt" name="_telSlewBeginClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7aaHZZ9JBkSM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mcbBDvf3OiqG" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rWi7IdFD6QhQ" type="XuQFiMc2W6AS" value="" name="target" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="d8P0oFGfjym2" name="_telSlewCompleteClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="HRH0N12w1GZO" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZzDdNv3TTdk0" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AtHLbkgDq3De" type="XuQFiMc2W6AS" value="" name="target" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9apaCYaMPrg1" name="_telAbortCompleteClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="5CnU2RTdlf38" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bKCRNP3eqKfD" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Mf7Lvgh2GXcS" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="26nsPQ3j5A4z" name="getDriver" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hFSStTZvXKow" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="oj13GeTJoGoq" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kpfpyhomRoph" name="getTelescope" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wCpTWbOEO14M" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QJzEXl3D0Tdt" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jq78ewn4DmHj" name="control" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="jUT8UVUDLbJy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XIwWlZNfkA8E" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="W62htHQOZKuK" name="_telescopeChanged" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KusrElC6z9gP" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sGzcQ6oAYFG2" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="kiD4KW2od2TU" type="XuQFiMc2W6AS" value="" name="az" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DVXmknmTW0Xo" name="_needToMove" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="qiXKg46BZgI9" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UXa7Z3ZrxQjA" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9tE80vVCO3w6" type="XuQFiMc2W6AS" value="" name="az" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kqyfGfpPW4XX" name="_processQueue" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xJDXxTghJcNZ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="x2jJ3fNsLvC2" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IAwoCTJ7U0QV" name="track" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hrUzSpWizTWA" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="doNzjY1grEBo" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uoHMogsSSFRB" name="stand" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="gnyfGTn8H5V3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="nQpcezPJotGG" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lNTDauMMI9yu" name="sync" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="bJasO3t7QNIy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8LCxESBsFAYT" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FcKYkHSqcelp" name="getMode" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="NNzlkHj0s2Ya" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7xhK5DmgXKWt" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JyQtdAii5O2A" name="slewToAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="BnBG9COiyAp3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Zmo66I0RfxCQ" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="CuO4wucDs16V" type="XuQFiMc2W6AS" value="" name="az" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SnU5ifTuZrxV" name="isSlewing" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TNNPXASxvv3d" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jZgcam5lXHze" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aWV9MSc52Ihc" name="abortSlew" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hLAcGBDohjv1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2lMY2LCVhZuC" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9X5BpkmpV6NX" name="getAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="cbGHIBJRiOdV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Ra067vJpETPU" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8NKeTi9sGAzN" name="openSlit" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="AtssFTLMqfyH" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3GAHhYjJ9zaR" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="L7AbF9xIN7X4" name="closeSlit" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="VYQKEObXUl9j" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fGNmFxDNp4D4" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="s60FBXJrmed1" name="isSlitOpen" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="IIsm1zUu3U7F" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cpNRraVM9ugL" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1P6n3hnfUA4L" name="getMetadata" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="01hV9mqpKWfm" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iYipSMAke1Vg" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="yzY2TdHS2LE4" type="XuQFiMc2W6AS" value="" name="request" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="yc2IphSDsGvQ" xmi.id="zLx5xGEcGjCs" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="b7srp2je51W2" name="IDome" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="yc2IphSDsGvQ" xmi.id="VyvaQ4SZgXYY" parent="b7srp2je51W2" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tnUVox9nwhnN" name="FilterWheel" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="J4qJP2NN15s8" />
        <UML:Generalization xmi.idref="4DQSW0enmazB" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wmriKotcMmhF" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="1XgWTqaQaQ6u" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="huVydBimLg0z" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EyWZkCmP6IOh" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GotoEziRxDyg" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="R4UnkUmj1QGT" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Pk3T2RAUVcHE" name="__stop__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="NBdLMbzlK2CM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="41x4RDXg2QUE" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UKoxx3B1475U" name="_filterChangeClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="VWIFhxKRdBTJ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Ka8K0aZOlAh7" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="kgq4i0QALD6I" type="XuQFiMc2W6AS" value="" name="new" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GFHJMLnfvvzu" type="XuQFiMc2W6AS" value="" name="old" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BtSU4YmLl2e8" name="getFilter" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="PJL0SoIbfk6k" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NPnGIkAlHSyw" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Gq51sh7D4sUM" name="getFilters" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="vjOaRSKhJPg9" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="de5s54oSL9Rn" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4oN8epSFTW7W" name="_getFilterName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="5pZXLf3tY0mZ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="atxv0Ogv72WY" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VqDoEtvGfINK" type="XuQFiMc2W6AS" value="" name="index" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OSSTVyzynCkz" name="_getFilterPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="iOFVazSecgOY" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6fDjwa31QbYj" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GcbmaNJxomQJ" type="XuQFiMc2W6AS" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GPae06MEgx1H" name="setFilter" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="NaA3VBInTUwW" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KKC84cPnycGZ" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bjDCNZkbzIEx" type="XuQFiMc2W6AS" value="" name="filter" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5JJ3wZcVGohb" name="getDriver" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="NbodNUDiuO1Y" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LQBKgPG3xQ7S" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZNF0s9WxRpyL" type="XuQFiMc2W6AS" value="" name="lazy" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nHcifhAE4NEw" name="getMetadata" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="FjZJ4mEZV5T1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VjrwYqFtP3Vk" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XiSP6RytiYbN" type="XuQFiMc2W6AS" value="" name="request" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="tnUVox9nwhnN" xmi.id="J4qJP2NN15s8" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PPXQSPWF6TMK" name="IFilterWheel" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="tnUVox9nwhnN" xmi.id="4DQSW0enmazB" parent="PPXQSPWF6TMK" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tgvIkQ2F6TdC" name="Focuser" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="uZ3b7cwKJWdN" />
        <UML:Generalization xmi.idref="uAixlnklsjqR" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uC3kvu9F01iQ" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="L8bsD4B5GCq9" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tTlilIzGRyj5" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4zN2z5TqYCYH" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="crer1Sy4QL6N" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UXVwUFzpLYiZ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RZDxmkFEHi8j" name="getDriver" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="r37HPEeolplV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="v7ZHfFoG4Q53" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZykphsYcy5rb" name="moveIn" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ZY6Xcw6uZyHb" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IdrM4uQvyVAL" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jo9VdsyBri0W" type="XuQFiMc2W6AS" value="" name="n" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qfWoAe9sQGL2" name="moveOut" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="mr8D7TFElSCj" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9JDy0DSXjY4L" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="U8G24Vdv8AjG" type="XuQFiMc2W6AS" value="" name="n" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dcGMBIidQwfV" name="moveTo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="LfsmbVH0ofVD" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PJQXR9nDyuO4" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NbI61Tpe55zE" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oIPlCnpYP5cQ" name="getPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="AqGwVlAH1Z2E" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WS5cV2ophebI" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KpkjvM8RmD1I" name="getRange" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9hIAGJOY88I1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Dq7uUgAcWQZ1" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VQTHbSXoGcij" name="getMetadata" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="MINdt3M9tfu9" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GqLmGslPZ2Zn" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LwMT2cTX2wnb" type="XuQFiMc2W6AS" value="" name="request" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="tgvIkQ2F6TdC" xmi.id="uZ3b7cwKJWdN" parent="psCjOJu1QKPz" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uyZDSDbi2WRv" name="IFocuser" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="tgvIkQ2F6TdC" xmi.id="uAixlnklsjqR" parent="uyZDSDbi2WRv" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YfW5h5t0zDS2" name="Telescope" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="pvXppIQBbnmS" />
        <UML:Generalization xmi.idref="DRAmEvE21njl" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="R2rSqbC56BTw" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Pfc4BQtcTk3H" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WfB6fl3tiCIX" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JFMQOpMvSVz5" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="SVivFlCZyWzN" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="E0zuCHRcw3e6" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LJIloHr0HquR" name="__stop__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="XsxWOuthD9Sz" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5L1zNf5pAoiO" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QJzf7t6CC8AZ" name="_parkCompleteClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7wzK5SHTjG8r" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lFMu14IZwF5I" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7E3JKDr6RByS" name="_unparkCompleteClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="s9WcNcTUpUn9" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GGzAT2TaySs3" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gcD7oBX2RVCs" name="_slewBeginClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0kQRFdInEiHI" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XdQW4IXwP2Wm" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ezGTU2d8cqFQ" type="XuQFiMc2W6AS" value="" name="target" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zoFOqjBTjRwB" name="_slewCompleteClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xIagiUp926DO" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RXJ4MWUMEvlU" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="W3FkkU1jIE77" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cgkrZTJ3VWnF" name="_abortCompleteClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xFfSjQhjDdxB" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0myG05LyMtc4" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OSBQYPm93Uyc" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hJ93Cm5YCGyi" name="_syncCompleteClbk" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YiMixKOY3EDF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dkpeEnGA0tcj" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IIQTvMecdodn" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zRP0J0hbG849" name="getDriver" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Dy4T46cYoMdH" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Uik7UNu04Ggz" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Z5XaJkpIADGT" type="XuQFiMc2W6AS" value="" name="lazy" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iVFmmwlJ1GtK" name="syncObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="zbW0sNIr4q0x" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1gaBtpc6lgXp" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="m8NYSyn8T3sD" type="XuQFiMc2W6AS" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dc2OIXD2dYY4" name="syncRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="acFC8mGd6SbT" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WMCyN5BMggKW" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3aN5ON32x3OD" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VknAQ5gSd2V1" name="syncAltAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="vMrWONXmtX5T" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PW1LZQY80mK8" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Yajc0K5W3qgR" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vdZtNtzvTjVT" name="slewToObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Vb4wKZNM8LQW" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1Yx4OdWHyNnK" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iJ6cqB3jnccA" type="XuQFiMc2W6AS" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wumuGZFysJag" name="slewToRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wJlmaJR3voH6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TbNGDzQgbSat" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2wF8FecBWO4m" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ognN8LG8HUEW" name="slewToAltAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TVnlz2H3txd6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6riaDkN916ub" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NLdG9uNva8Gh" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hyEi28IOTvea" name="abortSlew" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="sZFlXrqCn2vo" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pzUO7k3bFqKC" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ADCb6o9todHv" name="isSlewing" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="sZ5ebyQj9cKF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OKUd9oq1M3lt" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OT9C7O6Tha6q" name="moveEast" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JIOPtp5VdVD4" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NupjwYam7dQg" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cqPjQjxpB61G" type="XuQFiMc2W6AS" value="" name="offset" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="S5j7gpx1ilie" type="XuQFiMc2W6AS" value="" name="rate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CArNEqbgwKma" name="moveWest" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GVjlKqAx32Cg" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8hZqSHSkXq9Q" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dCuHf5JqF8BR" type="XuQFiMc2W6AS" value="" name="offset" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="yn5s7rSFZz31" type="XuQFiMc2W6AS" value="" name="rate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7VWKbilaVqQc" name="moveNorth" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="X8fu4TbtSEgQ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="irqFqtE5Pyqj" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="oyep0rW5K2Pw" type="XuQFiMc2W6AS" value="" name="offset" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iAUDzuofleua" type="XuQFiMc2W6AS" value="" name="rate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5CWNDvHv4l71" name="moveSouth" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="X55Bd0sfUS9B" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="evgNXYv2eavj" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4WaUiGunRO9e" type="XuQFiMc2W6AS" value="" name="offset" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IQXKAcLmXz92" type="XuQFiMc2W6AS" value="" name="rate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="h2y8Q5kgWF0e" name="moveOffset" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nUVoVYDZLJAO" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sLQNIXQpaTzE" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RpttI14x115P" type="XuQFiMc2W6AS" value="" name="offsetRA" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6n6a26EuQcIi" type="XuQFiMc2W6AS" value="" name="offsetDec" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AgWk7TwYIoRY" type="XuQFiMc2W6AS" value="" name="rate" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OMGmzWU7AypH" name="getRa" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="IKlect00GGmD" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RmpiYFGLjk9E" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lEIvB7Dar2IN" name="getDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="p9i3QSE9gW4p" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FXiyHpAZ8wBk" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cHQTIipXFXUU" name="getAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Neu18wpkCFCS" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Le2TYDDMNvPl" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="v1xBWRdr4fIc" name="getAlt" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lYpvlzNgyLpS" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rTyEOMxjypj4" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mTIo8aRz4NBQ" name="getPositionRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="SymQJcs338qB" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="h68dvrifNVa6" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jF9naIBIPJvI" name="getPositionAltAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wnmzvc8erFPS" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8bxT6YZYUMwl" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WZktsdBzD9SJ" name="getTargetRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="FN56dTY90G0s" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="f2q7MksIXeFT" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sBr5IIMvIC2e" name="getTargetAltAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ONCObCGTO6Wg" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vsuSV9tkUxq5" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Mtae3cGyVAP0" name="park" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GEwcITGeKqGL" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HIilDYrbt3zV" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RWIwefutvce9" name="unpark" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="sboAS4UtYknA" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8Tk2ViVluRLC" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Pf3KFhTN9CNe" name="setParkPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="CedLoyzgpMS5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sqNmIiy8JkHj" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="olcKVNUs2XCH" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4ODM8U5uDgCi" name="startTracking" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tiri3Hn7dyTj" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3ga4BlJNPujB" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RZdeDnLGTvIc" name="stopTracking" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="IqXvnzeEWFsj" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ecz1WgCPP35Q" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0DxT7G3ls3nM" name="isTracking" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="1ndV3VE1hBVo" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jzk61pWHe2BR" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PWXFZIcHIMNH" name="getMetadata" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="a0NqKj7UbbDV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9sWluhCtVnOW" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JcXyl0m9XHO6" type="XuQFiMc2W6AS" value="" name="request" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="psCjOJu1QKPz" name="ChimeraObject" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5CRKtlbilzl2" />
        <UML:Generalization xmi.idref="VDFEjYCrLgBX" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ivhdbq8M1qOb" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Kn9RXsFpnwRM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6bJVgz2MYPIc" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nXjmN5MUgfzL" name="__getitem__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="i9uOnthPtMaG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="czhBPxnhlw6I" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="oL6ZIXv34cpS" type="XuQFiMc2W6AS" value="" name="item" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KLx5F4L1NRad" name="__setitem__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Qls443SHuGI7" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="yWg16URodLBQ" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Cso3FMJXiFcv" type="XuQFiMc2W6AS" value="" name="item" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HxxePVILzwK6" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dceJpEE6B9iY" name="__iadd__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="T91fIjBvi1Yd" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="f0sexAiLwbNy" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cqDW4Wdf6Hwv" type="XuQFiMc2W6AS" value="" name="configDict" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CGw6pK4S8GyA" name="__enter__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="T7599dkJshPh" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="maqspknJtmyA" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1R97h6HTg5JV" name="__exit__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="HEFxKZR8dDrS" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="q6ojqktIqxRx" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YCGQrf6s6Dxo" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wjkkgBhELvdC" name="acquire" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="C53X0gkYNmAF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ah4euzQCEe7W" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DWeokTGeC0Oq" type="XuQFiMc2W6AS" value="" name="blocking" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mZPyDXUQ36Cl" name="release" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JtMedXsN6HJJ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZTPmTnadqdBq" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="onhqttbTM1Do" name="wait" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="EeoZdzLQkm19" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mnRdPaRgRoL3" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JBQPSkgFVL5N" type="XuQFiMc2W6AS" value="" name="timeout" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LSqmG9nZKEwm" name="notify" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QdykpuVlVSBQ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wczRv2m8hahK" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Z0iKkjT5CHqQ" type="XuQFiMc2W6AS" value="" name="n" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VxYCWDU5DBPy" name="notifyAll" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Lk0qD9Fg4nsa" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ur148pVXTRHG" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zKgCV38QsAS1" name="__get_events__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ojNsXDTUX7g3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xvYQMnfiWfWh" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8nR1vt2spYH9" name="__get_methods__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4e2cjjfsW4tP" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JwppZMUN3rDa" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xtHkPYuiSjY1" name="__get_config__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="P9otDfI9YXtx" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="32M7safwCiWw" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4ldWV9WWAsd2" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yVvU0oR4a2b3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QHwdxTXMaLDm" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="C7XMxBOMQIzL" name="__stop__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="leQJgzMs4uE1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jUhKns6lNzFL" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3aNRtKmcoRub" name="getHz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ONkSHxSIXpjQ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JyKexZzjDP2u" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8T1uuvWDuqrp" name="setHz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xpipdZf1NDbb" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OqYbEbTcyC3D" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9VVgIC5Qf4LX" type="XuQFiMc2W6AS" value="" name="freq" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="m2CkEFvNiO20" name="__main__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="zZALmjuXl6Fy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="a5PD9ii6XQw8" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JBJ1ZL08QPJX" name="__abort_loop__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ZdMJicH1nY1K" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="72ccSYkQ5sjp" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="u1QIOkoTmQ3C" name="control" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="njeYIdsCcJS0" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wla1eJqBxDUf" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3GRneUxaGYbs" name="getState" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hohK7AI8Oit3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rS3odWRQF4yX" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CrdQPDGGfI3G" name="__setstate__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="aK0Da1TMU7Ny" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="oSg1WcZCQGUW" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OmelUWmfNN3k" type="XuQFiMc2W6AS" value="" name="state" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jw88BceXPIIr" name="getLocation" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tdmLj9IQ4QYD" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="m2U9QYtyqsCQ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3CkQT3FF3kNT" name="__setlocation__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="SgmVQ9xgOPoU" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IGS86cY0DIJw" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RbLT0tg16RRX" type="XuQFiMc2W6AS" value="" name="location" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zKSCck72JSVJ" name="getManager" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="qRVCoJhle7yE" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LAKPbjw1QhUo" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="r3GBTmSmwnCV" name="getProxy" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="RVu3dqIStYbM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="U6UsnwheMAoA" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="I48CpIfJP7CC" name="getGUID" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Im8BIjVZnclc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4roQ1dYQ6SUh" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uPuHW4SavEyu" name="getMetadata" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="l9ZgNYYD5q74" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pXKwzmbIYjRp" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TxOEZ7pRWjj1" type="XuQFiMc2W6AS" value="" name="request" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="YfW5h5t0zDS2" xmi.id="pvXppIQBbnmS" parent="psCjOJu1QKPz" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="YfW5h5t0zDS2" xmi.id="DRAmEvE21njl" parent="ios4RlDltUFg" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JOOoBmKUMpS5" name="TestCamera" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="qCENUdR2bnsw" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tNiUAaOeXmj4" name="setup" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8tmK9i124jUE" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MHtJBXSrS6pB" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ItrndarzqjJ1" name="teardown" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="LFiPwBbC2S0f" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GjtgngsvZeEg" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1pdrYusmdjTR" name="test_simple" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TDsTdq9egkTC" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OLKvxYcGlIdg" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cKxF1QePjxLe" name="test_expose" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="cHzG1TQdlNrm" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TxvFFWvhjlAN" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nTCUQX9uS27h" name="test_expose_checkings" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32PoPEZBilf6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Y0MGlXdNmabo" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Im0io5PL5kbr" name="test_expose_lock" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="R9O7u2EAoCsb" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HCC3mopoqDaD" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IGwN0VCFhNGT" name="test_expose_abort" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="b00PAr0S7wo5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="B4FzHqCgzZms" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PyI6LYYWanTp" name="test_cooling" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="IErN8dQWbicx" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bgUbDGRoERDO" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="JOOoBmKUMpS5" xmi.id="qCENUdR2bnsw" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="F8RpwvdXZ76m" name="TestDome" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="NXabxlxDxoZ4" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vKTs62wWzWVf" name="setup" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="kUo5d9KWRnPV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hRa0oJD5cxu3" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nJznoUSTv3Tk" name="test_stress_dome_track" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="rjJIVilI0l3o" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KepuZhvKBkPn" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FWHBXitpMgjv" name="test_stress_dome_slew" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KF5K096EdLPA" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NfDXNcKEKdUp" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1GzLwgGHLSoi" name="test_get_az" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="MQozjD7kR45N" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="46uOkOB2cFKc" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kJd6lRmoWhAG" name="test_slew_to_az" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GxRh1U5jlinX" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3KIfZcGt04sj" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7aJdFTrIn7wK" name="test_slit" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="FHh1xUW24peH" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hCDfG3MWynCx" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="F8RpwvdXZ76m" xmi.id="NXabxlxDxoZ4" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GTY2bUKGgWwu" name="TestFilterWheel" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="ZGPW4bTHqAIl" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VDAJOT41Fqgr" name="setup" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lCkc6UVchgt3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Dbh46ZU3lBgU" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7y4MmjDzKu4P" name="teardown" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tXxaBreIpgeb" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TYSDh7hTJP3N" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NqYgic3A9TNq" name="test_filters" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3SFq9rPUhyAO" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="a2HrRJFIoCqz" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aDYhfvWFvn5K" name="test_get_filters" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wmWbifzIqXyV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4KcsUSpWv4M2" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="GTY2bUKGgWwu" xmi.id="ZGPW4bTHqAIl" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QUjJFodK6FAa" name="TestFocuser" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="g06b2RbwB5Yt" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hQEsVkjEGtlH" name="setup" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nme32VJivVYO" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0lgaTRPyoWaO" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GIaUBJl93RjW" name="teardown" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8kX1D3PTL0vU" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="r6Udc41OofRp" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JgeM6LqvSLY2" name="test_get_position" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="XgCre8LwmzGq" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NXQAApzIXUHl" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="J7ljSHjnmAvw" name="test_move" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Y2iJ0z9J4t0U" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xuCVMTGs8Qjm" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="QUjJFodK6FAa" xmi.id="g06b2RbwB5Yt" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8jHvtDrr52KQ" name="TestTelescope" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="VYGdyxOVz4oz" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eA0cFmbEfsIS" name="setup" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="b5j7lVaNgazt" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6pL6cBwcqaeY" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Kb5yRNQXDjcp" name="teardown" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="RLE7uByEk3CB" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uWQi62Ef5xnq" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PahaJHNBnnut" name="test_slew" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7WmpXw1wVgWm" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="p8Zv4KjVfvaZ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xuyifqZTw6My" name="test_slew_abort" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GsxlYSXTKT9x" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="O3R2zzb4VLt1" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HjQEnkCCocEn" name="test_sync" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TbZl5gjKN9YB" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bnp57i6NZ367" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ujLgLZTuKGzR" name="test_park" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="o5rCCQN47gkQ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="y5oX7sdaUAMX" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="8jHvtDrr52KQ" xmi.id="VYGdyxOVz4oz" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="n598Y4VBpcur" name="IDomeDriver" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="FBKXRKzONltU" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="n598Y4VBpcur" xmi.id="FBKXRKzONltU" parent="ftXkF8yIkWNJ" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zrVuVv3i24lP" name="IFilterWheelDriver" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="0NON7GslkvrN" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="l7MV2DqMfa6b" name="getFilter" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="EO7ktMNeSj7S" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zXOIcDF9N3HF" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uwnXWt6UQVm3" name="setFilter" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GXNh29ig9qjB" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="g2A33QIHoNzh" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hML93QcvMPSt" type="XuQFiMc2W6AS" value="" name="filter" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GzS4KQl1k49o" name="filterChange" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="igdNje0wMJFu" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Vjhr68iMf53f" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DjLKa2VqzwtJ" type="XuQFiMc2W6AS" value="" name="newFilter" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="McI6fRsAAazG" type="XuQFiMc2W6AS" value="" name="oldFilter" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="zrVuVv3i24lP" xmi.id="0NON7GslkvrN" parent="ftXkF8yIkWNJ" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3kxsrKLPSjcJ" name="IFocuserDriver" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="LkiIebZ0Er5t" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="3kxsrKLPSjcJ" xmi.id="LkiIebZ0Er5t" parent="ftXkF8yIkWNJ" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AAtv7cyvJUVY" name="ILifeCycle" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="NzrbpuS4rRTL" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ycqn2I8QNhQg" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="M8WLCi68KwvM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="knsLQDmYgMtt" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="C4kaj9GTu6oK" name="__start__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="1i7Kd3ep7PNo" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JbqyxjrHpLcz" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YbHSh5kzeYvZ" name="__stop__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="B4WGRt4zVLPA" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Gkq56R357APi" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="P771f2ZtlPzp" name="__main__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="2hkV09dPElPr" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="o2uuAKcMM8cn" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lylUNiJAkC4s" name="getState" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="UvsgeHXOFIsa" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WgEqppdpUNIU" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0AkiMmZqTlgG" name="__setstate__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yoRRZ7f8OiC2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aJ34eLX8EPor" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gJFva5TYFCFb" type="XuQFiMc2W6AS" value="" name="state" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1j8E6u5mEIfo" name="getLocation" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hM563F62xDG3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="N9MdLbCJNcjx" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7JqJbT5zcQav" name="__setlocation__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ssQTI0MHlZe5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zkDNMuI4GN8H" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aCKXPYbVsPoT" type="XuQFiMc2W6AS" value="" name="location" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ru7gHFxqQFNp" name="getManager" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YxWHV9Nw1UcJ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="owIgJ77AxYdF" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iY78nSvZNEFg" name="getProxy" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="42o6WPNCxUKi" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JLqGtRTPNxhs" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wEIJQVyjqmxh" name="getMetadata" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="zVAqH5XTTc0p" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="CO7ZLoRQqDWK" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ctXXLpGH3WZT" type="XuQFiMc2W6AS" value="" name="data" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="AAtv7cyvJUVY" xmi.id="NzrbpuS4rRTL" parent="ftXkF8yIkWNJ" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ftXkF8yIkWNJ" name="Interface" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="QvGzboujhxcE" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="QPDEdjZDa6lv" xmi.id="vzAxVhOUCXIU" parent="ftXkF8yIkWNJ" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6tpGQ6i1se5G" name="ITelescopeDriverSync" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="Yu5py9mhju0Q" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CNKuHKI2YGh8" name="syncObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DPbjdGqKvdMK" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hfn3QimILWzb" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HzMy3xbDKv7Z" type="XuQFiMc2W6AS" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="J6ccdbDsZara" name="syncRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="cp89NxjsOVgi" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VQlqMtNXGxHu" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="D7C7iYRzf3bG" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="M2FazUUCbfHH" name="syncAltAz" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="u3gUiylte0iM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="BiGojs4KfBT0" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6BqUgVC0XQaW" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="skgVt9T0KJUy" name="syncComplete" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="AzRUIuR3ZNMc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mfyJ5ZnzaSRI" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OD92DpM3a2WR" type="XuQFiMc2W6AS" value="" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="6tpGQ6i1se5G" xmi.id="Yu5py9mhju0Q" parent="QPDEdjZDa6lv" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="u8bUa3mwEwyP" name="ITelescopeDriverPark" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="jLQJLwjVv8yB" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="u8bUa3mwEwyP" xmi.id="jLQJLwjVv8yB" parent="QPDEdjZDa6lv" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jaHciDnjc0IN" name="ITelescopeDriverTracking" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="ZS2EDBTx7evv" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YJ8fv3bfJ4pM" name="startTracking" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="gdHe28pYRvDN" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Ol6GwSqJZ8Jf" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wm2FqpZEafUU" name="stopTracking" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fWG4PSPLERa3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5JmcP5F5iXhi" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="G9HomkHr33TS" name="isTracking" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DNOQmyT15inr" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8jVoGAXtelx3" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QPDEdjZDa6lv" name="ITelescopeDriver" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="vzAxVhOUCXIU" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="jaHciDnjc0IN" xmi.id="ZS2EDBTx7evv" parent="QPDEdjZDa6lv" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="S4iT7BtDsM26" name="AstrometryNet" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WXzAGvDUGbs2" name="solveField" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="A6QQhIRFbQre" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XL1c3pTWrBxz" type="XuQFiMc2W6AS" value="" name="fullfilename" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LrABDAIkhFuy" type="XuQFiMc2W6AS" value="" name="findstarmethod" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FL87U64nxCz8" name="AstrometryNetException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="NHs4Wl0frO3Y" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="FL87U64nxCz8" xmi.id="NHs4Wl0frO3Y" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jqXaCb7r3s4y" name="NoSolutionAstrometryNetException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="Tw5NvGkxWwvy" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="jqXaCb7r3s4y" xmi.id="Tw5NvGkxWwvy" parent="i4OrX8epAvS1" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="noFJiAFlByCB" xmi.id="ZVuxOBYqa0Mn" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lUXKS38ZNJWp" name="CoordUtil" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="zA3VsTzb90ck" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KWfUWFCsRIg2" name="epsEqual" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="X8JOYRG4NAn9" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LoPuQ3t5qS8u" type="XuQFiMc2W6AS" value="" name="a" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XxvjoUn70QZU" type="XuQFiMc2W6AS" value="" name="b" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="flL4117MpWEE" type="XuQFiMc2W6AS" value="" name="eps" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eYGcyp6dZRia" name="d2hms" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lriKHOthBmvS" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QnvEH7SoFlAo" type="XuQFiMc2W6AS" value="" name="d" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="BPsYZdhDBwn7" type="XuQFiMc2W6AS" value="" name="sec_prec" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tNH79PvKolqN" name="d2dms" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="zyrmjh73DgYe" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MVYVRJcBBKVS" type="XuQFiMc2W6AS" value="" name="d" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jM9u65L0Qa5Z" type="XuQFiMc2W6AS" value="" name="sec_prec" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zAn8SJaBdi4k" name="dms2d" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="IoTVS17P9vYb" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lNiBxnlujcgQ" type="XuQFiMc2W6AS" value="" name="dms" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="C8nnopVZCBl7" name="hms2d" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ZxJgsrI2y3pm" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wW1f6g5OUYrw" type="XuQFiMc2W6AS" value="" name="hms" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sLM4W59TZA8f" name="hms2str" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="NGgJJU6BpQDJ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qE2IkrCIoWye" type="XuQFiMc2W6AS" value="" name="c" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VMk4VrhJ3hcn" name="dms2str" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="83jvRvDuFvwk" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Xo3LI2ygIeza" type="XuQFiMc2W6AS" value="" name="c" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="me4nJeZoScAl" name="strfcoord" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lyOCaWxDeK8N" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="e8PvkMTrOCkp" type="XuQFiMc2W6AS" value="" name="c" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7vkNrg5bI7Pa" type="XuQFiMc2W6AS" value="" name="format" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
       <UML:Namespace.ownedElement>
        <UML:Class visibility="public" isSpecification="false" namespace="lUXKS38ZNJWp" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gbC2lwstsaEj" name="Coord" >
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="GHKXPh78fTKE" />
         </UML:GeneralizableElement.generalization>
        </UML:Class>
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="lUXKS38ZNJWp" xmi.id="zA3VsTzb90ck" parent="Rvn8CIa99AA3" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="gbC2lwstsaEj" xmi.id="GHKXPh78fTKE" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fXhK02W0Fxbn" name="DS9" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="UY1YkFQoK8my" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gBR0JBzKaqVu" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="zKVXB0QLEKHt" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AFuyfCj60Vlk" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rFzmgkPNvoNC" type="XuQFiMc2W6AS" value="" name="open" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="U1zSWjDLwA6d" name="open" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TDAhVPaxOXPs" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uT0nILzFgUnr" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GaEDiIoalmN3" name="isOpen" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8XfU32NHbZSJ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7NHlr4aKFizi" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rGua2Hc8cttS" name="quit" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="V6c6d4OSJI2L" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xSkAAksGHVlK" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XeTAXLcSnMcx" name="displayImage" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="gPjRjJMokY8f" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4SCMvxeP1EVe" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Hr6a98tflLnI" type="XuQFiMc2W6AS" value="" name="image" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Tk2UzY8ENCoV" name="displayFile" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="J5pgHbBaGJcH" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JfA40xKgK371" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NUn70tkUenyb" type="XuQFiMc2W6AS" value="" name="filename" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ExvY01YLVLQV" name="displayArray" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Ebihx9CCIA1C" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FBzrwwSD1FrG" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="o1r2ITJXOD5N" type="XuQFiMc2W6AS" value="" name="array" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4TN3gEJUD8UW" name="set" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="zbnhdhImk5Du" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ao3yz6LDi4ud" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="B4nTCodGF0Hv" type="XuQFiMc2W6AS" value="" name="cmd" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="CbNQjruJdvGc" type="XuQFiMc2W6AS" value="" name="data" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tq98qQ111ORj" name="get" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7E76dWppnqg1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="EJ0rEGSDqFtT" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vBEdFRX6IgF6" type="XuQFiMc2W6AS" value="" name="cmd" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="46DuM4MFDasS" name="id" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="y5Qlv5lzBwuV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1PZH6mOB0THb" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="fXhK02W0Fxbn" xmi.id="UY1YkFQoK8my" parent="Rvn8CIa99AA3" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="0EkDocep0B56" xmi.id="vTFvuUVqZtaU" parent="FRDTSCi1H5yV" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6PtObMs5Qc7p" name="EnumEmptyError" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="hbiplLNsiEEH" />
        <UML:Generalization xmi.idref="lqES4QjcX2YD" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="k5kF7GTXY9no" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="gvKmDguxkeDp" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KkWSuXb4IOnQ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oRC2sVUWr3oR" name="AssertionError" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="6PtObMs5Qc7p" xmi.id="hbiplLNsiEEH" parent="oRC2sVUWr3oR" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="6PtObMs5Qc7p" xmi.id="lqES4QjcX2YD" parent="0EkDocep0B56" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="teMRn9F7tkZm" name="EnumBadKeyError" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="xrdhTqWKUtmF" />
        <UML:Generalization xmi.idref="drE6iyLjxgbf" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oBSkp3NNGzut" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wyqAvk1yfXVJ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3vVYddkwuaf0" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jIjk6XTtgtdV" type="XuQFiMc2W6AS" value="" name="key" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8FD0ot0X9hHF" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="vfZbA4sGH3G5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Ei8ubjNVhDdc" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="teMRn9F7tkZm" xmi.id="xrdhTqWKUtmF" parent="H9oXVcyCVIwi" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="teMRn9F7tkZm" xmi.id="drE6iyLjxgbf" parent="0EkDocep0B56" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uGb3vqHAZN2A" name="EnumImmutableError" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="7OembHPVuw42" />
        <UML:Generalization xmi.idref="JoHEkLGiFXwC" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hNuwuq6x59lC" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="J7WOEGbLVdX1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7F4DXBsek9xL" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="s2DMQMa5hS1b" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oPdWYarPc2l0" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="N0hqdErPbUv8" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MJ53l4c497RO" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="H9oXVcyCVIwi" name="TypeError" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="uGb3vqHAZN2A" xmi.id="7OembHPVuw42" parent="H9oXVcyCVIwi" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0EkDocep0B56" name="EnumException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="vTFvuUVqZtaU" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kXMJQwmNHETW" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="gMaHZepJ9AdY" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="W4l2QCMNETLS" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="uGb3vqHAZN2A" xmi.id="JoHEkLGiFXwC" parent="0EkDocep0B56" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2kXemGc9XhCG" name="EnumValue" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="jnJtukFHiw7L" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QCN86URFPB0p" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Z99zoeVuaFRd" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mqF9CHGnwXwH" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="yJLCzGIPSfXW" type="XuQFiMc2W6AS" value="" name="enumtype" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7wmX5kKraX0m" type="XuQFiMc2W6AS" value="" name="index" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="oEYjlU0hlJtk" type="XuQFiMc2W6AS" value="" name="key" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zjUaGSK2gslS" name="__get_enumtype" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Y0p6FGjFzBnD" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Kj9501nX8uWx" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="d5FKwzmGgtKh" name="__get_key" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="zK7wWu77yMRu" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="s7E12jwYhldu" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JB8y3QfvWruW" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8XZ6s1y9C67D" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Yo4FXfAWyFQS" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Vk91c1X8oZOL" name="__int__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DvnO0vbTdiUF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FWqBjGdrmCxe" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="i1OWYkrnEhyx" name="__get_index" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yv5cdZrJYDp6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wbpimkKze5Lc" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vfs7Ko5GOswA" name="__repr__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QkJyx83rlvy6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aE9EKToIOtuz" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="j3K7tFHUTPgn" name="__hash__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="doXMhTSRXnWO" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qV6EO0DniUlg" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2msT9XHz2NBO" name="__cmp__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xk8x5JMPeVRV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LMB4rviShDoP" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gFoB0Ia24QTB" type="XuQFiMc2W6AS" value="" name="other" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="2kXemGc9XhCG" xmi.id="jnJtukFHiw7L" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Q9v8KjVyyJAy" name="Enum" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="biye6Sn4AwzG" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="C4SN0RbClE3Y" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="aB8LN9rfVa65" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IMlTb3wWrPQv" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1EaK0riDvAaw" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="d2ZVRzQQDyjC" name="__setattr__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hXsnHJE9dKXW" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pRPkaxeA6kTT" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uK8NuCQWE0zd" type="XuQFiMc2W6AS" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xP4BLlLAAkui" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Wx2kvzNtOP2h" name="__delattr__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Geuc4wJAJ8RO" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8NrJ7jzmGsXW" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Blfn5AHb6HJ1" type="XuQFiMc2W6AS" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rRA6JfcSOFDR" name="__len__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KsAc0c0s39wK" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QU2UlJVzyOb0" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mYkBlyc9SddC" name="__getitem__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="g5n7gQHaXQV2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="w79uVlspb3Pc" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dOSgXOyHuiSd" type="XuQFiMc2W6AS" value="" name="index" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9LqlODL1blf8" name="__setitem__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KQqDptlfCtzt" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9bQ1KqeytR3Z" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qKALjdMqyAbL" type="XuQFiMc2W6AS" value="" name="index" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NuKzf05mbTnt" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ULjSVLlqD6pt" name="__delitem__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KAtXEhOGa2tw" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4tfdMRVgpLse" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="CbIOUHHya1O3" type="XuQFiMc2W6AS" value="" name="index" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RObGhTsu2AGW" name="__iter__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ZjQ7jK38gcOO" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PYSxXq0pysKA" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3GG5PWbm41kZ" name="__contains__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="UZ1Xaj4QRTD2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qkOoajx7QNE7" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fGFMsdiwryzE" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AA9YXOfBcuXU" name="__cmp__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ExzqrUIKfheo" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VDOK9OZbxY6V" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HBwic9imHsKo" type="XuQFiMc2W6AS" value="" name="other" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="Q9v8KjVyyJAy" xmi.id="biye6Sn4AwzG" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3BOyhUTyfNfH" name="FilenameSequence" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="UN1lFJYRGXH5" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UpVjKkoKIAyX" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8bplbDR3lbMW" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AOnLCzCSf2Og" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UaBIlSMFFrya" type="XuQFiMc2W6AS" value="" name="filename" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZlssvqP5CBOM" type="XuQFiMc2W6AS" value="" name="extension" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3ikJXir6RjyM" name="next" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7m1tNLNP17iY" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YMPkVo7bNwNy" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="3BOyhUTyfNfH" xmi.id="UN1lFJYRGXH5" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oZdFGZaovzZO" name="WCSNotFoundException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="ne0AYL6f76WV" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="i4OrX8epAvS1" name="ChimeraException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="QNaGKqtHlNgp" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="y9kjUPWbyrJD" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="kosidBvYJQmM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="x7XE5rhYoEtQ" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2SRBcffapNHJ" type="XuQFiMc2W6AS" value="" name="msg" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="oZdFGZaovzZO" xmi.id="ne0AYL6f76WV" parent="i4OrX8epAvS1" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ldYqj5L8xDbw" name="ImageUtil" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="lZkqBlCLOMPy" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="D9xbVMXYBswS" name="formatDate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YXr0zmeCublN" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jFQB5GMxQfnm" type="XuQFiMc2W6AS" value="" name="datetime" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vIu68qWr6w09" name="makeFilename" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wDXomGChX6nf" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="CM6b2rLYOAZL" type="XuQFiMc2W6AS" value="" name="path" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ldYqj5L8xDbw" xmi.id="lZkqBlCLOMPy" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wJV0DV9PqEys" name="Image" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="XMb4SMkNdDLq" />
        <UML:Generalization xmi.idref="hZcJkx9QONx5" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OoUmCRqkjeml" name="fromFile" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nauWEeGrLkQK" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ejUby6mjSiJ8" type="XuQFiMc2W6AS" value="" name="filename" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="V9WpcBt00OkA" type="XuQFiMc2W6AS" value="" name="fix" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pA1FtINMSsC2" name="create" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="f785zI51O52p" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3501RkBFL3lX" type="XuQFiMc2W6AS" value="" name="data" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hzM3imLXvMmm" type="XuQFiMc2W6AS" value="" name="imageRequest" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nC46Foexl0yT" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nlMdHgS64JHY" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lJ0edkQGsYLr" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pQqDTt0H33NI" type="XuQFiMc2W6AS" value="" name="filename" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pzDayB4jS2N6" type="XuQFiMc2W6AS" value="" name="fd" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AGpDJAV6Aje8" name="http" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xfB7MqFEW2XD" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sgpLjAPUvj5C" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NXHSqY0yonB5" type="XuQFiMc2W6AS" value="" name="http" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Cuf7ckIzIZR6" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xTSRVxdisInS" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7P5uCEzAt9FF" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="33RJatPgGSaT" name="__getstate__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9gRzyCRzGtIq" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hXbYgombHE3l" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kgWy64Rlc0KI" name="__setstate__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6nHioZzddrht" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="p4u6IvpPbGPX" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TqVhhnXPR2OW" type="XuQFiMc2W6AS" value="" name="args" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mXJLlisCWNtC" name="pixelAt" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="L1IqNC2Ubb02" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9RbYRx2XlKGZ" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rDAV4pMqKfB6" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="X3ZILnpC0xf4" name="worldAt" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="X0NYv2ag4Rlk" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="m2s7h1B11TpM" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="drqEQoEvrmBC" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SwjTNYn1NdDn" name="_findWCS" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="pqSsFDah9J9V" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QQhFCsSjtnFm" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rwWEYhzy7gDH" name="_valueAt" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9lqBMsRDWM9R" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZdzQOECC2d4H" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qexyx4Tm0x0W" type="XuQFiMc2W6AS" value="" name="fn" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cxSieezBFwbe" type="XuQFiMc2W6AS" value="" name="*" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QaDQXBv98Nrk" name="extract" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="sW70swltje8T" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1pvHlUtuEj4a" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bTl5psWDShbz" type="XuQFiMc2W6AS" value="" name="params" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5JQSTxnOAJCu" name="DictMixin" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="wJV0DV9PqEys" xmi.id="XMb4SMkNdDLq" parent="5JQSTxnOAJCu" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RjocHeYU9Mei" name="RemoteObject" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="Ek4mVxLfxuNx" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="c0eZszU6N7gF" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Wwa0dFzGFdn5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NvTFMG3GylIg" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aGBwNr9ikcy6" name="__ping__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KDOYoAdPOpLl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="s1KqkdUGZ5GA" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eUUN4QTwRmn9" name="getProxy" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Zm1xZMiCoAZq" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NFNuKc4dpR9e" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Y0mxkX67nUz5" name="Pyro_dyncall" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ytun8ELtd0OT" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="64itTpX2aYz9" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sfJeoqUMpFKZ" type="XuQFiMc2W6AS" value="" name="method" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mQfXsedwgJq9" type="XuQFiMc2W6AS" value="" name="flags" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9N9ju8qmm8Pa" type="XuQFiMc2W6AS" value="" name="args" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="wJV0DV9PqEys" xmi.id="hZcJkx9QONx5" parent="RjocHeYU9Mei" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9zLNiNvHqhKd" name="PositionOutsideLimitsError" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="Zoo0VQxLu2Km" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="9zLNiNvHqhKd" xmi.id="Zoo0VQxLu2Km" parent="FRDTSCi1H5yV" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TFeNHyAE1ovi" name="Position" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="TDnGG4ZhJD5Z" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Y2XKVilKlRxV" name="CoordsPosition" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="TFeNHyAE1ovi" xmi.id="TDnGG4ZhJD5Z" parent="Y2XKVilKlRxV" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CHbUUe3dronq" name="SCatWrapper" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="VfNE5DO9mt0m" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="CHbUUe3dronq" xmi.id="VfNE5DO9mt0m" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="I1w2uxpEG1Ci" name="WrongSExtractorfileException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="x1KAPQpTX9MS" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="I1w2uxpEG1Ci" xmi.id="x1KAPQpTX9MS" parent="FRDTSCi1H5yV" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IAcpHyFV16R8" name="SExtractorfile" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aBW4uwTVB4NP" name="SExtractorException" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="pxabpvm73OuK" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FRDTSCi1H5yV" name="Exception" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="aBW4uwTVB4NP" xmi.id="pxabpvm73OuK" parent="FRDTSCi1H5yV" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sUztqsD80yRC" name="Simbad" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="Dqzbmqrd8cgS" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TWKZ6yzq1Wc2" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="mOae1FLSjdzo" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="nGuWrd3JZikU" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZwcaSCbFSTlH" name="lookup" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DXlf0Vv6HTkm" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6oYfUJ8Ghgvh" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wE7dp7RO33yW" type="XuQFiMc2W6AS" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ks0QYt5S5C6u" name="_parseSesame" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xwQ08UvSyBnV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JVILXFrkmaOl" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3HpLiZ5TR3ty" type="XuQFiMc2W6AS" value="" name="xml" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="sUztqsD80yRC" xmi.id="Dqzbmqrd8cgS" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OcD9AZuEqjXZ" name="TelescopeLimits" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="Jc0ifrgan5bv" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wOSjT1c1TyU6" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="J1AV6uK2Jmjk" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2T8ldJcMMhw9" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lKlEGELIhR3K" name="load" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GQJvsLFbyugH" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ldg5IbCbcN4h" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HPjY9RJtl271" type="XuQFiMc2W6AS" value="" name="filename" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ttq3GtkVIS2R" name="isAllowed" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YQjLMEzcxFoW" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tJIeLQfaowVe" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HjFEbwT4nH51" type="XuQFiMc2W6AS" value="" name="az" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AqWSIWs9pAn9" type="XuQFiMc2W6AS" value="" name="alt" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="OcD9AZuEqjXZ" xmi.id="Jc0ifrgan5bv" parent="Rvn8CIa99AA3" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="9HawYgxjUR9k" xmi.id="yztnAeug4d1O" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5gB1j5VQjauO" name="VONode" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5UDtAbbDL192" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="5gB1j5VQjauO" xmi.id="5UDtAbbDL192" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FD8aCHb0Wss2" name="VOTableHandler" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="JKdpjwWOoFZY" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Vvcp8EpSKGUy" name="xml" >
       <UML:Namespace.ownedElement>
        <UML:Class visibility="public" isSpecification="false" namespace="Vvcp8EpSKGUy" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZuiMXKHkYPJi" name="sax" >
         <UML:Namespace.ownedElement>
          <UML:Class visibility="public" isSpecification="false" namespace="ZuiMXKHkYPJi" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gujBkZBFSn4b" name="handler" >
           <UML:Namespace.ownedElement>
            <UML:Class visibility="public" isSpecification="false" namespace="gujBkZBFSn4b" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0u1K8VHiNz2t" name="ContentHandler" />
           </UML:Namespace.ownedElement>
          </UML:Class>
         </UML:Namespace.ownedElement>
        </UML:Class>
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="FD8aCHb0Wss2" xmi.id="JKdpjwWOoFZY" parent="0u1K8VHiNz2t" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5dxtqWQcCCpi" name="VOTable" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="0cChRzWk21Q5" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="5dxtqWQcCCpi" xmi.id="0cChRzWk21Q5" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SlCTkaYJVvha" name="Landolt" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="PelXYnWyD7an" />
        <UML:Generalization xmi.idref="D8DQDlBgbYAw" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uu4VQERaJ76U" comment="parent class.  to do that I call VizQuery.__init__(self)" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="cVPoe8BY0F2Q" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3jJlkI7myYX4" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RR0lY4DbnWLV" name="getName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="HWSHkSgBteuQ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mQHkzmoZHBLt" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="j81UeK0PlF9k" name="find" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="e62PM97O3Of9" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2wHH7cBN6bco" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3I0uvsKe0K8d" type="XuQFiMc2W6AS" value="" name="near" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9HawYgxjUR9k" name="VizQuery" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="yztnAeug4d1O" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FJCHvEelDaWR" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="esa4UxahEmx9" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NomOh5wBJFCy" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ybuBBRaWFMtu" name="useCat" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nkU14NvUCz8F" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Pp6g3Gdh8Bja" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8HIK3FU2oMBz" type="XuQFiMc2W6AS" value="" name="catName" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FluMwdw4uEPw" name="useColumns" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ApSO7vW3Ihqt" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RrwFD5Dzph0s" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2tMCtSS8EKSA" type="XuQFiMc2W6AS" value="" name="columns" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wPDobak3PeIc" type="XuQFiMc2W6AS" value="" name="sortBy" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iVbVAZNCThPM" type="XuQFiMc2W6AS" value="" name="reverse" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HYwgDDHviqQr" name="sortBy" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="rOpYFDPfzOWT" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Qm1tTODdBdzJ" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YWKqDAiTje7w" type="XuQFiMc2W6AS" value="" name="column" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nh4yK4FrYafj" name="constrainColumns" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tAtPkY8SwLuw" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="kNCT2KNriAPv" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OmYLB2myjru4" type="XuQFiMc2W6AS" value="" name="columns" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dFnJQBFmxl78" name="useTarget" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="r8lwbglam0T8" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="os4XhxZY7Sxp" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="15HvOBrzPcJp" type="XuQFiMc2W6AS" value="" name="center" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="nWZlHgr5WubD" type="XuQFiMc2W6AS" value="" name="radius" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AK8ZuPOitxRA" name="find" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="5mQyhp6G5IOE" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bGE88nJzv3vW" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jg4TfXappgOk" type="XuQFiMc2W6AS" value="" name="limit" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="SlCTkaYJVvha" xmi.id="PelXYnWyD7an" parent="9HawYgxjUR9k" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="SlCTkaYJVvha" xmi.id="D8DQDlBgbYAw" parent="noFJiAFlByCB" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0oW5P8tQPrLK" name="PPM" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="kdwix2Jc9L1V" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="v4d2NcXojMJD" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="LswRlhQej3h4" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rwh84EoKevxw" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dCtLZAYO6DW8" name="getName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="bObIPIN3SEO1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RIQ3EL0ZDwyy" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="MuNQ7rZWAzZO" name="getMetadata" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Kffmr1mDv9d0" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LXvYSsV1G4Ke" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zCU9A1VTZQzz" name="getMagnitudeBands" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nL1iUdgRpAax" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IS0XWI9qxobo" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="B5QiUQfkqeFN" name="find" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="w4a1kDZ3XZ7y" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wOBuAkgx5gdY" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JJz6Ra4ddSJ7" type="XuQFiMc2W6AS" value="" name="near" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qxshb52XUBPe" type="XuQFiMc2W6AS" value="" name="limit" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="0oW5P8tQPrLK" xmi.id="kdwix2Jc9L1V" parent="noFJiAFlByCB" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="79ZkcrqQog7P" name="UCAC2" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="l7uDJKqFOQG6" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pP5BpKHR8OXT" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="jU0I1a9qzEzn" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="actwD1ue0Huc" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YGEecl7BMy7X" name="getName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7NM4cLr8a3nA" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="y0ByF3YyWZEX" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="psL9pTenRnlg" name="getMetadata" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Wrw6vhEiaapP" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pJcLqqsvEC0o" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1TASEv63CiO1" name="getMagnitudeBands" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="AEJim65nXFFl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YFukPuYvkTzd" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8JpJ1BIZQCKo" name="find" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hfOaMXFBjfVA" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7qjpJhQStj8f" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pESMRf5ayutz" type="XuQFiMc2W6AS" value="" name="near" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6BWUNqISf0Fw" type="XuQFiMc2W6AS" value="" name="limit" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="noFJiAFlByCB" name="Catalog" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="ZVuxOBYqa0Mn" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2hdchxNAnq28" name="getName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="E2DcsLMu2xUi" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MEGdggdIMJ50" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="urqfitl470hn" name="getMetadata" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ZkwZgQHaG8Gy" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gI52c90oBDO1" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1z06zfugwxgW" name="getMagnitudeBands" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ZEfpKtlJsjQs" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6hKFsgHPQBz4" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PKWJFApMp9Zi" name="find" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ki11bNbNTS1J" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="no5Dz2IXHvMb" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="o8terJUEbyXq" type="XuQFiMc2W6AS" value="" name="near" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9KAyTieEWkSU" type="XuQFiMc2W6AS" value="" name="limit" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="79ZkcrqQog7P" xmi.id="l7uDJKqFOQG6" parent="noFJiAFlByCB" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KbkITbFXkl06" name="Path" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aIWFGmBxPYVm" comment="Create an Path instance from an XPath expression." name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JqRjMvTPdM9z" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3ivmNPufydxR" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="EAzzuz3UFZhW" type="XuQFiMc2W6AS" value="" name="path" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="l4ejhaBvk8se" name="find" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yvAg30J6uPON" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5v6KTnomcETy" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9wOmJVj4ZOmG" type="XuQFiMc2W6AS" value="" name="element" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BD7nPblYV7Io" name="findtext" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9iCfHCAnWnCF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="d2rCQbRMWZ2X" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XLdRj1muCshb" type="XuQFiMc2W6AS" value="" name="element" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RQ7wYQj9SYJq" type="XuQFiMc2W6AS" value="" name="default" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mz9xpoYGEgCk" name="findall" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KO8X2LF6E5ag" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4vrWTBKatUD9" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gNwAA8Pv5Wsu" type="XuQFiMc2W6AS" value="" name="element" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GuG7MUE1p8B0" name="_SimpleElementPath" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FbtI5lBO9JtC" comment="emulate pre-1.2 find/findtext/findall behaviour" name="find" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="2mrjUKpf2wgs" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="c6GrBrVPjjV6" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Bh71qIz5rsLx" type="XuQFiMc2W6AS" value="" name="element" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dWJkqCuSIBHS" type="XuQFiMc2W6AS" value="" name="tag" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ffv4XGz8lItb" name="findtext" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="S5lz9Q0S5BV1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Sl1jwHBw10gV" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LTBLQrDdX6h2" type="XuQFiMc2W6AS" value="" name="element" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KfB5x2eOne7i" type="XuQFiMc2W6AS" value="" name="tag" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vGcwGGSZkdu8" type="XuQFiMc2W6AS" value="" name="default" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BAPwoUehkFdy" name="findall" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3HgXLn7qrAR7" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="V5WDgQL9U66b" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="V63aFZbQhyNT" type="XuQFiMc2W6AS" value="" name="element" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SzAAEn9irfvX" type="XuQFiMc2W6AS" value="" name="tag" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="j0XOxsrPs1a6" name="DefaultParserAPI" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nhoeKi9NzqtK" name="parse" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Lzft2tPvxIh3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="b0BSAaXsY3EV" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="v6tn5Rsq8eUS" type="XuQFiMc2W6AS" value="" name="source" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MenJSge1enRp" type="XuQFiMc2W6AS" value="" name="parser" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jZtpBMFYy2pO" name="iterparse" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Q4dEq41Xsi9u" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jRPNEqAXnnRn" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hoje4QfnxXa8" type="XuQFiMc2W6AS" value="" name="source" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rpeprUDYtau8" type="XuQFiMc2W6AS" value="" name="events" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6nh3KFAB4myu" name="fromstring" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="cL7e83YMCzUv" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="G9S8jMG9PtLF" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wLkm3rh8eMBw" type="XuQFiMc2W6AS" value="" name="text" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Li3iaOxUhfEl" name="_ElementInterface" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XvtBG28qMDSS" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ueqn2qHpmEHN" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="H1mRyFNJvQ0V" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mvxUbCD854JJ" type="XuQFiMc2W6AS" value="" name="tag" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6P9SbcsqbfHZ" type="XuQFiMc2W6AS" value="" name="attrib" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OUTUYmneAv5l" name="__repr__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KXI4jZP83sab" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Xvb6asfSVTGV" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cLEkGHVlC4rl" name="makeelement" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QcDKoVyaAkNf" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xUBQyRvGwCIe" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lhmpXKO7fcsw" type="XuQFiMc2W6AS" value="" name="tag" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tLh4QXpL10jz" type="XuQFiMc2W6AS" value="" name="attrib" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2lniOdeFyJHM" name="__len__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YoNhWkMXW9Fs" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="q6fs5OpV13pp" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kr5hAN31RhrW" name="__getitem__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="mqsEXhkcLkh3" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5g14hpuEbFv5" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0HcUPrM9iRor" type="XuQFiMc2W6AS" value="" name="index" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XZF8oADoPoIo" name="__setitem__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="IEEqHDwxwc0P" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dcwM2kDoa305" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ili3TN40wJ8k" type="XuQFiMc2W6AS" value="" name="index" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RJXr5ndjQZ3Q" type="XuQFiMc2W6AS" value="" name="element" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="z3PvMVdom8fs" name="__delitem__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KuE50rxw7WEv" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wGbKock6qwu7" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9o25Q2SN5rGQ" type="XuQFiMc2W6AS" value="" name="index" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8yzyts32g565" name="__getslice__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="D2DmlzMJdqwo" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5YQ9OhXgZjlZ" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="agWfCkZIhWEa" type="XuQFiMc2W6AS" value="" name="start" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OFa3Ie6OBWVZ" type="XuQFiMc2W6AS" value="" name="stop" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YT6D0JnMYMPr" name="__setslice__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="OGLUdBaJn2Vk" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0TD90igBiuwR" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rIiU6eIe8Nq8" type="XuQFiMc2W6AS" value="" name="start" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gdSExq3wJG5H" type="XuQFiMc2W6AS" value="" name="stop" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wmTcgP1Vfjzj" type="XuQFiMc2W6AS" value="" name="elements" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sXgClkTiWuIA" name="__delslice__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="weGmd7InZ2j1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HKfw3cdPsztV" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ARmxUGgKnKUY" type="XuQFiMc2W6AS" value="" name="start" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4wEYqVg8pJ2q" type="XuQFiMc2W6AS" value="" name="stop" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GPL1jqYmmkKa" name="append" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="05LkqfK5e18x" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="F1g4KhvEL91y" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GHlpHSqYrAXZ" type="XuQFiMc2W6AS" value="" name="element" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="i1B3AA1QRkEj" name="insert" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="bTwROp7y2rAE" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="D2F2AmbAswug" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aDjCEr9wsJx0" type="XuQFiMc2W6AS" value="" name="index" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TyPvgbcrbrsm" type="XuQFiMc2W6AS" value="" name="element" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gI8Xb5X41uxh" name="remove" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="15E2zAiVhDa6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VZX7OPt0qnRE" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aXAcOJq2bwZC" type="XuQFiMc2W6AS" value="" name="element" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cR4SETfp0pPM" name="getchildren" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="EsUv541hV38h" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6EPhAwrC14C1" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VlUVYuqf6DKG" name="find" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DFHJQbXZlyiz" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9CQBGdAUVeNZ" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gNE9QKqv5JPe" type="XuQFiMc2W6AS" value="" name="path" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZqT2Upb8CoHc" name="findtext" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tQUzVLVBhZb2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="86WEPvqa87rY" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gO5SKmRrcts5" type="XuQFiMc2W6AS" value="" name="path" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iRDsFTUOXycu" type="XuQFiMc2W6AS" value="" name="default" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="L1rxuj2aBESO" name="findall" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="93TIHthwmTAd" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="humErM8imaiH" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vBRak2a53S3v" type="XuQFiMc2W6AS" value="" name="path" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oGLaq3qjDHKx" name="clear" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ZRJLtSyhgKFX" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Hu3LK4EU5ikN" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="L5EYKYUcRXvj" name="get" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tzOFG6TxnNMm" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Z9BepwzPNHkE" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jhtPz9uIC9pX" type="XuQFiMc2W6AS" value="" name="key" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fJ74q2oNBzz1" type="XuQFiMc2W6AS" value="" name="default" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UF3gOsB1BI6z" name="set" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="CevSVt1TIUC5" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KsMUpLTjIryY" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xRTlmoVG3WxP" type="XuQFiMc2W6AS" value="" name="key" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="O8QZPUWjMqBC" type="XuQFiMc2W6AS" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IfLJCGiaN78k" name="keys" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="w6CCZOHp1b9D" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="beRyVdAfH37l" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ppmAwsuWUMUx" name="items" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="X39ZcGmP5Wa0" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zccEfizbmBlL" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OUWtoyqlaR0F" name="getiterator" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3YCdzAs68eyF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7xot9ZDgaKDC" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ayadUAbtc7kR" type="XuQFiMc2W6AS" value="" name="tag" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EBtoV7z35ZgX" name="QName" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hIOHN8gRht2e" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="E1H6HnPeIn4I" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1tl9XjOlsGYL" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NVOQ22xhIMyg" type="XuQFiMc2W6AS" value="" name="text_or_uri" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Uf59W7oX0XfW" type="XuQFiMc2W6AS" value="" name="tag" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="n0z6Mymodpy9" name="__str__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="SyFijH1WH0cd" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ukevHJRVLgZc" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wMQXBOe46JxN" name="__hash__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="2CaKABx7XLeh" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cOqv2PYSNlB4" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jJlnaiAA4y64" name="__cmp__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="5cl7apAyRfeo" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NcXiNimPsLj2" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Wf710kgi1PTb" type="XuQFiMc2W6AS" value="" name="other" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LPCDktDEWLDV" name="ElementTree" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3sB4FefLGOQr" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="K0OZOpQaNDEb" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="EandDRSYqcla" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Txm0I0VJqgN5" type="XuQFiMc2W6AS" value="" name="element" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ee9TGt3jqoh6" name="getroot" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="t8hGJvpvZxOn" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mCPcqmh9k6i8" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qQUeECk0M7aB" name="_setroot" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ERJYYthPA1yW" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rHKbL0hE6OVP" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HKKoFjZ594jL" type="XuQFiMc2W6AS" value="" name="element" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1gk72DUKWp6l" name="parse" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="HbBDsei0maGv" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WgpdiWywyHSU" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AAsI9qm9UVEX" type="XuQFiMc2W6AS" value="" name="source" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ijpCWvw2ZlfH" type="XuQFiMc2W6AS" value="" name="parser" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Q34tYJQE2DPY" name="getiterator" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="mUcmh1KmMqQQ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6LYg6DvLm7Zc" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lHcVpqQFtV6P" type="XuQFiMc2W6AS" value="" name="tag" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3LlnSKPBZzgO" name="find" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="VR03QeRFj1wH" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="p5chai6KDi6s" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hQe3G4RHOD4o" type="XuQFiMc2W6AS" value="" name="path" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="k1bxhhnP5SQJ" name="findtext" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3rV5U2Uj19i0" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UsYs3afW1fZR" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Hzhz0bGicsdK" type="XuQFiMc2W6AS" value="" name="path" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XRhdr7uLxTCy" type="XuQFiMc2W6AS" value="" name="default" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lziLpKdKlKvc" name="findall" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nhrY0m8Qa2lr" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QqvLH5KKunNO" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ps6p1onklT4Y" type="XuQFiMc2W6AS" value="" name="path" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="73A2qXOeNURN" name="write" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9zI0PHpXN2IV" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HE52h9ZTrQzr" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="A8FlAyaH2kHq" type="XuQFiMc2W6AS" value="" name="file" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GgUbAvwR92Sp" type="XuQFiMc2W6AS" value="" name="encoding" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1rl1Z2rniMPr" name="_write" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="VgMGqRJghmCO" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FJGNJiCThSR4" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jFc5HsaIjLJH" type="XuQFiMc2W6AS" value="" name="file" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="M944VRtilA54" type="XuQFiMc2W6AS" value="" name="node" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sHVYjxcRCCUT" type="XuQFiMc2W6AS" value="" name="encoding" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="54kmO11kA6md" type="XuQFiMc2W6AS" value="" name="namespaces" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jpptzHL2M5pi" name="_iterparse" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4oQFuCqQqAee" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="gUszxBHhnbmS" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cvLHiXfPKTJI" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="keK4h7mlwCyq" type="XuQFiMc2W6AS" value="" name="source" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NnEBxrqXm9oS" type="XuQFiMc2W6AS" value="" name="events" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hWBdh8R4vgFq" name="next" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="l5JWe3wLZ7yG" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="X3OHCCkteaqb" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FQI84WzZZNom" name="__iter__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7HWfNStcqCjs" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XYdC6TnrW4LA" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="giRF5Ezakcmr" name="TreeBuilder" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3agZc2kiHENc" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JDuYRFB5UOas" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gEFVOyN4enKh" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1JHlu4cxcHVE" type="XuQFiMc2W6AS" value="" name="element_factory" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KwvyjDdiUuTO" name="close" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="vHWNf5Dxz8ti" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="y4KYLplc2f8R" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LWOqPrENtYuC" name="_flush" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="MmlLsf3E9P4Y" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LfoNIvoBCJYq" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GGu8noK8R7Uj" name="data" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nLSCQutQAobk" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0GvCZR2vDmG4" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RHIYgK7vYz1L" type="XuQFiMc2W6AS" value="" name="data" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EbdPNuTm9lLo" name="start" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="2RV3npT24KS4" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3SjcPkvA3NMS" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FFqQ2RAG3nfO" type="XuQFiMc2W6AS" value="" name="tag" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="f9BnsWbwwIWL" type="XuQFiMc2W6AS" value="" name="attrs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jaKkMy917Kox" name="end" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="m31rNnp9Bgtq" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="oPtkhP5hpYjc" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NAePU5UCfow1" type="XuQFiMc2W6AS" value="" name="tag" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6wYvSFVpN7Fs" name="XMLTreeBuilder" >
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Cj2qVypG0q7N" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ayGYpMwRGREr" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ewXpdOdhJ9al" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="O3bmAocLVcB0" type="XuQFiMc2W6AS" value="" name="html" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nrY616sN9R7I" name="_fixtext" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="2TK9sSR574nR" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FhdiJmgskxQX" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HKwXj8PX0vbz" type="XuQFiMc2W6AS" value="" name="text" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oUJZPj4g21Bl" name="_fixname" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="MXaMWj7gIOlm" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9aI7Us4WLPdC" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="p5Hw75LuXeTw" type="XuQFiMc2W6AS" value="" name="key" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GqGZFtl2w3y2" name="_start" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="FqL8tvXffckj" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6KwbwPVGu5cR" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mk546qqMg6vt" type="XuQFiMc2W6AS" value="" name="tag" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="yfvugswmAsL4" type="XuQFiMc2W6AS" value="" name="attrib_in" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Qa55fzydesXI" name="_start_list" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tZ64piA0tuoc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="kS2sINwWDHe6" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="BBlqlVY94dEj" type="XuQFiMc2W6AS" value="" name="tag" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aBMC3rUlHWda" type="XuQFiMc2W6AS" value="" name="attrib_in" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PMlTy0CWBWjC" name="_data" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="CiSLCBXYKUC2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MBxdiaDZ7Heu" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zmsqgfS4zEXv" type="XuQFiMc2W6AS" value="" name="text" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2Na9dC2ayuRd" name="_end" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="AlK7dlkBdRig" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XthX5CSFuua5" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="37dObnOd9ylk" type="XuQFiMc2W6AS" value="" name="tag" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="d8wW1Wb2eCOD" name="_default" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="dozHzOUv9H0q" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ynp5japsL9zy" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="th7W8pCjw8Fx" type="XuQFiMc2W6AS" value="" name="text" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rniAwf7pMEJU" name="doctype" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TtwKm96ISf8y" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2WCycRtFEsUB" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Ex6LE4C4rsEn" type="XuQFiMc2W6AS" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WJbsWuLYOXU1" type="XuQFiMc2W6AS" value="" name="pubid" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wNE8DjJQgPjs" type="XuQFiMc2W6AS" value="" name="system" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZTUyyyxtJ91X" name="feed" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Kezen19eK4A2" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sLxWiePCYLUK" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UYavDgtl8Mh6" type="XuQFiMc2W6AS" value="" name="data" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iXCGtfYLD6GR" name="close" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wVuGZ3IGaTWR" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="n8AvSrzmVxOG" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="83lL9zku7unX" name="TestCatalog" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="llKEigTeCLsj" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="g5PqQHanQZiz" name="test_closest" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="47bA7DvoIJei" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="34jaAmDFXmPD" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YETwmBwpEfOM" name="test_box" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wTzCkcuIqMDa" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PbbwLy8P6jXD" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="83lL9zku7unX" xmi.id="llKEigTeCLsj" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="X9Ojmm59Lg5g" name="TestCoord" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="dB3jsbuo2s0m" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cS9eK8Oo1P7E" name="equal" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JFeJWCV6iaAK" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cyyzDS3E0JaE" type="XuQFiMc2W6AS" value="" name="a" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cY54bdPC5ZqO" type="XuQFiMc2W6AS" value="" name="b" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hDAgcFuCDqBQ" type="XuQFiMc2W6AS" value="" name="e" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DaUG7IeoVpS5" name="test_parsing_conversion_bsc" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TFGCnPU0zwF6" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4MIGCRgTeJkA" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ErskgKnje3xo" name="test_parsing_conversion_hipparcos" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="vy0suDy84oqj" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VbG7u0IMEWW1" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6cSkfPX80nGt" name="test_parse_dms" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8lfCZWvg8LOl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lWDx0hxwfxoZ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="X9Ojmm59Lg5g" xmi.id="dB3jsbuo2s0m" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ituhg8YQclNc" name="TestDS9" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="SKY5FLeN6Had" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="havlsVOdweXl" name="test_basics" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fIXxcTUH4P2w" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KAHrfR3GCfTd" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sPZp34aLCpAr" name="test_use_global_ds9" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3yj7Nj1G8a5B" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HE5RtY4WpZTR" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ituhg8YQclNc" xmi.id="SKY5FLeN6Had" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ddUpTfhitk9k" name="TestImage" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="JBH8lkXoiEt4" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yDvfRohNgzS8" name="test_headers" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0xTOB8X8LSnl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KgCIO3ikbnyt" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EU6uTY0lCA3Z" name="test_wcs" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="FOWZqHK4jOwA" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DjJoVHgVD7tO" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xwv77zeKgx7B" name="test_extractor" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YynGNhQIeMPl" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DneQuXm7vHgj" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="J43zzA9AvnYn" name="test_make_filename" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="PnB39YmQapNa" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JLtEaZw6YhMt" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yWirKHdbaWpA" name="test_create" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="CdvmQIKOp3E7" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5jGbRdUqQdtX" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ddUpTfhitk9k" xmi.id="JBH8lkXoiEt4" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KriuNV2QFI0g" name="TestLandolt" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="vSWJ6NoI0j2Q" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tuOrdQGfl3U9" name="test_find" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8Zc83fExZcmB" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2Qpq2N1AxaWq" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="KriuNV2QFI0g" xmi.id="vSWJ6NoI0j2Q" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="02ok3Ht3hhti" name="TestPosition" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="4us0TOoZvOhz" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RaaNwFKy8EXZ" name="test_ra_dec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="pDpNGcOfAw07" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uH2bnEMbJ843" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9K3FYaoRrp2c" name="test_az_alt" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="k2KvwK04f3JB" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3MBKUFLIQAfg" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="d6cSvd4wzGES" name="test_long_lat" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DJOqKfzvjcLc" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TXkuhNYQNsJK" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DPYCdke5HMxx" name="test_galactic" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="PK88uTl7qHKU" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="kVN7MePXvlNF" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2wXJJUE1xb8J" name="test_ecliptic" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yYWppoHrko91" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DWq8HBNgWVpQ" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GN2Dx9XAfLJu" name="test_altAzRaDec" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="l8bUuiV85YM0" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XeZ38MR4uxrj" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="02ok3Ht3hhti" xmi.id="4us0TOoZvOhz" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="frBKCSCh6lkC" name="TestVizQuery" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="7AH158lpFKJ7" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="L32YNJgN5uRO" name="test_find" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="d4ZkFsxbvx9H" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UVLrkbQN3f8G" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="frBKCSCh6lkC" xmi.id="7AH158lpFKJ7" parent="Rvn8CIa99AA3" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wLniJG3yEAdh" name="SiteController" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="XenbE9aCrA3X" />
        <UML:Generalization xmi.idref="Omg3R1V5xtQ2" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RPLGaOmZh8Eg" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xoBcuPI6CpfM" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="BnZZAAGnmucW" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="A6o5MgFl5Y2d" type="XuQFiMc2W6AS" value="" name="args" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xu7johDwo22A" name="parseArgs" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DHwzHw7xD1e1" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gHwjnwLkiWMc" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tcg3PMOMEV50" type="XuQFiMc2W6AS" value="" name="args" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xxjdR4GKewM4" name="startup" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JTxVUZUQXB3y" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GkQSDUSOlNN2" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FHHsCdwQLMtY" name="_add" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="l1vgn5p9BLrZ" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="oJxZeIZylWRG" type="XuQFiMc2W6AS" value="" name="self" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4teb4hXIxmA9" type="XuQFiMc2W6AS" value="" name="location" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="N6XiQQFFiCmK" type="XuQFiMc2W6AS" value="" name="path" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UMIEqhSua6Vf" type="XuQFiMc2W6AS" value="" name="start" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="l6oRGbmjv2xl" name="shutdown" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="vi341uelzQCF" type="XuQFiMc2W6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iPgIT9vE8qtu" type="XuQFiMc2W6AS" value="" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Rvn8CIa99AA3" name="object" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="wLniJG3yEAdh" xmi.id="Omg3R1V5xtQ2" parent="Rvn8CIa99AA3" name="" />
     </UML:Namespace.ownedElement>
     <XMI.extension xmi.extender="umbrello" >
      <diagrams>
       <diagram showopsig="1" linecolor="#ff0000" snapx="10" showattribassocs="1" snapy="10" linewidth="0" showattsig="1" showpackage="1" showstereotype="1" name="class diagram" font="DejaVu Sans,9,-1,0,50,0,0,0,0,0" canvasheight="813" canvaswidth="982" localid="" snapcsgrid="0" showgrid="1" showops="1" usefillcolor="1" fillcolor="#ffff00" zoom="100" xmi.id="FZGNWYx6u2Qq" documentation="" showscope="1" snapgrid="0" showatts="1" type="1" >
        <widgets>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="1" x="326" showattsigs="601" showstereotype="1" y="99" showattributes="1" font="DejaVu Sans,9,-1,0,75,0,0,0,0,0" width="415" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="KNvyau1h0cf5" showscope="1" height="88" showopsigs="601" />
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="1" x="34" showattsigs="601" showstereotype="1" y="84" showattributes="1" font="DejaVu Sans,9,-1,0,75,0,0,0,0,0" width="54" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="wDC9ESaAr1kl" showscope="1" height="32" showopsigs="601" />
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="1" x="49" showattsigs="601" showstereotype="1" y="220" showattributes="1" font="DejaVu Sans,9,-1,0,75,0,0,0,0,0" width="113" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="oRC2sVUWr3oR" showscope="1" height="32" showopsigs="601" />
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="1" x="542" showattsigs="601" showstereotype="1" y="236" showattributes="1" font="DejaVu Sans,9,-1,0,75,0,0,0,0,0" width="278" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="ItJA34IGeSJj" showscope="1" height="56" showopsigs="601" />
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="1" x="330" showattsigs="601" showstereotype="1" y="25" showattributes="1" font="DejaVu Sans,9,-1,0,75,0,0,0,0,0" width="573" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="BbWiMseK5Lvx" showscope="1" height="56" showopsigs="601" />
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="1" x="70" showattsigs="601" showstereotype="1" y="696" showattributes="1" font="DejaVu Sans,9,-1,0,75,0,0,0,0,0" width="387" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="l2UvwTPDZJ5q" showscope="1" height="56" showopsigs="601" />
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="1" x="57" showattsigs="601" showstereotype="1" y="585" showattributes="1" font="DejaVu Sans,9,-1,0,75,0,0,0,0,0" width="429" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="2dWUeCKz1fk2" showscope="1" height="88" showopsigs="601" />
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="1" x="518" showattsigs="601" showstereotype="1" y="305" showattributes="1" font="DejaVu Sans,9,-1,0,75,0,0,0,0,0" width="460" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="lHkzUD2muz1E" showscope="1" height="504" showopsigs="601" />
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="1" x="32" showattsigs="601" showstereotype="1" y="293" showattributes="1" font="DejaVu Sans,9,-1,0,75,0,0,0,0,0" width="467" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="WIkawHPaxmgb" showscope="1" height="248" showopsigs="601" />
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="0" showpackage="1" x="183" showattsigs="601" showstereotype="1" y="137" showattributes="1" font="DejaVu Sans,9,-1,0,75,0,0,0,0,0" width="63" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="pvyJ9Wm4EgrK" showscope="1" height="32" showopsigs="601" />
        </widgets>
        <messages/>
        <associations/>
       </diagram>
      </diagrams>
     </XMI.extension>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Use Case View" name="Use Case View" >
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Component View" name="Component View" >
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Deployment View" name="Deployment View" >
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Entity Relationship Model" name="Entity Relationship Model" >
     <UML:Namespace.ownedElement/>
    </UML:Model>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="FZGNWYx6u2Qq" uniqueid="djsvxLTSA0ld" documentation="" />
  <listview>
   <listitem open="1" type="800" label="Views" >
    <listitem open="1" type="836" id="Entity Relationship Model" />
    <listitem open="1" type="827" id="Deployment View" />
    <listitem open="1" type="821" id="Component View" />
    <listitem open="1" type="802" id="Use Case View" />
    <listitem open="1" type="801" id="Logical View" >
     <listitem open="0" type="830" id="Datatypes" >
      <listitem open="1" type="829" id="MBU8w6SWsE8Y" />
      <listitem open="1" type="829" id="ad23Lq4ZJB7a" />
      <listitem open="1" type="829" id="GT7aJNmrkowM" />
      <listitem open="1" type="829" id="3m3hfLSexQN5" />
      <listitem open="1" type="829" id="XuQFiMc2W6AS" />
      <listitem open="1" type="829" id="YN47eXH9okcK" />
      <listitem open="1" type="829" id="s8UclqDE4eyg" />
      <listitem open="1" type="829" id="annegMXWThp2" />
      <listitem open="1" type="829" id="yrAddGpLzGMk" />
      <listitem open="1" type="829" id="VIVVYpDT4ubs" />
      <listitem open="1" type="829" id="q6CJbYf5KqGE" />
      <listitem open="1" type="829" id="uHjAoyXKUVOM" />
      <listitem open="1" type="829" id="VmDDtj7sZHTA" />
      <listitem open="1" type="829" id="VERjbhcMMn0z" />
      <listitem open="1" type="829" id="ios4RlDltUFg" />
     </listitem>
     <listitem open="0" type="813" id="Vvcp8EpSKGUy" >
      <listitem open="1" type="813" id="ZuiMXKHkYPJi" >
       <listitem open="1" type="813" id="gujBkZBFSn4b" >
        <listitem open="1" type="813" id="0u1K8VHiNz2t" />
       </listitem>
      </listitem>
     </listitem>
     <listitem open="1" type="813" id="d65NdveW7oBP" />
     <listitem open="0" type="813" id="3bT4QqYVmH6E" >
      <listitem open="1" type="813" id="i0MZp3MVa613" />
     </listitem>
     <listitem open="1" type="813" id="iWmVTzChXan7" >
      <listitem open="0" type="815" id="78hNTm6gxMQL" />
      <listitem open="0" type="815" id="X1cnxUPGIL7i" />
      <listitem open="0" type="815" id="8d4DovfkIcTu" />
     </listitem>
     <listitem open="1" type="813" id="Rvn8CIa99AA3" />
     <listitem open="1" type="813" id="pvyJ9Wm4EgrK" >
      <listitem open="1" type="813" id="XD0Sp8tFHBAa" />
     </listitem>
     <listitem open="1" type="813" id="letTxMgyqPlq" />
     <listitem open="1" type="813" id="pDCBMOaIBM3j" />
     <listitem open="1" type="813" id="jpptzHL2M5pi" >
      <listitem open="0" type="815" id="FQI84WzZZNom" />
      <listitem open="0" type="815" id="hWBdh8R4vgFq" />
      <listitem open="0" type="815" id="4oQFuCqQqAee" />
     </listitem>
     <listitem open="1" type="813" id="GuG7MUE1p8B0" >
      <listitem open="0" type="815" id="BAPwoUehkFdy" />
      <listitem open="0" type="815" id="Ffv4XGz8lItb" />
      <listitem open="0" type="815" id="FbtI5lBO9JtC" />
     </listitem>
     <listitem open="1" type="813" id="PSqQCDvG2zSC" >
      <listitem open="0" type="815" id="FlOI7tYgH4If" />
     </listitem>
     <listitem open="1" type="813" id="Li3iaOxUhfEl" >
      <listitem open="0" type="815" id="OUWtoyqlaR0F" />
      <listitem open="0" type="815" id="ppmAwsuWUMUx" />
      <listitem open="0" type="815" id="IfLJCGiaN78k" />
      <listitem open="0" type="815" id="UF3gOsB1BI6z" />
      <listitem open="0" type="815" id="L5EYKYUcRXvj" />
      <listitem open="0" type="815" id="oGLaq3qjDHKx" />
      <listitem open="0" type="815" id="L1rxuj2aBESO" />
      <listitem open="0" type="815" id="ZqT2Upb8CoHc" />
      <listitem open="0" type="815" id="VlUVYuqf6DKG" />
      <listitem open="0" type="815" id="cR4SETfp0pPM" />
      <listitem open="0" type="815" id="gI8Xb5X41uxh" />
      <listitem open="0" type="815" id="i1B3AA1QRkEj" />
      <listitem open="0" type="815" id="GPL1jqYmmkKa" />
      <listitem open="0" type="815" id="sXgClkTiWuIA" />
      <listitem open="0" type="815" id="YT6D0JnMYMPr" />
      <listitem open="0" type="815" id="8yzyts32g565" />
      <listitem open="0" type="815" id="z3PvMVdom8fs" />
      <listitem open="0" type="815" id="XZF8oADoPoIo" />
      <listitem open="0" type="815" id="kr5hAN31RhrW" />
      <listitem open="0" type="815" id="2lniOdeFyJHM" />
      <listitem open="0" type="815" id="cLEkGHVlC4rl" />
      <listitem open="0" type="815" id="OUTUYmneAv5l" />
      <listitem open="0" type="815" id="XvtBG28qMDSS" />
     </listitem>
     <listitem open="1" type="813" id="8IwWaE1tJyzb" >
      <listitem open="0" type="815" id="0SdHwxqNGhVc" />
      <listitem open="0" type="815" id="eClDiUeuJUKY" />
      <listitem open="0" type="815" id="WU2QJIWtZWjS" />
      <listitem open="0" type="815" id="XYMkLZeZCVdD" />
      <listitem open="0" type="815" id="HkNxRW6udtOa" />
      <listitem open="0" type="815" id="EPya6sETijAB" />
     </listitem>
     <listitem open="1" type="813" id="6wYvSFVpN7Fs" >
      <listitem open="0" type="815" id="iXCGtfYLD6GR" />
      <listitem open="0" type="815" id="ZTUyyyxtJ91X" />
      <listitem open="0" type="815" id="rniAwf7pMEJU" />
      <listitem open="0" type="815" id="d8wW1Wb2eCOD" />
      <listitem open="0" type="815" id="2Na9dC2ayuRd" />
      <listitem open="0" type="815" id="PMlTy0CWBWjC" />
      <listitem open="0" type="815" id="Qa55fzydesXI" />
      <listitem open="0" type="815" id="GqGZFtl2w3y2" />
      <listitem open="0" type="815" id="oUJZPj4g21Bl" />
      <listitem open="0" type="815" id="nrY616sN9R7I" />
      <listitem open="0" type="815" id="Cj2qVypG0q7N" />
     </listitem>
     <listitem open="1" type="813" id="DF6N2dfnE4Ag" />
     <listitem open="1" type="813" id="5W83KpHF0799" />
     <listitem open="1" type="813" id="I1w2uxpEG1Ci" />
     <listitem open="1" type="813" id="oZdFGZaovzZO" />
     <listitem open="1" type="813" id="9HawYgxjUR9k" >
      <listitem open="0" type="815" id="AK8ZuPOitxRA" />
      <listitem open="0" type="815" id="dFnJQBFmxl78" />
      <listitem open="0" type="815" id="nh4yK4FrYafj" />
      <listitem open="0" type="815" id="HYwgDDHviqQr" />
      <listitem open="0" type="815" id="FluMwdw4uEPw" />
      <listitem open="0" type="815" id="ybuBBRaWFMtu" />
      <listitem open="0" type="815" id="FJCHvEelDaWR" />
     </listitem>
     <listitem open="1" type="813" id="FD8aCHb0Wss2" />
     <listitem open="1" type="813" id="5dxtqWQcCCpi" />
     <listitem open="1" type="813" id="5gB1j5VQjauO" />
     <listitem open="1" type="813" id="PV8LMfaWL0pl" >
      <listitem open="0" type="815" id="2L6qhk8UYL2O" />
      <listitem open="0" type="815" id="L6DGJHjxoOgK" />
      <listitem open="0" type="815" id="6EGfXSTD7zkP" />
      <listitem open="0" type="815" id="mYFUraHDZLBq" />
     </listitem>
     <listitem open="1" type="813" id="79ZkcrqQog7P" >
      <listitem open="0" type="815" id="8JpJ1BIZQCKo" />
      <listitem open="0" type="815" id="1TASEv63CiO1" />
      <listitem open="0" type="815" id="psL9pTenRnlg" />
      <listitem open="0" type="815" id="YGEecl7BMy7X" />
      <listitem open="0" type="815" id="pP5BpKHR8OXT" />
     </listitem>
     <listitem open="1" type="813" id="wqGqkUUR3FmR" />
     <listitem open="1" type="813" id="H9oXVcyCVIwi" />
     <listitem open="1" type="813" id="giRF5Ezakcmr" >
      <listitem open="0" type="815" id="jaKkMy917Kox" />
      <listitem open="0" type="815" id="EbdPNuTm9lLo" />
      <listitem open="0" type="815" id="GGu8noK8R7Uj" />
      <listitem open="0" type="815" id="LWOqPrENtYuC" />
      <listitem open="0" type="815" id="KwvyjDdiUuTO" />
      <listitem open="0" type="815" id="3agZc2kiHENc" />
     </listitem>
     <listitem open="1" type="813" id="xt5imVdAGghM" >
      <listitem open="0" type="815" id="iSxbyrpxpwFg" />
      <listitem open="0" type="815" id="oHvTlDjfvXwF" />
      <listitem open="0" type="815" id="umU1bTPXOfhl" />
     </listitem>
     <listitem open="1" type="813" id="cpm8f8nwyBNm" >
      <listitem open="0" type="815" id="FzD52StkyzHQ" />
      <listitem open="0" type="815" id="XWrMYTc6q3Fo" />
      <listitem open="0" type="815" id="KCgg2fAGq7dd" />
     </listitem>
     <listitem open="1" type="813" id="00FAbVs09ISo" >
      <listitem open="0" type="815" id="MZwO9QVjDzAC" />
      <listitem open="0" type="815" id="ITbwJT2S4cW6" />
      <listitem open="0" type="815" id="NtxOKXR33KJj" />
      <listitem open="0" type="815" id="W5dqKJl4pgxg" />
      <listitem open="0" type="815" id="HW05ijyQYuL0" />
     </listitem>
     <listitem open="1" type="813" id="HrtdjbxCTlsH" />
     <listitem open="1" type="813" id="frBKCSCh6lkC" >
      <listitem open="0" type="815" id="L32YNJgN5uRO" />
     </listitem>
     <listitem open="1" type="813" id="tWIb4cn7Mvz9" />
     <listitem open="1" type="813" id="8jHvtDrr52KQ" >
      <listitem open="0" type="815" id="ujLgLZTuKGzR" />
      <listitem open="0" type="815" id="HjQEnkCCocEn" />
      <listitem open="0" type="815" id="xuyifqZTw6My" />
      <listitem open="0" type="815" id="PahaJHNBnnut" />
      <listitem open="0" type="815" id="Kb5yRNQXDjcp" />
      <listitem open="0" type="815" id="eA0cFmbEfsIS" />
     </listitem>
     <listitem open="1" type="813" id="QSnXP0P9JHrV" >
      <listitem open="0" type="815" id="SW1ZeKpbkYKC" />
      <listitem open="0" type="815" id="AwGRA3DU8AKI" />
      <listitem open="0" type="815" id="5tjq1IovHGpo" />
      <listitem open="0" type="815" id="8tJp4D5On8ax" />
      <listitem open="0" type="815" id="pieuMIN2jDuG" />
      <listitem open="0" type="815" id="1qc5ZRG74eeV" />
      <listitem open="0" type="815" id="YAeForlz6ioA" />
      <listitem open="0" type="815" id="ST1fzzO4jgDY" />
      <listitem open="0" type="815" id="bw91XtXUFVyl" />
      <listitem open="0" type="815" id="cswFoQm8QbjW" />
      <listitem open="0" type="815" id="GPQXvLN9fwUZ" />
      <listitem open="0" type="815" id="OoP5NxGMJYvs" />
      <listitem open="0" type="815" id="hUr22sNfhZaD" />
      <listitem open="0" type="815" id="UHfEOtqXNY0L" />
      <listitem open="0" type="815" id="A1O6A1oaj7Ge" />
      <listitem open="0" type="815" id="2nDv74WZyBfj" />
      <listitem open="0" type="815" id="ZCYY0gkfvJtb" />
     </listitem>
     <listitem open="1" type="813" id="HmKWQzvXpZHz" >
      <listitem open="0" type="815" id="FfKBL0tx8wDu" />
      <listitem open="0" type="815" id="1OwIRASHwigj" />
      <listitem open="0" type="815" id="zfyapkG5H5GC" />
      <listitem open="0" type="815" id="0ZCUrW71bClh" />
      <listitem open="0" type="815" id="cd9Kmh8NWIMf" />
     </listitem>
     <listitem open="1" type="813" id="NqLiPbL5akyu" >
      <listitem open="0" type="815" id="Kw6HPw7ZFehP" />
      <listitem open="0" type="815" id="PgXYi1vpzUsq" />
      <listitem open="0" type="815" id="PzERK4ppA4VN" />
      <listitem open="0" type="815" id="36b8UZmS2LsP" />
      <listitem open="0" type="815" id="QNguiEEY5Qxe" />
      <listitem open="0" type="815" id="w8ozHfqTWNXJ" />
     </listitem>
     <listitem open="1" type="813" id="02ok3Ht3hhti" >
      <listitem open="0" type="815" id="GN2Dx9XAfLJu" />
      <listitem open="0" type="815" id="2wXJJUE1xb8J" />
      <listitem open="0" type="815" id="DPYCdke5HMxx" />
      <listitem open="0" type="815" id="d6cSvd4wzGES" />
      <listitem open="0" type="815" id="9K3FYaoRrp2c" />
      <listitem open="0" type="815" id="RaaNwFKy8EXZ" />
     </listitem>
     <listitem open="1" type="813" id="GZokwgoCr6MU" >
      <listitem open="0" type="815" id="9Q5QNmMuEDT3" />
      <listitem open="0" type="815" id="r2OwnfLTHzhy" />
      <listitem open="0" type="815" id="H7O5JQHK4lHP" />
      <listitem open="0" type="815" id="I12LUhwBoE4C" />
      <listitem open="0" type="815" id="9uW5BFql3Shd" />
      <listitem open="0" type="815" id="ma0J4sPfyGjk" />
      <listitem open="0" type="815" id="rcgo1TSoYTt6" />
      <listitem open="0" type="815" id="5NHT4IqtzPnd" />
      <listitem open="0" type="815" id="0MiEuraiPj0N" />
      <listitem open="0" type="815" id="G1HfJl3oyyYd" />
      <listitem open="0" type="815" id="jDz9vr5uQKWQ" />
      <listitem open="0" type="815" id="u16BM51oRiuw" />
      <listitem open="0" type="815" id="oyJQw2d8HN1s" />
     </listitem>
     <listitem open="1" type="813" id="blbRQMmcPwQg" >
      <listitem open="0" type="815" id="xdci3eVQRz42" />
     </listitem>
     <listitem open="1" type="813" id="ysCgSxL80cAD" >
      <listitem open="0" type="815" id="dM2D3otGsfnL" />
      <listitem open="0" type="815" id="BknsfV8xZioi" />
     </listitem>
     <listitem open="1" type="813" id="x7QCzjro4V6m" >
      <listitem open="0" type="815" id="mFjZntzrkcle" />
      <listitem open="0" type="815" id="MpIP0FPanaAP" />
      <listitem open="0" type="815" id="O83emVd22Cx2" />
      <listitem open="0" type="815" id="vT84vPc2IfUz" />
     </listitem>
     <listitem open="1" type="813" id="KriuNV2QFI0g" >
      <listitem open="0" type="815" id="tuOrdQGfl3U9" />
     </listitem>
     <listitem open="1" type="813" id="ddUpTfhitk9k" >
      <listitem open="0" type="815" id="yWirKHdbaWpA" />
      <listitem open="0" type="815" id="J43zzA9AvnYn" />
      <listitem open="0" type="815" id="xwv77zeKgx7B" />
      <listitem open="0" type="815" id="EU6uTY0lCA3Z" />
      <listitem open="0" type="815" id="yDvfRohNgzS8" />
     </listitem>
     <listitem open="1" type="813" id="QUjJFodK6FAa" >
      <listitem open="0" type="815" id="J7ljSHjnmAvw" />
      <listitem open="0" type="815" id="JgeM6LqvSLY2" />
      <listitem open="0" type="815" id="GIaUBJl93RjW" />
      <listitem open="0" type="815" id="hQEsVkjEGtlH" />
     </listitem>
     <listitem open="1" type="813" id="GTY2bUKGgWwu" >
      <listitem open="0" type="815" id="aDYhfvWFvn5K" />
      <listitem open="0" type="815" id="NqYgic3A9TNq" />
      <listitem open="0" type="815" id="7y4MmjDzKu4P" />
      <listitem open="0" type="815" id="VDAJOT41Fqgr" />
     </listitem>
     <listitem open="1" type="813" id="VkjQZjEAAHUW" >
      <listitem open="0" type="815" id="6kF4G9XnEuLh" />
      <listitem open="0" type="815" id="RnvRbBKOyXuT" />
      <listitem open="0" type="815" id="Gkf1vsNq2pIv" />
      <listitem open="0" type="815" id="IPdKDeevkBDM" />
     </listitem>
     <listitem open="1" type="813" id="F8RpwvdXZ76m" >
      <listitem open="0" type="815" id="7aJdFTrIn7wK" />
      <listitem open="0" type="815" id="kJd6lRmoWhAG" />
      <listitem open="0" type="815" id="1GzLwgGHLSoi" />
      <listitem open="0" type="815" id="FWHBXitpMgjv" />
      <listitem open="0" type="815" id="nJznoUSTv3Tk" />
      <listitem open="0" type="815" id="vKTs62wWzWVf" />
     </listitem>
     <listitem open="1" type="813" id="ituhg8YQclNc" >
      <listitem open="0" type="815" id="sPZp34aLCpAr" />
      <listitem open="0" type="815" id="havlsVOdweXl" />
     </listitem>
     <listitem open="1" type="813" id="X9Ojmm59Lg5g" >
      <listitem open="0" type="815" id="6cSkfPX80nGt" />
      <listitem open="0" type="815" id="ErskgKnje3xo" />
      <listitem open="0" type="815" id="DaUG7IeoVpS5" />
      <listitem open="0" type="815" id="cS9eK8Oo1P7E" />
     </listitem>
     <listitem open="1" type="813" id="GtorfuxmzfBz" >
      <listitem open="0" type="815" id="IwGv6s1XllRn" />
      <listitem open="0" type="815" id="Q3TczQledCc8" />
      <listitem open="0" type="815" id="xOTubnDfEwx8" />
      <listitem open="0" type="815" id="mJzvhd3DzEMK" />
      <listitem open="0" type="815" id="Lnx62MqNBOg9" />
      <listitem open="0" type="815" id="HGzltnz0nFRj" />
      <listitem open="0" type="815" id="ARrwVps1WdoG" />
     </listitem>
     <listitem open="1" type="813" id="AV91axOWRf5j" >
      <listitem open="0" type="815" id="grKt7DAQdo86" />
     </listitem>
     <listitem open="1" type="813" id="WzZxPHo959mG" >
      <listitem open="0" type="815" id="8uvXtEM1t6qP" />
      <listitem open="0" type="815" id="FOTQt58dR1Lp" />
      <listitem open="0" type="815" id="tXgALFsBDUck" />
      <listitem open="0" type="815" id="F4ytrFHHJpZk" />
      <listitem open="0" type="815" id="6JNBme5VfnGO" />
      <listitem open="0" type="815" id="RQ71e0DG4TGu" />
      <listitem open="0" type="815" id="m90y4NRqcEuC" />
     </listitem>
     <listitem open="1" type="813" id="83lL9zku7unX" >
      <listitem open="0" type="815" id="YETwmBwpEfOM" />
      <listitem open="0" type="815" id="g5PqQHanQZiz" />
     </listitem>
     <listitem open="1" type="813" id="JOOoBmKUMpS5" >
      <listitem open="0" type="815" id="PyI6LYYWanTp" />
      <listitem open="0" type="815" id="IGwN0VCFhNGT" />
      <listitem open="0" type="815" id="Im0io5PL5kbr" />
      <listitem open="0" type="815" id="nTCUQX9uS27h" />
      <listitem open="0" type="815" id="cKxF1QePjxLe" />
      <listitem open="0" type="815" id="1pdrYusmdjTR" />
      <listitem open="0" type="815" id="ItrndarzqjJ1" />
      <listitem open="0" type="815" id="tNiUAaOeXmj4" />
     </listitem>
     <listitem open="1" type="813" id="2bHk1xi9GKwu" >
      <listitem open="0" type="815" id="4OTJuANRTSit" />
     </listitem>
     <listitem open="1" type="813" id="zwyuzvehIKxj" >
      <listitem open="0" type="815" id="34JHI8932wJO" />
      <listitem open="0" type="815" id="SzjEE2KF4ADo" />
      <listitem open="0" type="815" id="cSvVy44woHJ5" />
      <listitem open="0" type="815" id="Dv2iQfFotVAZ" />
     </listitem>
     <listitem open="1" type="813" id="88fCHqyjQETp" >
      <listitem open="0" type="815" id="eItVQADJ5pSC" />
      <listitem open="0" type="815" id="zZlnI3pVr7Jk" />
      <listitem open="0" type="815" id="6m71Pl6GqlJ1" />
     </listitem>
     <listitem open="1" type="813" id="JzZzay6FNT3X" >
      <listitem open="0" type="815" id="Nry7ttHjXEBR" />
      <listitem open="0" type="815" id="aNI1QpinaJd0" />
     </listitem>
     <listitem open="1" type="813" id="OcD9AZuEqjXZ" >
      <listitem open="0" type="815" id="Ttq3GtkVIS2R" />
      <listitem open="0" type="815" id="lKlEGELIhR3K" />
      <listitem open="0" type="815" id="wOSjT1c1TyU6" />
     </listitem>
     <listitem open="1" type="813" id="YfW5h5t0zDS2" >
      <listitem open="0" type="815" id="PWXFZIcHIMNH" />
      <listitem open="0" type="815" id="0DxT7G3ls3nM" />
      <listitem open="0" type="815" id="RZdeDnLGTvIc" />
      <listitem open="0" type="815" id="4ODM8U5uDgCi" />
      <listitem open="0" type="815" id="Pf3KFhTN9CNe" />
      <listitem open="0" type="815" id="RWIwefutvce9" />
      <listitem open="0" type="815" id="Mtae3cGyVAP0" />
      <listitem open="0" type="815" id="sBr5IIMvIC2e" />
      <listitem open="0" type="815" id="WZktsdBzD9SJ" />
      <listitem open="0" type="815" id="jF9naIBIPJvI" />
      <listitem open="0" type="815" id="mTIo8aRz4NBQ" />
      <listitem open="0" type="815" id="v1xBWRdr4fIc" />
      <listitem open="0" type="815" id="cHQTIipXFXUU" />
      <listitem open="0" type="815" id="lEIvB7Dar2IN" />
      <listitem open="0" type="815" id="OMGmzWU7AypH" />
      <listitem open="0" type="815" id="h2y8Q5kgWF0e" />
      <listitem open="0" type="815" id="5CWNDvHv4l71" />
      <listitem open="0" type="815" id="7VWKbilaVqQc" />
      <listitem open="0" type="815" id="CArNEqbgwKma" />
      <listitem open="0" type="815" id="OT9C7O6Tha6q" />
      <listitem open="0" type="815" id="ADCb6o9todHv" />
      <listitem open="0" type="815" id="hyEi28IOTvea" />
      <listitem open="0" type="815" id="ognN8LG8HUEW" />
      <listitem open="0" type="815" id="wumuGZFysJag" />
      <listitem open="0" type="815" id="vdZtNtzvTjVT" />
      <listitem open="0" type="815" id="VknAQ5gSd2V1" />
      <listitem open="0" type="815" id="dc2OIXD2dYY4" />
      <listitem open="0" type="815" id="iVFmmwlJ1GtK" />
      <listitem open="0" type="815" id="zRP0J0hbG849" />
      <listitem open="0" type="815" id="hJ93Cm5YCGyi" />
      <listitem open="0" type="815" id="cgkrZTJ3VWnF" />
      <listitem open="0" type="815" id="zoFOqjBTjRwB" />
      <listitem open="0" type="815" id="gcD7oBX2RVCs" />
      <listitem open="0" type="815" id="7E3JKDr6RByS" />
      <listitem open="0" type="815" id="QJzf7t6CC8AZ" />
      <listitem open="0" type="815" id="LJIloHr0HquR" />
      <listitem open="0" type="815" id="JFMQOpMvSVz5" />
      <listitem open="0" type="815" id="R2rSqbC56BTw" />
     </listitem>
     <listitem open="1" type="813" id="lz1ozNDiH96U" />
     <listitem open="1" type="813" id="Zt8X7W72Ef2y" />
     <listitem open="1" type="813" id="EvadIOuAYGvD" >
      <listitem open="0" type="815" id="xgR38zU2ur2q" />
      <listitem open="0" type="815" id="b4dUn3H56UaS" />
      <listitem open="0" type="815" id="difTJJZAb7D8" />
      <listitem open="0" type="815" id="beekdMXpscf6" />
     </listitem>
     <listitem open="1" type="813" id="W7ivRzY2lPnM" >
      <listitem open="0" type="815" id="4hiX0SYVHeHr" />
      <listitem open="0" type="815" id="moiPqZE3VKk3" />
     </listitem>
     <listitem open="1" type="813" id="69V0kjFBAgbi" >
      <listitem open="1" type="813" id="DFtSoUfA2F9F" />
      <listitem open="1" type="813" id="J9z9qn1nf6UP" />
      <listitem open="1" type="813" id="TuPyQVHFxxMO" />
     </listitem>
     <listitem open="1" type="813" id="wLniJG3yEAdh" >
      <listitem open="0" type="815" id="l6oRGbmjv2xl" />
      <listitem open="0" type="815" id="FHHsCdwQLMtY" />
      <listitem open="0" type="815" id="xxjdR4GKewM4" />
      <listitem open="0" type="815" id="xu7johDwo22A" />
      <listitem open="0" type="815" id="RPLGaOmZh8Eg" />
     </listitem>
     <listitem open="1" type="813" id="nb66uhNeRTIL" >
      <listitem open="0" type="815" id="pqdSeyl3gEeD" />
      <listitem open="0" type="815" id="OGdvidOCCqPF" />
      <listitem open="0" type="815" id="IYTUv5b1jSRW" />
      <listitem open="0" type="815" id="eZZsJ5VhBMe7" />
     </listitem>
     <listitem open="1" type="813" id="ZrptqabHyYPL" >
      <listitem open="0" type="815" id="ze3RxgynzbGA" />
     </listitem>
     <listitem open="1" type="813" id="0AvPAyRT3dqj" >
      <listitem open="0" type="815" id="vw3itKGZQZ5C" />
      <listitem open="0" type="815" id="sBlu8OwyozHY" />
     </listitem>
     <listitem open="1" type="813" id="sUztqsD80yRC" >
      <listitem open="0" type="815" id="ks0QYt5S5C6u" />
      <listitem open="0" type="815" id="ZwcaSCbFSTlH" />
      <listitem open="0" type="815" id="TWKZ6yzq1Wc2" />
     </listitem>
     <listitem open="1" type="813" id="q7PGeR0azz1f" />
     <listitem open="1" type="813" id="3CgRjcLcHLQc" >
      <listitem open="0" type="815" id="bqHv4dD0Ezbq" />
      <listitem open="0" type="815" id="oNk5YgLiKGOI" />
      <listitem open="0" type="815" id="XzsV0QfER2wf" />
      <listitem open="0" type="815" id="cbgDxCBMy1ZA" />
     </listitem>
     <listitem open="1" type="813" id="IAcpHyFV16R8" />
     <listitem open="1" type="813" id="aBW4uwTVB4NP" />
     <listitem open="1" type="813" id="CHbUUe3dronq" />
     <listitem open="1" type="813" id="E5ShlBtTsD2D" >
      <listitem open="0" type="815" id="hyOWw0hfZhAd" />
      <listitem open="0" type="815" id="6YVMNovolXQ0" />
     </listitem>
     <listitem open="1" type="813" id="9XdbDVxpc0uy" >
      <listitem open="0" type="815" id="u337yrK4ifyk" />
      <listitem open="0" type="815" id="YSfk2ZTI42JW" />
      <listitem open="0" type="815" id="OEpYIylKCcwk" />
      <listitem open="0" type="815" id="Pi1yRCUkC39D" />
      <listitem open="0" type="815" id="Qlj1Q0V9bjBW" />
      <listitem open="0" type="815" id="UyCpv4KkNLNm" />
      <listitem open="0" type="815" id="1PxvXuiwFHmG" />
      <listitem open="0" type="815" id="q3YVtLPoPiTY" />
      <listitem open="0" type="815" id="3kpI6fatEnm0" />
      <listitem open="0" type="815" id="aLWY5FaMFoEu" />
      <listitem open="0" type="815" id="C7Z2YHvj0urW" />
      <listitem open="0" type="815" id="bZYTjj7msTit" />
      <listitem open="0" type="815" id="F15zGhUZs9Bg" />
      <listitem open="0" type="815" id="DRXFXJqXmHeX" />
      <listitem open="0" type="815" id="OH4B6FfXoGHG" />
      <listitem open="0" type="815" id="KAbkP5happBU" />
      <listitem open="0" type="815" id="XdFGJ3o5PEWx" />
      <listitem open="0" type="815" id="845B1TNAlhqX" />
     </listitem>
     <listitem open="1" type="813" id="pHyD67b3VNgw" />
     <listitem open="1" type="813" id="Puipb6hspr7W" >
      <listitem open="0" type="815" id="XPr4xTUZKCFx" />
      <listitem open="0" type="815" id="znoVwENqnWvy" />
      <listitem open="0" type="815" id="uxBWtcK1w1wF" />
      <listitem open="0" type="815" id="3NJSFAwspxj9" />
      <listitem open="0" type="815" id="xkQwquOMVVn4" />
      <listitem open="0" type="815" id="UvrQXpMt6LZd" />
      <listitem open="0" type="815" id="jD7CdJJgTlsN" />
      <listitem open="0" type="815" id="dRp48FuTQVK8" />
      <listitem open="0" type="815" id="OppEydIcSwdv" />
      <listitem open="0" type="815" id="YEM2JYNJsBo3" />
     </listitem>
     <listitem open="1" type="813" id="c1QJJGQSba9V" >
      <listitem open="0" type="815" id="aanLyWAGRjQu" />
      <listitem open="0" type="815" id="m4pIxcv4lPlr" />
     </listitem>
     <listitem open="1" type="813" id="RjocHeYU9Mei" >
      <listitem open="0" type="815" id="Y0mxkX67nUz5" />
      <listitem open="0" type="815" id="eUUN4QTwRmn9" />
      <listitem open="0" type="815" id="aGBwNr9ikcy6" />
      <listitem open="0" type="815" id="c0eZszU6N7gF" />
     </listitem>
     <listitem open="1" type="813" id="4SpfOGQUGu4m" >
      <listitem open="0" type="815" id="IsKk1ZLdMukM" />
      <listitem open="0" type="815" id="SgqghKqdFuGq" />
      <listitem open="0" type="815" id="KzNhyvRrkhei" />
     </listitem>
     <listitem open="1" type="813" id="up6NtSjYjyML" />
     <listitem open="1" type="813" id="FFUAt59qDtIX" />
     <listitem open="1" type="813" id="6Ppf4zGBcDcD" >
      <listitem open="0" type="815" id="hBPUGebpgdR9" />
      <listitem open="0" type="815" id="rdAIL2oUp4H9" />
      <listitem open="0" type="815" id="GMM0x0bWTiuX" />
      <listitem open="0" type="815" id="yVdI7bjPmbgb" />
      <listitem open="0" type="815" id="Ggp2F0okMe0T" />
      <listitem open="0" type="815" id="XqU7gxOGoZBo" />
      <listitem open="0" type="815" id="hyC34eYRcsTI" />
      <listitem open="0" type="815" id="Fjotsu1JkP0i" />
     </listitem>
     <listitem open="1" type="813" id="YI0f1Hl6NffL" >
      <listitem open="0" type="815" id="DujU8fpUuvEg" />
      <listitem open="0" type="815" id="JqRHi9xnpDbZ" />
      <listitem open="0" type="815" id="PoMLVpf26veA" />
      <listitem open="0" type="815" id="tX5IOMuGvjTK" />
     </listitem>
     <listitem open="1" type="813" id="zJkmnsJK28sO" >
      <listitem open="0" type="815" id="imNUV71E27ud" />
      <listitem open="0" type="815" id="sXM0Iiaydt5E" />
     </listitem>
     <listitem open="1" type="813" id="7zaobMCgH1tv" >
      <listitem open="0" type="815" id="QNfd0SBrvCwe" />
      <listitem open="0" type="815" id="7SfUEplcDepZ" />
     </listitem>
     <listitem open="1" type="813" id="EBtoV7z35ZgX" >
      <listitem open="0" type="815" id="jJlnaiAA4y64" />
      <listitem open="0" type="815" id="wMQXBOe46JxN" />
      <listitem open="0" type="815" id="n0z6Mymodpy9" />
      <listitem open="0" type="815" id="hIOHN8gRht2e" />
     </listitem>
     <listitem open="1" type="813" id="OmK4koGBilVM" >
      <listitem open="1" type="813" id="e9mMcTJ28t6c" >
       <listitem open="1" type="813" id="OfEZvTuuA25b" />
       <listitem open="1" type="813" id="RuxE69JTtbXe" />
      </listitem>
     </listitem>
     <listitem open="1" type="813" id="BROwCni0CqeA" >
      <listitem open="0" type="815" id="gOxtDTmoPNoJ" />
      <listitem open="0" type="815" id="BNA6LfhK5epa" />
      <listitem open="0" type="815" id="lxowW00YCZMg" />
      <listitem open="0" type="815" id="gRABpfQVDaE3" />
      <listitem open="0" type="815" id="9I4MQdsxXOVH" />
      <listitem open="0" type="815" id="cRhDfjguD8bY" />
      <listitem open="0" type="815" id="sSagX5iQcG1T" />
     </listitem>
     <listitem open="1" type="813" id="vh3ov5RkjlYB" />
     <listitem open="1" type="813" id="9zLNiNvHqhKd" />
     <listitem open="1" type="813" id="TFeNHyAE1ovi" />
     <listitem open="1" type="813" id="ayckdoJXNrFo" />
     <listitem open="1" type="813" id="WQXNrxiYQ5N6" >
      <listitem open="0" type="815" id="hZ44MuVsCXWV" />
      <listitem open="0" type="815" id="ceUHUqHmPppR" />
     </listitem>
     <listitem open="1" type="813" id="KbkITbFXkl06" >
      <listitem open="0" type="815" id="mz9xpoYGEgCk" />
      <listitem open="0" type="815" id="BD7nPblYV7Io" />
      <listitem open="0" type="815" id="l4ejhaBvk8se" />
      <listitem open="0" type="815" id="aIWFGmBxPYVm" />
     </listitem>
     <listitem open="1" type="813" id="R8YipPtkvrRf" />
     <listitem open="1" type="813" id="0oW5P8tQPrLK" >
      <listitem open="0" type="815" id="B5QiUQfkqeFN" />
      <listitem open="0" type="815" id="zCU9A1VTZQzz" />
      <listitem open="0" type="815" id="MuNQ7rZWAzZO" />
      <listitem open="0" type="815" id="dCtLZAYO6DW8" />
      <listitem open="0" type="815" id="v4d2NcXojMJD" />
     </listitem>
     <listitem open="1" type="813" id="865ZJg29kaYN" >
      <listitem open="0" type="815" id="m3QcDLERXZaI" />
      <listitem open="0" type="815" id="AsCGUxOhOJOZ" />
      <listitem open="0" type="815" id="Wt0dWv4QZR4K" />
     </listitem>
     <listitem open="1" type="813" id="HLF7isBcHvov" />
     <listitem open="1" type="813" id="GCj9y4wLkcmz" >
      <listitem open="0" type="815" id="c2ML3WptEKwU" />
      <listitem open="0" type="815" id="sFOnDG3qgAqy" />
      <listitem open="0" type="815" id="XJYTYNdMLEKv" />
      <listitem open="0" type="815" id="vbaABhHDD1IR" />
      <listitem open="0" type="815" id="Noz7kWSpGb77" />
      <listitem open="0" type="815" id="YIwLTWXcmyXL" />
      <listitem open="0" type="815" id="E6tUtiLEfSpD" />
     </listitem>
     <listitem open="1" type="813" id="fBwlyopaABcs" >
      <listitem open="0" type="815" id="R49MsbwvBNur" />
      <listitem open="0" type="815" id="TTaxXD9phuoo" />
      <listitem open="0" type="815" id="tTlTajMrMuzw" />
      <listitem open="0" type="815" id="Vr1GfBm3TdNY" />
      <listitem open="0" type="815" id="MjKChX2SnqAW" />
      <listitem open="0" type="815" id="bQf5pJZOQc5E" />
      <listitem open="0" type="815" id="4AVnW6fEVRfU" />
      <listitem open="0" type="815" id="iWxzueVJjMau" />
      <listitem open="0" type="815" id="pTmDI0RKt5WZ" />
      <listitem open="0" type="815" id="SB6AI0yW9Xly" />
      <listitem open="0" type="815" id="cHoc9IwkFsEn" />
      <listitem open="0" type="815" id="tBu4lJcGa2Gp" />
      <listitem open="0" type="815" id="L7ADLGLhDaQZ" />
      <listitem open="0" type="815" id="3KfNU8FkuE88" />
      <listitem open="0" type="815" id="DDDV1pY3LCVu" />
      <listitem open="0" type="815" id="EgYLtlvWHqe5" />
      <listitem open="0" type="815" id="nLQVfh5D7ECb" />
     </listitem>
     <listitem open="1" type="813" id="PEXJhnDSI4Bx" />
     <listitem open="1" type="813" id="lia9Cq6p0bka" />
     <listitem open="1" type="813" id="48FzRZU4220A" >
      <listitem open="0" type="815" id="p1RGV2iTPZ6z" />
      <listitem open="0" type="815" id="CMFO3WlPhEJU" />
      <listitem open="0" type="815" id="yQwvCgw6XeZd" />
      <listitem open="0" type="815" id="qFfVJC3HHipK" />
      <listitem open="0" type="815" id="q5c6vuY7cxEG" />
      <listitem open="0" type="815" id="paUg4dSXgvi6" />
      <listitem open="0" type="815" id="N1ygWAO7tUAo" />
      <listitem open="0" type="815" id="MGu4S7YORFuu" />
     </listitem>
     <listitem open="1" type="813" id="YzODqW7SXkHg" />
     <listitem open="1" type="813" id="u8yJf1Vea6Y6" >
      <listitem open="0" type="815" id="5BLYWgRFLbIf" />
      <listitem open="0" type="815" id="sr1HR8D3UMLt" />
      <listitem open="0" type="815" id="kIwFXvr3Rc7y" />
      <listitem open="0" type="815" id="hzhWJskxVH0e" />
      <listitem open="0" type="815" id="y0j6mJb8qMDE" />
      <listitem open="0" type="815" id="2q8PBN088mcU" />
     </listitem>
     <listitem open="1" type="813" id="qOi25XCquAsd" />
     <listitem open="1" type="813" id="jqXaCb7r3s4y" />
     <listitem open="1" type="813" id="KFhuyMjMOvzB" >
      <listitem open="0" type="815" id="b2HV6efTgF03" />
      <listitem open="0" type="815" id="F3uAsTxpUPSn" />
      <listitem open="0" type="815" id="8sdxRwkKwrbp" />
     </listitem>
     <listitem open="1" type="813" id="yzmH0wBhGWQU" >
      <listitem open="0" type="815" id="hYegVBX0kUul" />
      <listitem open="0" type="815" id="hSujSQhb1zZt" />
      <listitem open="0" type="815" id="8EFDdZGx20Yz" />
     </listitem>
     <listitem open="1" type="813" id="ihHp16n2jvF8" >
      <listitem open="0" type="815" id="l9tOEyDteTlE" />
     </listitem>
     <listitem open="1" type="813" id="ZLZYk26Sfkjo" />
     <listitem open="1" type="813" id="Ngjo71dC1kqm" >
      <listitem open="0" type="815" id="A0wiIuqISQ7f" />
      <listitem open="0" type="815" id="2YZoCpS4z6hH" />
      <listitem open="0" type="815" id="Epn4ajaRogGe" />
      <listitem open="0" type="815" id="yCSFKhHwqlwW" />
      <listitem open="0" type="815" id="uraXCVU7rIzW" />
      <listitem open="0" type="815" id="bvfFlNFRdLvy" />
      <listitem open="0" type="815" id="AW4FFlFFesi0" />
      <listitem open="0" type="815" id="Jsebh6Qp5lh2" />
      <listitem open="0" type="815" id="sv4w0Q0GIpSr" />
     </listitem>
     <listitem open="1" type="813" id="X4jTfPB2HmWY" >
      <listitem open="0" type="815" id="Ij0FRU0q9GHo" />
      <listitem open="0" type="815" id="sTnuA5wHOTqA" />
      <listitem open="0" type="815" id="dNpLwtfn2iK4" />
      <listitem open="0" type="815" id="2FeMD0kfjUZ9" />
     </listitem>
     <listitem open="1" type="813" id="VRn79c0UOZl3" >
      <listitem open="0" type="815" id="XKVv90OaSMLW" />
     </listitem>
     <listitem open="1" type="813" id="HRXtpSR86cSI" >
      <listitem open="0" type="815" id="onUgZC4QgZrN" />
      <listitem open="0" type="815" id="9RdKQKUbSbUp" />
     </listitem>
     <listitem open="1" type="813" id="hwacP8fEG7YL" >
      <listitem open="0" type="815" id="fXNgQQLuiuxP" />
      <listitem open="0" type="815" id="PUQjNhVDa7TC" />
      <listitem open="0" type="815" id="fnP62mqleQb7" />
     </listitem>
     <listitem open="1" type="813" id="4kJkeE8Becqu" >
      <listitem open="0" type="815" id="9gPwnQ61hQbw" />
      <listitem open="0" type="815" id="tUyGl8fiMyDN" />
      <listitem open="0" type="815" id="Yi6axiicaaE5" />
     </listitem>
     <listitem open="1" type="813" id="Qz7LpityIWdu" />
     <listitem open="1" type="813" id="EqoXrnxjKzmO" >
      <listitem open="0" type="815" id="Td1ZR8a1vVa4" />
      <listitem open="0" type="815" id="JFTO3mchH1Oj" />
      <listitem open="0" type="815" id="zPY48N5AYNI2" />
     </listitem>
     <listitem open="1" type="813" id="rvKqJnUTI8YY" >
      <listitem open="0" type="815" id="aBhBwrWMSKfu" />
      <listitem open="0" type="815" id="Ruj7MMSlbnCM" />
      <listitem open="0" type="815" id="kLVJnsHX13dU" />
      <listitem open="0" type="815" id="hXcjOyFwAaMR" />
      <listitem open="0" type="815" id="Z4b74MZE2tLX" />
      <listitem open="0" type="815" id="r74LPX8ja2nU" />
      <listitem open="0" type="815" id="mbenMNCyWIVn" />
      <listitem open="0" type="815" id="qhM897d4XubM" />
      <listitem open="0" type="815" id="L1kG9jjKIUkV" />
      <listitem open="0" type="815" id="hZaoCSFfv81U" />
      <listitem open="0" type="815" id="jA2R21SW3x3v" />
      <listitem open="0" type="815" id="vIG3KdtyhkEy" />
      <listitem open="0" type="815" id="DSj9V7hj82Ms" />
      <listitem open="0" type="815" id="Kdwt57nsy5OX" />
      <listitem open="0" type="815" id="cnAGqFk7bSCu" />
      <listitem open="0" type="815" id="jVPRMY2fd37W" />
      <listitem open="0" type="815" id="ManQl5jXP8Q1" />
      <listitem open="0" type="815" id="VksqbYL24CJI" />
      <listitem open="0" type="815" id="uaJiQ1L9KWfC" />
      <listitem open="0" type="815" id="DHuLsBuanqid" />
      <listitem open="0" type="815" id="juu9IHZacaT3" />
      <listitem open="0" type="815" id="uLtc4VwQQONQ" />
      <listitem open="0" type="815" id="df8dWk1EC9tQ" />
      <listitem open="0" type="815" id="TypORXC8zscQ" />
      <listitem open="0" type="815" id="GAy9O5XTdZSh" />
      <listitem open="0" type="815" id="xZDKXK1dtE7P" />
      <listitem open="0" type="815" id="864uuXLFZqH8" />
      <listitem open="0" type="815" id="DGR6hFT2moVS" />
      <listitem open="0" type="815" id="Q90p8d18lcSR" />
      <listitem open="0" type="815" id="YCQC0HyvRzdB" />
      <listitem open="0" type="815" id="fJyxYXOeuEPZ" />
      <listitem open="0" type="815" id="BgLl63K8HGZR" />
      <listitem open="0" type="815" id="GsWRPHAYeUbn" />
      <listitem open="0" type="815" id="OtPZsKyCDYlj" />
      <listitem open="0" type="815" id="4eKoCby8A1xR" />
      <listitem open="0" type="815" id="5nTa0e3XlaGC" />
      <listitem open="0" type="815" id="HUOp3PsUXFDS" />
      <listitem open="0" type="815" id="CuLhPBnn0gpF" />
      <listitem open="0" type="815" id="pBn5ek3PgP3y" />
      <listitem open="0" type="815" id="EjW2IONsGVx0" />
      <listitem open="0" type="815" id="z3CYY40nVrBw" />
      <listitem open="0" type="815" id="hYN1vlaPB3x4" />
      <listitem open="0" type="815" id="g0yAFV3yLMOZ" />
      <listitem open="0" type="815" id="mx55lkBtVFZv" />
      <listitem open="0" type="815" id="WEtv9ajSLqh6" />
      <listitem open="0" type="815" id="yT5w7WS0Rxho" />
      <listitem open="0" type="815" id="a60e1FHdygQW" />
      <listitem open="0" type="815" id="jCeBvtGn4vGe" />
      <listitem open="0" type="815" id="2QebHN1RSjE7" />
      <listitem open="0" type="815" id="bxAUN6npZtjS" />
      <listitem open="0" type="815" id="y2elwWqOsQwJ" />
      <listitem open="0" type="815" id="e5AGUvbemuu5" />
      <listitem open="0" type="815" id="ap9ivQlRbRnN" />
      <listitem open="0" type="815" id="wBVnxRvdpc5l" />
      <listitem open="0" type="815" id="EguoIuSbnYtt" />
      <listitem open="0" type="815" id="hJSM3iuSzD5N" />
      <listitem open="0" type="815" id="etfMue2iE7yD" />
      <listitem open="0" type="815" id="RRMcTbcrRj49" />
      <listitem open="0" type="815" id="7LJBe3vyD2Hz" />
      <listitem open="0" type="815" id="073vrYlX4Ljm" />
      <listitem open="0" type="815" id="f1CtKiGulrou" />
      <listitem open="0" type="815" id="EpiZ8IYGL9Q4" />
      <listitem open="0" type="815" id="ihIYy8doLLby" />
      <listitem open="0" type="815" id="KcAIJjgWklUD" />
      <listitem open="0" type="815" id="rZfDRbpcyjYQ" />
      <listitem open="0" type="815" id="FGu0ijTT8q7J" />
      <listitem open="0" type="815" id="6OkHt9hJnSrT" />
      <listitem open="0" type="815" id="DbE5SduzehxL" />
      <listitem open="0" type="815" id="BHtEu92BstQr" />
      <listitem open="0" type="815" id="1k81hHDr956b" />
      <listitem open="0" type="815" id="HImnSmwk2x9C" />
      <listitem open="0" type="815" id="Sdzua5EfY908" />
      <listitem open="0" type="815" id="oXzOODshTy6K" />
      <listitem open="0" type="815" id="KS51i2yEatET" />
      <listitem open="0" type="815" id="vpaLU3SejIzx" />
      <listitem open="0" type="815" id="AZbPJJXVShU7" />
      <listitem open="0" type="815" id="xIsLw5ozFkiA" />
      <listitem open="0" type="815" id="PWH73kh9OgDU" />
      <listitem open="0" type="815" id="m7Bhhvh1kWVa" />
      <listitem open="0" type="815" id="TnAxrjiBuak2" />
     </listitem>
     <listitem open="1" type="813" id="QTiZSboZ3bt7" >
      <listitem open="0" type="815" id="NmbJh4L4mWqH" />
     </listitem>
     <listitem open="1" type="813" id="RzIv0FGa5BK7" >
      <listitem open="0" type="815" id="EhaC8tNRkSg0" />
      <listitem open="0" type="815" id="fyioJPKyzRID" />
      <listitem open="0" type="815" id="CrmIJfCw9NhY" />
      <listitem open="0" type="815" id="ifzreoqX6Utw" />
     </listitem>
     <listitem open="1" type="813" id="QH5Szg37t7AM" >
      <listitem open="0" type="815" id="sa8srsUzW0zK" />
      <listitem open="0" type="815" id="GsNjzuHEzHme" />
      <listitem open="0" type="815" id="Ab392Yk3T9ZX" />
     </listitem>
     <listitem open="1" type="813" id="3cCIYJINXmIM" >
      <listitem open="0" type="815" id="EwfrYIb32kdd" />
      <listitem open="0" type="815" id="RNYE2fcufefk" />
      <listitem open="0" type="815" id="1ASkZ2iFpf8O" />
     </listitem>
     <listitem open="1" type="813" id="wH8qRSPDixJ3" >
      <listitem open="0" type="815" id="mubIrHK9Fw92" />
      <listitem open="0" type="815" id="eJLWghfiYzg4" />
      <listitem open="0" type="815" id="q6dulbn6uPN9" />
     </listitem>
     <listitem open="1" type="813" id="Snf3x4n5gNTg" >
      <listitem open="0" type="815" id="sGdNJ0DtwBKa" />
      <listitem open="0" type="815" id="7eOYbu4vV3Nr" />
      <listitem open="0" type="815" id="Ki1V2fpKRyYV" />
     </listitem>
     <listitem open="1" type="813" id="r5Gvh2xfVCyn" >
      <listitem open="0" type="815" id="mw8OzAZndCRm" />
      <listitem open="0" type="815" id="ZcUIZvmWc22D" />
     </listitem>
     <listitem open="1" type="813" id="bHJqJbVJfzBw" >
      <listitem open="0" type="815" id="5xZ1DcI5B1vF" />
      <listitem open="0" type="815" id="6htwLbVTyXNj" />
      <listitem open="0" type="815" id="RH4LZOgKsgkZ" />
      <listitem open="0" type="815" id="8swkoKmTvJKN" />
      <listitem open="0" type="815" id="D82pcckddzLb" />
     </listitem>
     <listitem open="1" type="813" id="Phc6UYnNpEE4" >
      <listitem open="0" type="815" id="7nxVm28ZSxsG" />
      <listitem open="0" type="815" id="kqQgiHi92SGC" />
      <listitem open="0" type="815" id="zk8nYJtLwrr4" />
      <listitem open="0" type="815" id="35URHzTvlUgO" />
     </listitem>
     <listitem open="1" type="813" id="WIkawHPaxmgb" >
      <listitem open="0" type="815" id="ZwcT9s21vb7j" />
      <listitem open="0" type="815" id="dBW5ego2HkXJ" />
      <listitem open="0" type="815" id="vVAQRCYKUVAj" />
      <listitem open="0" type="815" id="WkkU9ok2Vy49" />
      <listitem open="0" type="815" id="E4h9d6JQs5eZ" />
      <listitem open="0" type="815" id="TfCuFHPdQuFB" />
      <listitem open="0" type="815" id="jyCRf6eWQc5X" />
      <listitem open="0" type="815" id="uTY9f01bbuFt" />
      <listitem open="0" type="815" id="EXJ8p9d3HDSs" />
      <listitem open="0" type="815" id="YiY4xsghwHqU" />
      <listitem open="0" type="815" id="2rU3bcbpVEMe" />
      <listitem open="0" type="815" id="rqqSo0n2bRmd" />
      <listitem open="0" type="815" id="XpVotdxgbxCN" />
      <listitem open="0" type="815" id="YE7obKrVia8N" />
     </listitem>
     <listitem open="1" type="813" id="C4r2gxjx4puC" >
      <listitem open="0" type="815" id="KUEjEPaRY8eJ" />
      <listitem open="0" type="815" id="wJnAhedzRlDr" />
      <listitem open="0" type="815" id="VhuryW89GNrS" />
      <listitem open="0" type="815" id="37yi4RaYOHcH" />
      <listitem open="0" type="815" id="9ZPgmwKTDnuf" />
      <listitem open="0" type="815" id="wMvD8TkonA0n" />
     </listitem>
     <listitem open="1" type="813" id="obYjyg9TwQzX" />
     <listitem open="1" type="813" id="9mLrhx3cybr8" />
     <listitem open="1" type="813" id="SlCTkaYJVvha" >
      <listitem open="0" type="815" id="j81UeK0PlF9k" />
      <listitem open="0" type="815" id="RR0lY4DbnWLV" />
      <listitem open="0" type="815" id="uu4VQERaJ76U" />
     </listitem>
     <listitem open="1" type="813" id="HRu4fmUfCtom" />
     <listitem open="1" type="813" id="ZA7wTTbwbvRx" />
     <listitem open="1" type="813" id="ftXkF8yIkWNJ" />
     <listitem open="1" type="813" id="treNtFk8Vur1" >
      <listitem open="0" type="815" id="52Pl6pyD1f8f" />
      <listitem open="0" type="815" id="Wc3izup9f6QF" />
     </listitem>
     <listitem open="1" type="813" id="L3aPs8hWtnOI" />
     <listitem open="1" type="813" id="ldYqj5L8xDbw" >
      <listitem open="0" type="815" id="vIu68qWr6w09" />
      <listitem open="0" type="815" id="D9xbVMXYBswS" />
     </listitem>
     <listitem open="1" type="813" id="GS1J4jamA3HN" >
      <listitem open="0" type="815" id="W1LbG9mSZONJ" />
      <listitem open="0" type="815" id="QSWxjRwCDva6" />
      <listitem open="0" type="815" id="WJaKTG8TEJId" />
      <listitem open="0" type="815" id="ajKWdMo1n9gq" />
      <listitem open="0" type="815" id="AXxHhabVww4K" />
      <listitem open="0" type="815" id="fuFVJjUYDh1D" />
     </listitem>
     <listitem open="1" type="813" id="fvO5pTPWMyZS" />
     <listitem open="1" type="813" id="kUxQRZuyexBx" />
     <listitem open="1" type="813" id="kZtGstcotwlo" >
      <listitem open="0" type="815" id="0gq5obTbgE76" />
      <listitem open="0" type="815" id="ZFAsF1nFs0KQ" />
      <listitem open="0" type="815" id="OYlseYG1jHAT" />
      <listitem open="0" type="815" id="f3grihQzV8pO" />
      <listitem open="0" type="815" id="pTH7CEFpoCJK" />
     </listitem>
     <listitem open="1" type="813" id="wJV0DV9PqEys" >
      <listitem open="0" type="815" id="QaDQXBv98Nrk" />
      <listitem open="0" type="815" id="rwWEYhzy7gDH" />
      <listitem open="0" type="815" id="SwjTNYn1NdDn" />
      <listitem open="0" type="815" id="X3ZILnpC0xf4" />
      <listitem open="0" type="815" id="mXJLlisCWNtC" />
      <listitem open="0" type="815" id="kgWy64Rlc0KI" />
      <listitem open="0" type="815" id="33RJatPgGSaT" />
      <listitem open="0" type="815" id="Cuf7ckIzIZR6" />
      <listitem open="0" type="815" id="AGpDJAV6Aje8" />
      <listitem open="0" type="815" id="nC46Foexl0yT" />
      <listitem open="0" type="815" id="pA1FtINMSsC2" />
      <listitem open="0" type="815" id="OoUmCRqkjeml" />
     </listitem>
     <listitem open="1" type="813" id="DbZtMKsBYkKL" >
      <listitem open="0" type="815" id="hWpkmP6ISwiU" />
      <listitem open="0" type="815" id="zKcZZRBj3GbN" />
     </listitem>
     <listitem open="1" type="813" id="jaHciDnjc0IN" >
      <listitem open="0" type="815" id="G9HomkHr33TS" />
      <listitem open="0" type="815" id="wm2FqpZEafUU" />
      <listitem open="0" type="815" id="YJ8fv3bfJ4pM" />
     </listitem>
     <listitem open="1" type="813" id="6tpGQ6i1se5G" >
      <listitem open="0" type="815" id="skgVt9T0KJUy" />
      <listitem open="0" type="815" id="M2FazUUCbfHH" />
      <listitem open="0" type="815" id="J6ccdbDsZara" />
      <listitem open="0" type="815" id="CNKuHKI2YGh8" />
     </listitem>
     <listitem open="1" type="813" id="QXrJZcizmtdd" />
     <listitem open="1" type="813" id="u8bUa3mwEwyP" />
     <listitem open="1" type="813" id="QPDEdjZDa6lv" />
     <listitem open="1" type="813" id="oNUHH0ojBpkp" >
      <listitem open="0" type="815" id="2J602oTsegfE" />
      <listitem open="0" type="815" id="Z4zYP2L0yliV" />
      <listitem open="0" type="815" id="EwY19RpbjGTt" />
     </listitem>
     <listitem open="1" type="813" id="nW4FNdhKdnyM" />
     <listitem open="1" type="813" id="AAtv7cyvJUVY" >
      <listitem open="0" type="815" id="wEIJQVyjqmxh" />
      <listitem open="0" type="815" id="iY78nSvZNEFg" />
      <listitem open="0" type="815" id="Ru7gHFxqQFNp" />
      <listitem open="0" type="815" id="7JqJbT5zcQav" />
      <listitem open="0" type="815" id="1j8E6u5mEIfo" />
      <listitem open="0" type="815" id="0AkiMmZqTlgG" />
      <listitem open="0" type="815" id="lylUNiJAkC4s" />
      <listitem open="0" type="815" id="P771f2ZtlPzp" />
      <listitem open="0" type="815" id="YbHSh5kzeYvZ" />
      <listitem open="0" type="815" id="C4kaj9GTu6oK" />
      <listitem open="0" type="815" id="ycqn2I8QNhQg" />
     </listitem>
     <listitem open="1" type="813" id="3kxsrKLPSjcJ" />
     <listitem open="1" type="813" id="uyZDSDbi2WRv" />
     <listitem open="1" type="813" id="zrVuVv3i24lP" >
      <listitem open="0" type="815" id="GzS4KQl1k49o" />
      <listitem open="0" type="815" id="uwnXWt6UQVm3" />
      <listitem open="0" type="815" id="l7MV2DqMfa6b" />
     </listitem>
     <listitem open="1" type="813" id="PPXQSPWF6TMK" />
     <listitem open="1" type="813" id="n598Y4VBpcur" />
     <listitem open="1" type="813" id="b7srp2je51W2" />
     <listitem open="1" type="813" id="LhGyEwfNqLli" />
     <listitem open="1" type="813" id="dHstLw9Rhjuw" />
     <listitem open="1" type="813" id="5Eya4jM48PRx" />
     <listitem open="1" type="813" id="jaRqghFDM7yw" >
      <listitem open="0" type="815" id="ulzOErYfTYk4" />
      <listitem open="0" type="815" id="20UFXoMhOyK8" />
     </listitem>
     <listitem open="1" type="813" id="qHHVmJCFY8Uq" >
      <listitem open="0" type="815" id="Qxp8iTdx5Ldj" />
      <listitem open="0" type="815" id="Qv1k1GAtQqRu" />
      <listitem open="0" type="815" id="7s9ehGUvK8EQ" />
      <listitem open="0" type="815" id="0WW6hBXuZr8r" />
      <listitem open="0" type="815" id="6xfkO2is3x7h" />
     </listitem>
     <listitem open="1" type="813" id="tgvIkQ2F6TdC" >
      <listitem open="0" type="815" id="VQTHbSXoGcij" />
      <listitem open="0" type="815" id="KpkjvM8RmD1I" />
      <listitem open="0" type="815" id="oIPlCnpYP5cQ" />
      <listitem open="0" type="815" id="dcGMBIidQwfV" />
      <listitem open="0" type="815" id="qfWoAe9sQGL2" />
      <listitem open="0" type="815" id="ZykphsYcy5rb" />
      <listitem open="0" type="815" id="RZDxmkFEHi8j" />
      <listitem open="0" type="815" id="4zN2z5TqYCYH" />
      <listitem open="0" type="815" id="uC3kvu9F01iQ" />
     </listitem>
     <listitem open="1" type="813" id="tJlqtz0nuvrI" >
      <listitem open="0" type="815" id="0AnbU56nMN0Y" />
     </listitem>
     <listitem open="1" type="813" id="boNYxBWm7wwG" >
      <listitem open="0" type="815" id="iodGf2pBot5H" />
      <listitem open="0" type="815" id="3rNMSqE4arRY" />
     </listitem>
     <listitem open="1" type="813" id="tnUVox9nwhnN" >
      <listitem open="0" type="815" id="nHcifhAE4NEw" />
      <listitem open="0" type="815" id="5JJ3wZcVGohb" />
      <listitem open="0" type="815" id="GPae06MEgx1H" />
      <listitem open="0" type="815" id="OSSTVyzynCkz" />
      <listitem open="0" type="815" id="4oN8epSFTW7W" />
      <listitem open="0" type="815" id="Gq51sh7D4sUM" />
      <listitem open="0" type="815" id="BtSU4YmLl2e8" />
      <listitem open="0" type="815" id="UKoxx3B1475U" />
      <listitem open="0" type="815" id="Pk3T2RAUVcHE" />
      <listitem open="0" type="815" id="EyWZkCmP6IOh" />
      <listitem open="0" type="815" id="wmriKotcMmhF" />
     </listitem>
     <listitem open="1" type="813" id="3BOyhUTyfNfH" >
      <listitem open="0" type="815" id="3ikJXir6RjyM" />
      <listitem open="0" type="815" id="UpVjKkoKIAyX" />
     </listitem>
     <listitem open="1" type="813" id="uB60Du47gYtr" >
      <listitem open="0" type="815" id="K7gPPjdnvpbY" />
      <listitem open="0" type="815" id="940ptS985I3G" />
      <listitem open="0" type="815" id="T7D8S4UiioRM" />
      <listitem open="0" type="815" id="8CJBfKO1KQn3" />
      <listitem open="0" type="815" id="LYF9265q4T1D" />
      <listitem open="0" type="815" id="O9lhNfY2oVty" />
      <listitem open="0" type="815" id="0TdtoUlMJGut" />
      <listitem open="0" type="815" id="YpiJ0JjvqKSr" />
      <listitem open="0" type="815" id="cnjKlpwxnBdS" />
      <listitem open="0" type="815" id="nYGw2VtYkz6c" />
      <listitem open="0" type="815" id="WxfNSfo99WGx" />
      <listitem open="0" type="815" id="X4epCWpcsX0R" />
      <listitem open="0" type="815" id="B1cgQvz7I8s1" />
      <listitem open="0" type="815" id="DiUkMyXYXRLJ" />
      <listitem open="0" type="815" id="knbJQubnXgUp" />
      <listitem open="0" type="815" id="FAszCLudZfKJ" />
      <listitem open="0" type="815" id="IOQN2Onej4Tv" />
      <listitem open="0" type="815" id="YN63fcfI6fyQ" />
      <listitem open="0" type="815" id="NB3ADyXFXIWc" />
      <listitem open="0" type="815" id="AeVvx0Tfo2vP" />
      <listitem open="0" type="815" id="7y6i0mCqlLXX" />
      <listitem open="0" type="815" id="ncnhPF6Nb4gW" />
      <listitem open="0" type="815" id="fdGMIgnytpRR" />
      <listitem open="0" type="815" id="HitRNvGlhfSQ" />
      <listitem open="0" type="815" id="XVsJdmleGxe9" />
      <listitem open="0" type="815" id="wgBMgsaj2Po4" />
      <listitem open="0" type="815" id="BbJ8p6Ub1sOn" />
      <listitem open="0" type="815" id="psDgPb842tas" />
      <listitem open="0" type="815" id="Oy4vngKqrXNS" />
      <listitem open="0" type="815" id="KILwUQi7WqeR" />
      <listitem open="0" type="815" id="sGv93GppBzL9" />
      <listitem open="0" type="815" id="jiv1cSSLq2gG" />
      <listitem open="0" type="815" id="3tUYFgjuIvXT" />
      <listitem open="0" type="815" id="RT7yUsdMVOEB" />
      <listitem open="0" type="815" id="aMq04t7dX3lh" />
      <listitem open="0" type="815" id="f7k1mcQaQk46" />
      <listitem open="0" type="815" id="BwRaP3s8OhuP" />
      <listitem open="0" type="815" id="50vwLwieQVeI" />
      <listitem open="0" type="815" id="VYJhVaUbrL3o" />
      <listitem open="0" type="815" id="lTMZ0mAeCzHp" />
      <listitem open="0" type="815" id="NglrkZHdqZSb" />
     </listitem>
     <listitem open="1" type="813" id="xtDL8nWk5LTW" >
      <listitem open="0" type="815" id="UobxJKCl54n6" />
      <listitem open="0" type="815" id="Q2PSF2M1Qwn8" />
      <listitem open="0" type="815" id="Q9iyWc7sEaax" />
      <listitem open="0" type="815" id="kWZdp6srXPwB" />
      <listitem open="0" type="815" id="hMRc7T477TzF" />
      <listitem open="0" type="815" id="oSabGCgzMCZI" />
      <listitem open="0" type="815" id="5feGHpDK85LM" />
      <listitem open="0" type="815" id="FzJhKIUTDeDz" />
      <listitem open="0" type="815" id="8mdvAWeWSLzp" />
     </listitem>
     <listitem open="1" type="813" id="Hcg4VxY45jua" >
      <listitem open="0" type="815" id="PQLVPBwzgQ1t" />
      <listitem open="0" type="815" id="ugPCzHZI8zqQ" />
      <listitem open="0" type="815" id="hUj8iKwLKJuN" />
     </listitem>
     <listitem open="1" type="813" id="JaNVKaOP0N5e" >
      <listitem open="0" type="815" id="P4acASinmvIU" />
      <listitem open="0" type="815" id="1FZGmLS9F6s5" />
      <listitem open="0" type="815" id="xmCjNlSgEXmE" />
      <listitem open="0" type="815" id="jhR7ROWTmaZi" />
      <listitem open="0" type="815" id="mofcgcxhNkyR" />
      <listitem open="0" type="815" id="Z3zh2yLesuxK" />
      <listitem open="0" type="815" id="0CS5rMB3R9gO" />
      <listitem open="0" type="815" id="O4geqPdu7eu6" />
     </listitem>
     <listitem open="1" type="813" id="uUHe9zQJg5tZ" />
     <listitem open="1" type="813" id="jGhI00Ghwa6j" />
     <listitem open="1" type="813" id="FyAJpsIuNuX0" />
     <listitem open="1" type="813" id="bLKWg7AvWvJ8" />
     <listitem open="1" type="813" id="0imsAsm086EY" >
      <listitem open="0" type="815" id="2lJMehezvLne" />
      <listitem open="0" type="815" id="QGbuaQcTIYb1" />
      <listitem open="0" type="815" id="Q4hpOu3lWLok" />
     </listitem>
     <listitem open="1" type="813" id="yhgjNHlDSiZH" />
     <listitem open="1" type="813" id="FRDTSCi1H5yV" />
     <listitem open="1" type="813" id="qQfXoERZGR5i" >
      <listitem open="0" type="815" id="5Semp5PO2X5v" />
      <listitem open="0" type="815" id="rHIfB8YmhNQd" />
      <listitem open="0" type="815" id="tTUcV9blowqu" />
     </listitem>
     <listitem open="1" type="813" id="P5MH9Uxf7hgQ" >
      <listitem open="0" type="815" id="GeyRF5qQiGRj" />
      <listitem open="0" type="815" id="DoKnc9usozoB" />
      <listitem open="0" type="815" id="iYERNez44ppI" />
      <listitem open="0" type="815" id="VCwkmzrqlpQY" />
     </listitem>
     <listitem open="1" type="813" id="QulKTRR5vzNh" />
     <listitem open="1" type="813" id="NeU3DLONSXXS" >
      <listitem open="0" type="815" id="eqyQHWdh96IR" />
      <listitem open="0" type="815" id="9narkpiTkShs" />
     </listitem>
     <listitem open="1" type="813" id="2kXemGc9XhCG" >
      <listitem open="0" type="815" id="2msT9XHz2NBO" />
      <listitem open="0" type="815" id="j3K7tFHUTPgn" />
      <listitem open="0" type="815" id="vfs7Ko5GOswA" />
      <listitem open="0" type="815" id="i1OWYkrnEhyx" />
      <listitem open="0" type="815" id="Vk91c1X8oZOL" />
      <listitem open="0" type="815" id="JB8y3QfvWruW" />
      <listitem open="0" type="815" id="d5FKwzmGgtKh" />
      <listitem open="0" type="815" id="zjUaGSK2gslS" />
      <listitem open="0" type="815" id="QCN86URFPB0p" />
     </listitem>
     <listitem open="1" type="813" id="uGb3vqHAZN2A" >
      <listitem open="0" type="815" id="oPdWYarPc2l0" />
      <listitem open="0" type="815" id="hNuwuq6x59lC" />
     </listitem>
     <listitem open="1" type="813" id="0EkDocep0B56" >
      <listitem open="0" type="815" id="kXMJQwmNHETW" />
     </listitem>
     <listitem open="1" type="813" id="6PtObMs5Qc7p" >
      <listitem open="0" type="815" id="k5kF7GTXY9no" />
     </listitem>
     <listitem open="1" type="813" id="COKhFv07JpFH" >
      <listitem open="0" type="815" id="JS2nlazHAnml" />
      <listitem open="0" type="815" id="48JFYzdMLUOP" />
     </listitem>
     <listitem open="1" type="813" id="teMRn9F7tkZm" >
      <listitem open="0" type="815" id="8FD0ot0X9hHF" />
      <listitem open="0" type="815" id="oBSkp3NNGzut" />
     </listitem>
     <listitem open="1" type="813" id="Q9v8KjVyyJAy" >
      <listitem open="0" type="815" id="AA9YXOfBcuXU" />
      <listitem open="0" type="815" id="3GG5PWbm41kZ" />
      <listitem open="0" type="815" id="RObGhTsu2AGW" />
      <listitem open="0" type="815" id="ULjSVLlqD6pt" />
      <listitem open="0" type="815" id="9LqlODL1blf8" />
      <listitem open="0" type="815" id="mYkBlyc9SddC" />
      <listitem open="0" type="815" id="rRA6JfcSOFDR" />
      <listitem open="0" type="815" id="Wx2kvzNtOP2h" />
      <listitem open="0" type="815" id="d2ZVRzQQDyjC" />
      <listitem open="0" type="815" id="C4SN0RbClE3Y" />
     </listitem>
     <listitem open="1" type="813" id="eQ5MsTHiPc5R" />
     <listitem open="1" type="813" id="AlxAgGYNqeki" >
      <listitem open="0" type="815" id="9Y8b3Ak4BGVx" />
      <listitem open="0" type="815" id="ttC6klyqtEkd" />
     </listitem>
     <listitem open="1" type="813" id="LPCDktDEWLDV" >
      <listitem open="0" type="815" id="1rl1Z2rniMPr" />
      <listitem open="0" type="815" id="73A2qXOeNURN" />
      <listitem open="0" type="815" id="lziLpKdKlKvc" />
      <listitem open="0" type="815" id="k1bxhhnP5SQJ" />
      <listitem open="0" type="815" id="3LlnSKPBZzgO" />
      <listitem open="0" type="815" id="Q34tYJQE2DPY" />
      <listitem open="0" type="815" id="1gk72DUKWp6l" />
      <listitem open="0" type="815" id="qQUeECk0M7aB" />
      <listitem open="0" type="815" id="ee9TGt3jqoh6" />
      <listitem open="0" type="815" id="3sB4FefLGOQr" />
     </listitem>
     <listitem open="1" type="813" id="SCjscoVoMDzx" >
      <listitem open="0" type="815" id="Rlw4kwU1K11Q" />
      <listitem open="0" type="815" id="XI5SHmzEXgkz" />
      <listitem open="0" type="815" id="Z1GfqhMVbqTj" />
     </listitem>
     <listitem open="1" type="813" id="u3wrBmYr9Rd3" >
      <listitem open="0" type="815" id="4LNH3VytSDyr" />
      <listitem open="0" type="815" id="vpb0Vh7r8J8l" />
      <listitem open="0" type="815" id="7z5k2gnwCE6Z" />
      <listitem open="0" type="815" id="lAud1GwWcL9b" />
      <listitem open="0" type="815" id="3Qw0gth0utMJ" />
      <listitem open="0" type="815" id="apEucLeczGxi" />
      <listitem open="0" type="815" id="04SssLfeLn6k" />
      <listitem open="0" type="815" id="P6l3CC4ruosn" />
      <listitem open="0" type="815" id="FS7Qyp7de6T0" />
      <listitem open="0" type="815" id="wzIttyE9CWkh" />
      <listitem open="0" type="815" id="r4SCEvNY0mJ3" />
      <listitem open="0" type="815" id="X1hxBbDxMBTB" />
      <listitem open="0" type="815" id="1IbGRxRkSAwH" />
      <listitem open="0" type="815" id="S4sB9458HBMB" />
      <listitem open="0" type="815" id="kH8pLB7ul6Eu" />
      <listitem open="0" type="815" id="izEhGN6O443I" />
      <listitem open="0" type="815" id="ltI23fdR1HBP" />
      <listitem open="0" type="815" id="CEd5IalJIBNb" />
     </listitem>
     <listitem open="1" type="813" id="yc2IphSDsGvQ" >
      <listitem open="0" type="815" id="1P6n3hnfUA4L" />
      <listitem open="0" type="815" id="s60FBXJrmed1" />
      <listitem open="0" type="815" id="L7AbF9xIN7X4" />
      <listitem open="0" type="815" id="8NKeTi9sGAzN" />
      <listitem open="0" type="815" id="9X5BpkmpV6NX" />
      <listitem open="0" type="815" id="aWV9MSc52Ihc" />
      <listitem open="0" type="815" id="SnU5ifTuZrxV" />
      <listitem open="0" type="815" id="JyQtdAii5O2A" />
      <listitem open="0" type="815" id="FcKYkHSqcelp" />
      <listitem open="0" type="815" id="lNTDauMMI9yu" />
      <listitem open="0" type="815" id="uoHMogsSSFRB" />
      <listitem open="0" type="815" id="IAwoCTJ7U0QV" />
      <listitem open="0" type="815" id="kqyfGfpPW4XX" />
      <listitem open="0" type="815" id="DVXmknmTW0Xo" />
      <listitem open="0" type="815" id="W62htHQOZKuK" />
      <listitem open="0" type="815" id="jq78ewn4DmHj" />
      <listitem open="0" type="815" id="kpfpyhomRoph" />
      <listitem open="0" type="815" id="26nsPQ3j5A4z" />
      <listitem open="0" type="815" id="9apaCYaMPrg1" />
      <listitem open="0" type="815" id="d8P0oFGfjym2" />
      <listitem open="0" type="815" id="vTDWKhsBCzzt" />
      <listitem open="0" type="815" id="0fwf6I8axQ8t" />
      <listitem open="0" type="815" id="KegoIbQC8Pid" />
      <listitem open="0" type="815" id="9Xfs2KSQ2se7" />
      <listitem open="0" type="815" id="ly7LXNIKuhKy" />
      <listitem open="0" type="815" id="LNjTuvhk8NMG" />
      <listitem open="0" type="815" id="0zImsoCg9YDE" />
      <listitem open="0" type="815" id="t8BlNo8LlsWS" />
      <listitem open="0" type="815" id="S8KEs4J9sEdP" />
      <listitem open="0" type="815" id="XP6rzmxIomj4" />
      <listitem open="0" type="815" id="oIdYnRdYKci8" />
      <listitem open="0" type="815" id="xzIbWq92mVq5" />
     </listitem>
     <listitem open="1" type="813" id="5JQSTxnOAJCu" />
     <listitem open="1" type="813" id="j0XOxsrPs1a6" >
      <listitem open="0" type="815" id="6nh3KFAB4myu" />
      <listitem open="0" type="815" id="jZtpBMFYy2pO" />
      <listitem open="0" type="815" id="nhoeKi9NzqtK" />
     </listitem>
     <listitem open="1" type="813" id="fXhK02W0Fxbn" >
      <listitem open="0" type="815" id="46DuM4MFDasS" />
      <listitem open="0" type="815" id="tq98qQ111ORj" />
      <listitem open="0" type="815" id="4TN3gEJUD8UW" />
      <listitem open="0" type="815" id="ExvY01YLVLQV" />
      <listitem open="0" type="815" id="Tk2UzY8ENCoV" />
      <listitem open="0" type="815" id="XeTAXLcSnMcx" />
      <listitem open="0" type="815" id="rGua2Hc8cttS" />
      <listitem open="0" type="815" id="GaEDiIoalmN3" />
      <listitem open="0" type="815" id="U1zSWjDLwA6d" />
      <listitem open="0" type="815" id="gBR0JBzKaqVu" />
     </listitem>
     <listitem open="1" type="813" id="Y2XKVilKlRxV" />
     <listitem open="1" type="813" id="lUXKS38ZNJWp" >
      <listitem open="0" type="815" id="me4nJeZoScAl" />
      <listitem open="0" type="815" id="VMk4VrhJ3hcn" />
      <listitem open="0" type="815" id="sLM4W59TZA8f" />
      <listitem open="0" type="815" id="C8nnopVZCBl7" />
      <listitem open="0" type="815" id="zAn8SJaBdi4k" />
      <listitem open="0" type="815" id="tNH79PvKolqN" />
      <listitem open="0" type="815" id="eYGcyp6dZRia" />
      <listitem open="0" type="815" id="KWfUWFCsRIg2" />
      <listitem open="1" type="813" id="gbC2lwstsaEj" />
     </listitem>
     <listitem open="1" type="813" id="TQhE19xzjOz3" >
      <listitem open="0" type="815" id="gU3u0WT5XLhw" />
      <listitem open="0" type="815" id="Zy95fhkAzOLT" />
     </listitem>
     <listitem open="1" type="813" id="f2Ujhhe1P5a3" >
      <listitem open="0" type="815" id="85H07fduwtuX" />
      <listitem open="0" type="815" id="s176ceI82fuk" />
     </listitem>
     <listitem open="1" type="813" id="JfeInQ1D6QCR" >
      <listitem open="0" type="815" id="1evzKplQkhb4" />
     </listitem>
     <listitem open="1" type="813" id="xxH9MBk73yra" >
      <listitem open="0" type="815" id="VemVxV0gOIKU" />
      <listitem open="0" type="815" id="WZSB3jm50JiW" />
      <listitem open="0" type="815" id="LAnAOTESfUHd" />
      <listitem open="0" type="815" id="2mAq0E5qqDi4" />
     </listitem>
     <listitem open="1" type="813" id="jXMC57EmPtgo" >
      <listitem open="0" type="815" id="ER7XtTluaztQ" />
      <listitem open="0" type="815" id="B7D5zaNcJRMF" />
      <listitem open="0" type="815" id="wCFPNZoFvsNI" />
      <listitem open="0" type="815" id="ZK7OoZwOVBMP" />
      <listitem open="0" type="815" id="1T0obeZCqWUa" />
      <listitem open="0" type="815" id="ZrAR2LUlo9gl" />
      <listitem open="0" type="815" id="OcdN80UhrBD5" />
      <listitem open="0" type="815" id="2gAk43SZzYP9" />
      <listitem open="0" type="815" id="Sqzz273OMGwf" />
      <listitem open="0" type="815" id="0nkthqkHZVXB" />
      <listitem open="0" type="815" id="b2rlMztEtu6t" />
      <listitem open="0" type="815" id="s1F6zZtsJkkD" />
      <listitem open="0" type="815" id="00Ke1c2khTd3" />
      <listitem open="0" type="815" id="QPEx25u4ckhp" />
      <listitem open="0" type="815" id="AcSLnACfod2I" />
     </listitem>
     <listitem open="1" type="813" id="xrz2kWm2eVRA" >
      <listitem open="0" type="815" id="5jBRclYnNr3Z" />
      <listitem open="0" type="815" id="Fffh2SOCMvZ7" />
      <listitem open="0" type="815" id="ZSexQf5wmBA5" />
      <listitem open="0" type="815" id="vnVa6My2YX03" />
      <listitem open="0" type="815" id="c0zeifME4JUz" />
      <listitem open="0" type="815" id="dsGYiqkGmVqm" />
      <listitem open="0" type="815" id="bXAo4azLKc7j" />
      <listitem open="0" type="815" id="FKjQdWdYFWQC" />
      <listitem open="0" type="815" id="WiJs7UYAb8Ga" />
      <listitem open="0" type="815" id="00srUHuZeIiW" />
      <listitem open="0" type="815" id="x8iDF1Bq5B5d" />
     </listitem>
     <listitem open="1" type="813" id="ZwF9iHvE5F3D" >
      <listitem open="0" type="815" id="zex2eGyuhX4h" />
      <listitem open="0" type="815" id="SaCAq7BM50Ly" />
      <listitem open="0" type="815" id="XEtahpEL8WBX" />
      <listitem open="0" type="815" id="wyBxYDPgB8t5" />
      <listitem open="0" type="815" id="dHFaCtsNLkgx" />
      <listitem open="0" type="815" id="zUt3miGvwaO6" />
      <listitem open="0" type="815" id="BqIdyqKp4JrF" />
      <listitem open="0" type="815" id="zsjHuzkTU8Zj" />
      <listitem open="0" type="815" id="2UKd7vcL2x6P" />
     </listitem>
     <listitem open="1" type="813" id="zSGJKWgceism" />
     <listitem open="1" type="813" id="pXcnApfrKQfp" />
     <listitem open="1" type="813" id="4Yr3i0HrZwVw" />
     <listitem open="1" type="813" id="BYheNucJ6co4" />
     <listitem open="1" type="813" id="KA4G8Mg71BBE" />
     <listitem open="1" type="813" id="p5hpEhM3QwkR" />
     <listitem open="1" type="813" id="dgM9OmyrjK3G" >
      <listitem open="0" type="815" id="mKBFscKv7aWZ" />
      <listitem open="0" type="815" id="m9iBfYmMSKZp" />
      <listitem open="0" type="815" id="Ra2aDD3wWTRI" />
      <listitem open="0" type="815" id="Gakj3ha49cAU" />
     </listitem>
     <listitem open="1" type="813" id="5fl209MKY722" >
      <listitem open="0" type="815" id="7Lib9154draL" />
      <listitem open="0" type="815" id="b814KTx1ylE5" />
     </listitem>
     <listitem open="1" type="813" id="SCwY6KOh3FzX" />
     <listitem open="1" type="813" id="BwwhQVxJMF5C" >
      <listitem open="0" type="815" id="1j8DQCeTaltY" />
      <listitem open="0" type="815" id="2O7S0Q90Z0pK" />
      <listitem open="0" type="815" id="2BtonkD9CNSA" />
      <listitem open="0" type="815" id="OUCJzpq5WvYm" />
     </listitem>
     <listitem open="1" type="813" id="xUAlSAGZwJqw" />
     <listitem open="1" type="813" id="psCjOJu1QKPz" >
      <listitem open="0" type="815" id="uPuHW4SavEyu" />
      <listitem open="0" type="815" id="I48CpIfJP7CC" />
      <listitem open="0" type="815" id="r3GBTmSmwnCV" />
      <listitem open="0" type="815" id="zKSCck72JSVJ" />
      <listitem open="0" type="815" id="3CkQT3FF3kNT" />
      <listitem open="0" type="815" id="jw88BceXPIIr" />
      <listitem open="0" type="815" id="CrdQPDGGfI3G" />
      <listitem open="0" type="815" id="3GRneUxaGYbs" />
      <listitem open="0" type="815" id="u1QIOkoTmQ3C" />
      <listitem open="0" type="815" id="JBJ1ZL08QPJX" />
      <listitem open="0" type="815" id="m2CkEFvNiO20" />
      <listitem open="0" type="815" id="8T1uuvWDuqrp" />
      <listitem open="0" type="815" id="3aNRtKmcoRub" />
      <listitem open="0" type="815" id="C7XMxBOMQIzL" />
      <listitem open="0" type="815" id="4ldWV9WWAsd2" />
      <listitem open="0" type="815" id="xtHkPYuiSjY1" />
      <listitem open="0" type="815" id="8nR1vt2spYH9" />
      <listitem open="0" type="815" id="zKgCV38QsAS1" />
      <listitem open="0" type="815" id="VxYCWDU5DBPy" />
      <listitem open="0" type="815" id="LSqmG9nZKEwm" />
      <listitem open="0" type="815" id="onhqttbTM1Do" />
      <listitem open="0" type="815" id="mZPyDXUQ36Cl" />
      <listitem open="0" type="815" id="wjkkgBhELvdC" />
      <listitem open="0" type="815" id="1R97h6HTg5JV" />
      <listitem open="0" type="815" id="CGw6pK4S8GyA" />
      <listitem open="0" type="815" id="dceJpEE6B9iY" />
      <listitem open="0" type="815" id="KLx5F4L1NRad" />
      <listitem open="0" type="815" id="nXjmN5MUgfzL" />
      <listitem open="0" type="815" id="Ivhdbq8M1qOb" />
     </listitem>
     <listitem open="1" type="813" id="SBIuLUYV5uC8" >
      <listitem open="0" type="815" id="2YSGVQQJwmOL" />
      <listitem open="0" type="815" id="3BAEwqYEIvgM" />
     </listitem>
     <listitem open="1" type="813" id="i4OrX8epAvS1" >
      <listitem open="0" type="815" id="y9kjUPWbyrJD" />
     </listitem>
     <listitem open="1" type="813" id="LeVeFLWziGZs" />
     <listitem open="1" type="813" id="rx45HyXmk8jh" >
      <listitem open="0" type="815" id="ASxM7Hntd2kL" />
     </listitem>
     <listitem open="1" type="813" id="noFJiAFlByCB" >
      <listitem open="0" type="815" id="PKWJFApMp9Zi" />
      <listitem open="0" type="815" id="1z06zfugwxgW" />
      <listitem open="0" type="815" id="urqfitl470hn" />
      <listitem open="0" type="815" id="2hdchxNAnq28" />
     </listitem>
     <listitem open="1" type="813" id="w8j1nPUI1ekC" />
     <listitem open="1" type="813" id="OAO7Nq0gxWBP" />
     <listitem open="1" type="813" id="lHkzUD2muz1E" >
      <listitem open="0" type="815" id="0NEl75kMtceL" />
      <listitem open="0" type="815" id="FlISjM89IcNJ" />
      <listitem open="0" type="815" id="jWaRzfQHDy6g" />
      <listitem open="0" type="815" id="78cJZiFtiV50" />
      <listitem open="0" type="815" id="vCQycLSNCT8y" />
      <listitem open="0" type="815" id="nBF0sLyz5SwW" />
      <listitem open="0" type="815" id="rBYkm4FMFh8x" />
      <listitem open="0" type="815" id="8ACPAWZdtbXX" />
      <listitem open="0" type="815" id="KFs5fMREQeMf" />
      <listitem open="0" type="815" id="y095L5I7nSVO" />
      <listitem open="0" type="815" id="R5yK2e306LxF" />
      <listitem open="0" type="815" id="n980dNaM3Iwz" />
      <listitem open="0" type="815" id="mwtZr91JDWEa" />
      <listitem open="0" type="815" id="HT8qTHdxnvFS" />
      <listitem open="0" type="815" id="dB0TSAY4b2Ap" />
      <listitem open="0" type="815" id="5mOYvOSrqJC7" />
      <listitem open="0" type="815" id="9BbbmQLWcWVl" />
      <listitem open="0" type="815" id="WYMWaMjhUdpk" />
      <listitem open="0" type="815" id="EAXsGuTtNK3Q" />
      <listitem open="0" type="815" id="mY4mlSkpovIp" />
      <listitem open="0" type="815" id="pqZDzq0FSeRE" />
      <listitem open="0" type="815" id="FMhQlU6UP8Jn" />
      <listitem open="0" type="815" id="Wpo3nN2NYLDi" />
      <listitem open="0" type="815" id="TJAKDv4SOX4y" />
      <listitem open="0" type="815" id="rYuH6GtMOwJK" />
      <listitem open="0" type="815" id="F2bsacQAyWl9" />
      <listitem open="0" type="815" id="HyyOnTCAeZ3Y" />
      <listitem open="0" type="815" id="yIwclr7h7oVn" />
      <listitem open="0" type="815" id="IKflxbbIgTuV" />
      <listitem open="0" type="815" id="4ERrtbShTewr" />
     </listitem>
     <listitem open="1" type="813" id="2dWUeCKz1fk2" >
      <listitem open="0" type="815" id="Q6maUnEPxgdz" />
      <listitem open="0" type="815" id="waGIuvwpAO1g" />
      <listitem open="0" type="815" id="nCNbEmGNOKhe" />
      <listitem open="0" type="815" id="aldfs7DQDgZE" />
     </listitem>
     <listitem open="1" type="813" id="l2UvwTPDZJ5q" >
      <listitem open="0" type="815" id="QODcYBWsqmEk" />
      <listitem open="0" type="815" id="JnYZTOY8NPei" />
     </listitem>
     <listitem open="1" type="813" id="BbWiMseK5Lvx" >
      <listitem open="0" type="815" id="GRjUwflx9D9f" />
      <listitem open="0" type="815" id="WCGozFuB7iHn" />
     </listitem>
     <listitem open="1" type="813" id="ItJA34IGeSJj" >
      <listitem open="0" type="815" id="5Y23LQcyz4Jx" />
      <listitem open="0" type="815" id="2y6bSYu1xnQZ" />
     </listitem>
     <listitem open="1" type="813" id="XRTpqLjIRRyv" />
     <listitem open="1" type="813" id="VycrMaOq3XLl" />
     <listitem open="1" type="813" id="FL87U64nxCz8" />
     <listitem open="1" type="813" id="S4iT7BtDsM26" >
      <listitem open="0" type="815" id="WXzAGvDUGbs2" />
     </listitem>
     <listitem open="1" type="813" id="oRC2sVUWr3oR" />
     <listitem open="1" type="813" id="KNvyau1h0cf5" >
      <listitem open="0" type="815" id="Sq2cmwKtuLLV" />
      <listitem open="0" type="815" id="66dZkvpwCvuh" />
      <listitem open="0" type="815" id="RVZ8mXztnE79" />
      <listitem open="0" type="815" id="toCErGAGiJ0r" />
     </listitem>
     <listitem open="1" type="813" id="wDC9ESaAr1kl" />
     <listitem open="1" type="807" id="FZGNWYx6u2Qq" label="class diagram" />
    </listitem>
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Python" >
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;" id="sv4w0Q0GIpSr" />
    <sourcecode value=":&#xa;self.log.info(&quot;Minimo starting with option1=%s&quot;%self[&quot;option1&quot;])&#xa;return True&#xa;" id="Jsebh6Qp5lh2" />
    <sourcecode value=":&#xa;self.log.info(&quot;Minimo stopping&quot;)&#xa;return True&#xa;" id="AW4FFlFFesi0" />
    <sourcecode value=":&#xa;self.log.info(&quot;Minimo looping&quot;)&#xa;return False&#xa;" id="bvfFlNFRdLvy" />
    <sourcecode value=":&#xa;return&quot;Method works!&quot;&#xa;" id="uraXCVU7rIzW" />
    <sourcecode value=":&#xa;self.eventDone(&quot;Event works!&quot;)&#xa;" id="yCSFKhHwqlwW" />
    <sourcecode value=":&#xa;raise MinimoException(&quot;Exception works!&quot;)&#xa;" id="Epn4ajaRogGe" />
    <sourcecode value=":&#xa;return&quot;Static method works!&quot;&#xa;" id="2YZoCpS4z6hH" />
    <sourcecode value=":&#xa;return cls.CONST" id="A0wiIuqISQ7f" />
    <sourcecode value=":&#xa;BasicLifeCycle.__init__(self,manager)&#xa;" id="Z1GfqhMVbqTj" />
    <sourcecode value=":&#xa;self.config+=config&#xa;return True&#xa;" id="XI5SHmzEXgkz" />
    <sourcecode value=":&#xa;dome=self.manager.getDriver('/DomeLNA40cm/domedriver')&#xa;print&quot;=&quot;*50&#xa;print&quot;Dome test&quot;&#xa;print&quot;=&quot;*50&#xa;def test(name,azs):&#xa;  print&quot;Moving dome to azimuth 0 (north):&quot;&#xa;  sys.stdout.flush()&#xa;  dome.slewToAz(0)&#xa;  print&quot;done&quot;&#xa;  start_time=time.time()&#xa;  print&quot;=&quot;*50&#xa;  print&quot;Starting %s test at (%s)&quot;%(name,time.strftime(&quot;%c&quot;,time.localtime(start_time)))&#xa;  print&quot;=&quot;*50&#xa;  for az in azs:&#xa;    print&quot;Moving to %s:&quot;%az&#xa;    sys.stdout.flush()&#xa;    t0=time.time()&#xa;    if not dome.slewToAz(az):&#xa;      print dome.getError()&#xa;&#xa;    dt=time.time()-t0&#xa;    dt-=0.1&#xa;    assert dome.getAz()in(az-1,az,az+1)&#xa;    print&quot; slew time: %.3f&quot;%dt&#xa;    print&quot;done\n&quot;&#xa;    sys.stdout.flush()&#xa;&#xa;  finish=time.time()&#xa;  print&quot;=&quot;*50&#xa;  print&quot;Finishing %s test at '%s'. Test took %.2f seconds.&quot;%(name,time.strftime(&quot;%c&quot;,time.localtime(finish)),finish-start_time)&#xa;  print&quot;=&quot;*50&#xa;  print&#xa;&#xa;azs=range(0,360)&#xa;test(&quot;sequential&quot;,azs)&#xa;def slitTest():&#xa;  def close():&#xa;    print&quot;closing the slit:&quot;&#xa;    sys.stdout.flush()&#xa;    t0=time.time()&#xa;    if not dome.slitClose():&#xa;      print dome.getError()&#xa;&#xa;    dt=time.time()-t0&#xa;    print&quot; dt: %.3f&quot;%dt&#xa;    print&quot;done&quot;&#xa;    sys.stdout.flush()&#xa;&#xa;  def open():&#xa;    print&quot;opening the slit:&quot;&#xa;    sys.stdout.flush()&#xa;    t0=time.time()&#xa;    if not dome.slitOpen():&#xa;      print dome.getError()&#xa;&#xa;    dt=time.time()-t0&#xa;    print&quot; dt: %.3f&quot;%dt&#xa;    print&quot;done&quot;&#xa;    sys.stdout.flush()&#xa;&#xa;  open()&#xa;  close()&#xa;  close()&#xa;  open()&#xa;  open()&#xa;  close()" id="Rlw4kwU1K11Q" />
    <sourcecode value=":&#xa;BasicLifeCycle.__init__(self,manager)&#xa;" id="zPY48N5AYNI2" />
    <sourcecode value=":&#xa;self.config+=config&#xa;return True&#xa;" id="JFTO3mchH1Oj" />
    <sourcecode value=":&#xa;m=self.manager.getDriver('/Meade/lx16?device=/dev/ttyS1')&#xa;if self.config.script!=&quot;meade.script.default&quot;:&#xa;  try:&#xa;    f=open(self.config.script)&#xa;    for line in f:&#xa;      if not line:&#xa;        continue&#xa;&#xa;      m._write(':%s;print m._readline()&#xa;&#xa;    f.close()&#xa;&#xa;  except IOError,e:&#xa;    print&quot;Error: %s (%s)&quot;%(e.strerror,e.filename)&#xa;&#xa;&#xa;else:&#xa;  print&quot;Meade protocol debugger&quot;&#xa;  try:&#xa;    while True:&#xa;      i=raw_input(&quot;> &quot;)&#xa;      if not i:&#xa;        continue&#xa;&#xa;      m._write(&quot;:%s;o=m._readline()&#xa;      print o&#xa;&#xa;&#xa;  except EOFError:&#xa;    print&quot;Bye!&quot;" id="Td1ZR8a1vVa4" />
    <sourcecode value=":&#xa;BasicLifeCycle.__init__(self,manager)&#xa;" id="fnP62mqleQb7" />
    <sourcecode value=":&#xa;self.config+=config&#xa;return True&#xa;" id="PUQjNhVDa7TC" />
    <sourcecode value=":&#xa;m=self.manager.getDriver('/Meade/lx16?device=%s'%self.config.device)&#xa;def printInfo():&#xa;  print&quot;align mode:&quot;,m.getAlignModes()[m.getAlignMode()]&#xa;  print&quot;ra :&quot;,m.getRa()&#xa;  print&quot;dec:&quot;,m.getDec()&#xa;  print&quot;az :&quot;,m.getAz()&#xa;  print&quot;alt:&quot;,m.getAlt()&#xa;  print&quot;lat :&quot;,m.getLat()&#xa;  print&quot;long:&quot;,m.getLong()&#xa;  print&quot;date:&quot;,m.getDate()&#xa;  print&quot;time:&quot;,m.getLocalTime()&#xa;  print&quot;to utc:&quot;,m.getUTCOffset()&#xa;  print&quot;lst:&quot;,m.getLocalSiderealTime()&#xa;  print&quot;tracking rate:&quot;,m.getCurrentTrackingRate()&#xa;&#xa;def setInfo():&#xa;  if not m.setLat(&quot;-22 32 03&quot;):&#xa;    print m.getError()&#xa;&#xa;  if not m.setLong(&quot;-45 34 57&quot;):&#xa;    print m.getError()&#xa;&#xa;  if not m.setDate(time.time()):&#xa;    print m.getError()&#xa;&#xa;  if not m.setLocalTime(time.time()):&#xa;    print m.getError()&#xa;&#xa;  if not m.setUTCOffset(3):&#xa;    print m.getError()&#xa;&#xa;&#xa;def printCoord():&#xa;  print&quot;%20s %20s %20s %20s %20s&quot;%(m.getLocalSiderealTime(),m.getRa(),m.getDec(),m.getAz(),m.getAlt())&#xa;&#xa;def sync():&#xa;  print&#xa;  printCoord()&#xa;  print&quot;syncing...&quot;&#xa;  if not m.sync(&quot;10 00 00&quot;,&quot;00 00 00&quot;):&#xa;    print m.getError()&#xa;&#xa;  printCoord()&#xa;&#xa;def slewRate():&#xa;  print&#xa;  print&quot;slews rate:&quot;,m.getSlewRates()&#xa;  print&quot;current slew rate:&quot;,m.getSlewRate(),m.getSlewRates()[m.getSlewRate()]&#xa;  if not m.setSlewRate(max(m.getSlewRates().keys())):&#xa;    print m.getError()&#xa;&#xa;  print&quot;current slew rate:&quot;,m.getSlewRate(),m.getSlewRates()[m.getSlewRate()]&#xa;&#xa;def movement():&#xa;  for rate in m.getSlewRates().keys():&#xa;    print&quot;moving to East at %s rate:&quot;%m.getSlewRates()[rate],&#xa;    sys.stdout.flush()&#xa;    t=time.time()&#xa;    if not m.moveEast(3,rate):&#xa;      print m.getError()&#xa;&#xa;    print time.time()-t&#xa;    sys.stdout.flush()&#xa;    print&quot;moving to West at %s rate:&quot;%m.getSlewRates()[rate],&#xa;    sys.stdout.flush()&#xa;    t=time.time()&#xa;    if not m.moveWest(3,rate):&#xa;      print m.getError()&#xa;&#xa;    print time.time()-t&#xa;    sys.stdout.flush()&#xa;    print&quot;moving to North at %s rate:&quot;%m.getSlewRates()[rate],&#xa;    sys.stdout.flush()&#xa;    t=time.time()&#xa;    if not m.moveNorth(3,rate):&#xa;      print m.getError()&#xa;&#xa;    print time.time()-t&#xa;    sys.stdout.flush()&#xa;    print&quot;moving to South at %s rate:&quot;%m.getSlewRates()[rate],&#xa;    sys.stdout.flush()&#xa;    t=time.time()&#xa;    if not m.moveSouth(3,rate):&#xa;      print m.getError()&#xa;&#xa;    print time.time()-t&#xa;    sys.stdout.flush()&#xa;    print&#xa;&#xa;&#xa;def alignMode():&#xa;  for mode in m.getAlignModes().keys():&#xa;    print&quot;current align mode:&quot;,m.getAlignModes()[m.getAlignMode()]&#xa;    print&quot;switching to:&quot;,m.getAlignModes()[mode]&#xa;    if not m.setAlignMode(mode):&#xa;      print m.getError()&#xa;&#xa;    print&quot;current align mode:&quot;,m.getAlignModes()[m.getAlignMode()]&#xa;    print&#xa;&#xa;&#xa;def tracking():&#xa;  m.setAlignMode(m.getAlignModes().values().index(&quot;POLAR&quot;))&#xa;  print&quot;current align mode:&quot;,m.getAlignModes()[m.getAlignMode()]&#xa;  print&quot;setting new date and time...&quot;&#xa;  setInfo()&#xa;  print&#xa;  for i in range(10):&#xa;    printCoord()&#xa;    time.sleep(1)&#xa;&#xa;  print&quot;stopping tracking...&quot;&#xa;  sys.stdout.flush()&#xa;  m.stopTracking()&#xa;  start=time.time()&#xa;  finish=start+30&#xa;  print&quot;waiting&quot;,&#xa;  sys.stdout.flush()&#xa;  while time.time()&lt;finish:&#xa;    print&quot;.&quot;,&#xa;    sys.stdout.flush()&#xa;    time.sleep(1)&#xa;&#xa;  print&#xa;  print&quot;re-starting tracking...&quot;&#xa;  sys.stdout.flush()&#xa;  m.startTracking()&#xa;  print&quot;using old date and time...&quot;&#xa;  print&#xa;  for i in range(10):&#xa;    printCoord()&#xa;    time.sleep(1)&#xa;&#xa;  print&#xa;  print&quot;setting new date and time...&quot;&#xa;  setInfo()&#xa;  print&#xa;  for i in range(10):&#xa;    printCoord()&#xa;    time.sleep(1)&#xa;&#xa;&#xa;def park():&#xa;  print&quot;=&quot;*50&#xa;  print&quot;Park and unpark test&quot;&#xa;  print&quot;=&quot;*50&#xa;  print&quot;Initial conditions (post power-on):&quot;&#xa;  printInfo()&#xa;  print&#xa;  print&quot;Starting the scope...&quot;&#xa;  setInfo()&#xa;  print&#xa;  print&quot;Scope location, date, time updated, new conditions:&quot;&#xa;  printInfo()&#xa;  print&#xa;  print&quot;Pooling telescope position:&quot;&#xa;  for i in range(10):&#xa;    printCoord()&#xa;    time.sleep(1)&#xa;&#xa;  print&#xa;  print&quot;Slewing... to 15:00:00 -20:00:00&quot;&#xa;  if not m.slewToRaDec(&quot;15:00:00&quot;,&quot;-20:00:00&quot;):&#xa;    print m.getError()&#xa;&#xa;  print&#xa;  print&quot;Parking the scope at %s (lst: %s)&quot;%(time.strftime(&quot;%c&quot;),m.getLocalSiderealTime())&#xa;  if not m.park():&#xa;    print m.getError()&#xa;&#xa;  print&#xa;  print&quot;Pooling telescope position:&quot;&#xa;  for i in range(10):&#xa;    printCoord()&#xa;    time.sleep(1)&#xa;&#xa;  print&#xa;  start=time.time()&#xa;  finish=start+(30*60)&#xa;  print&quot;Waiting              &quot;,&#xa;  while time.time()&lt;finish:&#xa;    update_scroll_spinner()&#xa;    time.sleep(0.2)&#xa;&#xa;  print&#xa;  print&#xa;  print&quot;Unparking the scope at %s (lst: %s)&quot;%(time.strftime(&quot;%c&quot;),m.getLocalSiderealTime())&#xa;  if not m.unpark():&#xa;    print m.getError()&#xa;&#xa;  print&#xa;  print&quot;Pooling telescope position:&quot;&#xa;  for i in range(10):&#xa;    printCoord()&#xa;    time.sleep(1)&#xa;&#xa;  print&quot;=&quot;*50&#xa;&#xa;def slewToAltAz():&#xa;  printCoord()&#xa;  if not m.slewToAltAz(&quot;40:00:00&quot;,&quot;180:00:00&quot;):&#xa;    print m.getError()&#xa;&#xa;  printCoord()&#xa;&#xa;def slewToRaDec():&#xa;  printCoord()&#xa;  if not m.slewToRaDec(&quot;20:00:00&quot;,&quot;00:00:00&quot;):&#xa;    print m.getError()&#xa;&#xa;  printCoord()&#xa;&#xa;printInfo()&#xa;setInfo()&#xa;print&#xa;printInfo()&#xa;" id="fXNgQQLuiuxP" />
    <sourcecode value=":&#xa;BasicLifeCycle.__init__(self,manager)&#xa;" id="Yi6axiicaaE5" />
    <sourcecode value=":&#xa;self.config+=config&#xa;return True&#xa;" id="tUyGl8fiMyDN" />
    <sourcecode value=":&#xa;m=self.manager.getDriver('/Meade/lx16?device=/dev/ttyS1')&#xa;protocol=:&#xa;  &quot;ra&quot;:&quot;VR&quot;,&#xa;  &quot;dec&quot;:&quot;VD&quot;&#xa;f=open(&quot;pec.%s&quot;%self.config.axis,&quot;w&quot;)&#xa;sidereal_time=(23*3600+56*60+4.1)&#xa;pec_dt=(sidereal_time/360)/200&#xa;full_circle=360*3600&#xa;d_theta=(full_circle/sidereal_time)*pec_dt&#xa;print>>f,&quot;;print>>f,&quot;;if self.config.axis==&quot;ra&quot;:&#xa;  print>>f,&quot;;&#xa;else:&#xa;  print>>f,&quot;;&#xa;sum=0.0&#xa;for i in range(200):&#xa;  m._write(&quot;:%s%03d;print&quot;\rGetting PEC for %s axis... (%03d)   &quot;%(self.config.axis.upper(),i),&#xa;  update_spinner()&#xa;  if self.config.axis==&quot;ra&quot;:&#xa;    value=float(m._readline()[:-1])&#xa;    pec_d_theta=(full_circle/(value*sidereal_time))*pec_dt&#xa;    offset=d_theta-pec_d_theta&#xa;    sum+=offset&#xa;    print>>f,&quot;%03d\t%.6f\t%.6f\t%.6f\t%.6f&quot;%(i,i*pec_dt,value,offset,sum)&#xa;&#xa;  else:&#xa;    print>>f,&quot;%03d\t%s&quot;%(i,m._readline()[:-1])&#xa;&#xa;&#xa;print&#xa;self.manager.shutdown()&#xa;sys.exit(0)" id="9gPwnQ61hQbw" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;" id="tTUcV9blowqu" />
    <sourcecode value=":&#xa;self.doSomething(&quot;test argument&quot;)&#xa;" id="rHIfB8YmhNQd" />
    <sourcecode value=":&#xa;self.log.warning(&quot;Hi, I'm doing something.&quot;)&#xa;self.log.warning(&quot;My arg=%s&quot;%arg)&#xa;self.log.warning(&quot;My param1=%s&quot;%self[&quot;param1&quot;])" id="5Semp5PO2X5v" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)" id="ze3RxgynzbGA" />
    <sourcecode value=":&#xa;self.temperature=None&#xa;self.position=None&#xa;self.fwhm=None&#xa;self.minmax=None&#xa;self.A=0&#xa;self.B=0&#xa;self.C=0&#xa;self.fwhm_fit=None&#xa;self.err=1e20&#xa;" id="0AnbU56nMN0Y" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;" id="Q4hpOu3lWLok" />
    <sourcecode value=":&#xa;pass&#xa;" id="QGbuaQcTIYb1" />
    <sourcecode value=":&#xa;tel=self.getManager().getProxy(&quot;/Telescope/0&quot;)&#xa;cam=self.getManager().getProxy(&quot;/Camera/0&quot;)&#xa;dome=self.getManager().getProxy(&quot;/Dome/0&quot;)&#xa;autofocus=self.getManager().getProxy(&quot;/Autofocus/0&quot;)&#xa;verify=self.getManager().getProxy(&quot;/PointVerify/0&quot;)&#xa;landolt=Landolt()&#xa;landolt.useTarget(Position.fromRaDec(&quot;00:38:00&quot;,&quot;-22:00:00&quot;),radius=45)&#xa;landolt.constrainColumns(:&#xa;  &quot;Vmag&quot;:&quot;&lt;11&quot;&#xa;)&#xa;landolts=landolt.find(limit=3)&#xa;for landolt in landolts:&#xa;  pos=Position.fromRaDec(landolt[&quot;RA&quot;],landolt[&quot;DEC&quot;])&#xa;  self.log.info(&quot;Slewing to %s&quot;%pos)&#xa;  tel.slewToRaDec(pos)&#xa;  while(tel.isSlewing()or not dome.isSyncWithTel()):&#xa;    self.log.info(&quot;Waiting dome...&quot;)&#xa;&#xa;  self.log.info(&quot;Doing autofocus on %s&quot;%pos)&#xa;  fit=autofocus.focus(target=Target.CURRENT,mode=Mode.FIT,&#xa;  exptime=20,start=0,end=7000,step=1000)self.log.info(&quot;Verifyng pointing...&quot;)&#xa;  verify.pointVerify()&#xa;  cam.expose(exp_time=120,shutter=&quot;OPEN&quot;,&#xa;  frames=1,filename=&quot;extincao-%s&quot;%landolt[&quot;ID&quot;].replace(&quot; &quot;,&quot;_&quot;))&#xa;" id="2lJMehezvLne" />
    <sourcecode value=":&#xa;self.reducer=self.getManager().getProxy(&quot;/Reduction/0&quot;)&#xa;self.reducer.reductionComplete+=self.calibrate&#xa;" id="ceUHUqHmPppR" />
    <sourcecode value=":&#xa;self.calibrationDone(imageRequest)" id="hZ44MuVsCXWV" />
    <sourcecode value=":&#xa;self.logRequests=logRequests&#xa;if sys.version_info[:2]==(2,5):&#xa;  SimpleXMLRPCServer.SimpleXMLRPCDispatcher.__init__(self,False,sys.getdefaultencoding())&#xa;&#xa;else:&#xa;  SimpleXMLRPCServer.SimpleXMLRPCDispatcher.__init__(self)&#xa;&#xa;SocketServer.ThreadingTCPServer.__init__(self,addr,requestHandler)&#xa;self.closed=False&#xa;" id="umU1bTPXOfhl" />
    <sourcecode value=":&#xa;self.closed=True&#xa;" id="oHvTlDjfvXwF" />
    <sourcecode value=":&#xa;inputObjects=[]&#xa;while not inputObjects and not self.closed:&#xa;  inputObjects=select.select([self.socket],[],[],0.2)[0]&#xa;  try:&#xa;    return self.socket.accept()&#xa;&#xa;  except socket.error:&#xa;    raise&#xa;&#xa;&#xa;" id="iSxbyrpxpwFg" />
    <sourcecode value=":&#xa;threading.Thread.__init__(self)&#xa;self.setDaemon(True)&#xa;self.server=server&#xa;self.server.socket.setblocking(0)&#xa;self.closed=False&#xa;" id="8d4DovfkIcTu" />
    <sourcecode value=":&#xa;self.closed=True&#xa;self.server.shutdown()&#xa;" id="X1cnxUPGIL7i" />
    <sourcecode value=":&#xa;while not self.closed:&#xa;  self.server.handle_request()&#xa;&#xa;" id="78hNTm6gxMQL" />
    <sourcecode value=":&#xa;self._ctrl=ctrl&#xa;self._proxyCache=:&#xa;&#xa;&#xa;" id="b814KTx1ylE5" />
    <sourcecode value=":&#xa;if self._ctrl['debug']:&#xa;  self._ctrl.log.debug('XML Request for %s : %s'%(str(request),str(params)))&#xa;&#xa;try:&#xa;  cls,instance,method=request.split(&quot;.&quot;)&#xa;&#xa;except ValueError:&#xa;  if self._ctrl['debug']:&#xa;    self._ctrl.log.debug('ValueError:Invalid Request')&#xa;&#xa;  raise ValueError(&quot;Invalid Request&quot;)&#xa;&#xa;loc=Location(cls=cls,name=instance)&#xa;if loc not in self._proxyCache:&#xa;  try:&#xa;    obj=self._ctrl.getManager().getProxy(loc)&#xa;    self._proxyCache[loc]=obj&#xa;&#xa;  except ObjectNotFoundException:&#xa;    if self._ctrl['debug']:&#xa;      self._ctrl.log.debug('ObjectNotFoundException:Object Not Found')&#xa;&#xa;    raise ValueError(&quot;Object Not Found&quot;)&#xa;&#xa;&#xa;else:&#xa;  try:&#xa;    obj=self._proxyCache[loc]&#xa;    obj._transferThread()&#xa;    if not obj.ping():&#xa;      raise Exception()&#xa;&#xa;&#xa;  except:&#xa;    try:&#xa;      obj=self._ctrl.getManager().getProxy(loc)&#xa;      self._proxyCache[loc]=obj&#xa;&#xa;    except ObjectNotFoundException:&#xa;      if self._ctrl['debug']:&#xa;        self._ctrl.log.debug('ObjectNotFoundException:Object Not Found')&#xa;&#xa;      raise ValueError(&quot;Object Not Found&quot;)&#xa;&#xa;&#xa;&#xa;handle=getattr(obj,method)&#xa;obj._release()&#xa;try:&#xa;  ret=handle(*params)&#xa;&#xa;except AttributeError:&#xa;  if self._ctrl['debug']:&#xa;    self._ctrl.log.debug('AttributeError:Method not found')&#xa;&#xa;  raise ValueError(&quot;Method not found&quot;)&#xa;&#xa;except Exception,e:&#xa;  if self._ctrl['debug']:&#xa;    print''.join(getPyroTraceback(e))&#xa;    self._ctrl.log.debug('Other Error &lt;%s>: %s'%(type(e),str(e)))&#xa;&#xa;  raise&#xa;&#xa;if isinstance(ret,(tuple,list)):&#xa;  newret=[]&#xa;  for arg in ret:&#xa;    if isinstance(arg,(Position,Coord)):&#xa;      newret.append(str(arg))&#xa;&#xa;    elif isinstance(arg,Location):&#xa;      if&quot;hash&quot;in arg.config:&#xa;        newret.append(str(arg.config[&quot;hash&quot;]))&#xa;&#xa;      else:&#xa;        newret.append(str(ret))&#xa;&#xa;&#xa;    elif isinstance(arg,type(None)):&#xa;      newret.append(True)&#xa;&#xa;    else:&#xa;      newret.append(arg)&#xa;&#xa;&#xa;  if self._ctrl['debug']:&#xa;    self._ctrl.log.debug('Returning: %s'%str(newret))&#xa;&#xa;  return newret&#xa;&#xa;else:&#xa;  if isinstance(ret,(Position,Coord)):&#xa;    if self._ctrl['debug']:&#xa;      self._ctrl.log.debug('Returning: %s'%str(ret))&#xa;      return str(ret)&#xa;&#xa;&#xa;  elif isinstance(ret,Location):&#xa;    if&quot;hash&quot;in ret.config:&#xa;      if self._ctrl['debug']:&#xa;        self._ctrl.log.debug('Returning: %s'%str(ret.config[&quot;hash&quot;]))&#xa;&#xa;      return str(ret.config[&quot;hash&quot;])&#xa;&#xa;    else:&#xa;      if self._ctrl['debug']:&#xa;        self._ctrl.log.debug('Returning: %s'%str(ret))&#xa;&#xa;      return str(ret)&#xa;&#xa;&#xa;  elif isinstance(ret,type(None)):&#xa;    if self._ctrl['debug']:&#xa;      self._ctrl.log.debug('Returning: %s'%str(True))&#xa;&#xa;    return True&#xa;&#xa;  else:&#xa;    if self._ctrl['debug']:&#xa;      self._ctrl.log.debug('Returning: %s'%str(ret))&#xa;&#xa;    return ret&#xa;&#xa;&#xa;" id="7Lib9154draL" />
    <sourcecode value=":&#xa;Cmd.__init__(self)&#xa;self.identchars=IDENTCHARS+&quot;/&quot;&#xa;readline.set_completer_delims(readline.get_completer_delims().replace(&quot;/&quot;,&quot;;try:&#xa;  readline.read_history_file(os.path.join(os.path.expanduser(&quot;~/.chimera_console.history&quot;)))&#xa;&#xa;except IOError:&#xa;  pass&#xa;&#xa;self.intro=&quot;Welcome to %s - %s\n&quot;%(_chimera_description_,_chimera_version_)&#xa;self.prompt=&quot;chimera> &quot;&#xa;ConsoleController().setController(controller)&#xa;ConsoleController().setCommander(self)&#xa;self.namespace=Namespace()&#xa;for command in[name for name in globals()if re.compile(&quot;^[A-Za-z]+Command&quot;).match(name)]:&#xa;  self.namespace.append(globals()[command]())&#xa;&#xa;" id="x8iDF1Bq5B5d" />
    <sourcecode value=":&#xa;if from_here:&#xa;  ConsoleController().getManager().shutdown()&#xa;  return&#xa;&#xa;print Hint(&quot;bye :)&quot;)&#xa;readline.write_history_file(os.path.join(os.path.expanduser(&quot;~/.chimera_console.history&quot;)))&#xa;" id="00srUHuZeIiW" />
    <sourcecode value=":&#xa;self.quit(True)&#xa;" id="WiJs7UYAb8Ga" />
    <sourcecode value=":&#xa;return False&#xa;" id="FKjQdWdYFWQC" />
    <sourcecode value=":&#xa;print Error(&quot;invalid command&quot;)&#xa;return False&#xa;" id="bXAo4azLKc7j" />
    <sourcecode value=":&#xa;return[name for name in self.namespace.names()if name.startswith(text)]&#xa;" id="dsGYiqkGmVqm" />
    <sourcecode value=":&#xa;result=cmd.execute(args,self.namespace)&#xa;if type(result)==BooleanType:&#xa;  return result&#xa;&#xa;if type(result)==NoneType:&#xa;  return False&#xa;&#xa;if type(result)in(ListType,TupleType):&#xa;  for msg in result:&#xa;    print str(msg)&#xa;&#xa;  return False&#xa;&#xa;if type(result)==StringType:&#xa;  print result&#xa;  return False&#xa;&#xa;if issubclass(result.__class__,Message):&#xa;  print result&#xa;  return False&#xa;&#xa;" id="c0zeifME4JUz" />
    <sourcecode value=":&#xa;name,args=self.lastcmd.split()[0],args&#xa;for cmd in self.namespace:&#xa;  if cmd.name()==name or name in cmd.aliases():&#xa;    return self._execute(cmd,args)&#xa;&#xa;&#xa;print Error(&quot;Invalid command '%s'&quot;%name)&#xa;" id="vnVa6My2YX03" />
    <sourcecode value=":&#xa;name=line.split()[0].strip()&#xa;for cmd in self.namespace:&#xa;  if not issubclass(cmd.__class__,Command):continue&#xa;  if cmd.name()==name or name in cmd.aliases():&#xa;    return cmd.complete(prefix,line.strip()[len(name):],&#xa;    prefix_start-len(name)-1,prefix_end-len(name)-1)&#xa;&#xa;return[]&#xa;" id="ZSexQf5wmBA5" />
    <sourcecode value=":&#xa;print&quot;getting help for %s&quot;%self.lastcmd.split()[1]&#xa;return False&#xa;" id="Fffh2SOCMvZ7" />
    <sourcecode value=":&#xa;if&quot;do_&quot;in attr:&#xa;  return self._do&#xa;&#xa;elif&quot;complete_&quot;in attr:&#xa;  return self._complete&#xa;&#xa;elif&quot;help_&quot;in attr:&#xa;  return self._help&#xa;&#xa;else:&#xa;  raise AttributeError&#xa;&#xa;" id="5jBRclYnNr3Z" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;self.console=None&#xa;" id="2mAq0E5qqDi4" />
    <sourcecode value=":&#xa;self.console=Commander(self)&#xa;return True&#xa;" id="LAnAOTESfUHd" />
    <sourcecode value=":&#xa;self.console.quit()&#xa;return True&#xa;" id="WZSB3jm50JiW" />
    <sourcecode value=":&#xa;self.console.cmdloop()" id="VemVxV0gOIKU" />
    <sourcecode value=":&#xa;self.controller=None&#xa;self.commander=None&#xa;" id="EPya6sETijAB" />
    <sourcecode value=":&#xa;self.controller=controller&#xa;" id="HkNxRW6udtOa" />
    <sourcecode value=":&#xa;self.commander=commander&#xa;" id="XYMkLZeZCVdD" />
    <sourcecode value=":&#xa;self.commander.quit(True)&#xa;" id="WU2QJIWtZWjS" />
    <sourcecode value=":&#xa;return self.controller.getManager()&#xa;" id="eClDiUeuJUKY" />
    <sourcecode value=":&#xa;if not self.controller:&#xa;  return False&#xa;&#xa;try:&#xa;  obj=self.getManager().getProxy(name)&#xa;&#xa;except ObjectNotFoundException:&#xa;  return False&#xa;&#xa;return obj" id="0SdHwxqNGhVc" />
    <sourcecode value=":&#xa;Message.__init__(self,msg)&#xa;" id="9narkpiTkShs" />
    <sourcecode value=":&#xa;return red(str(self.msg))&#xa;" id="eqyQHWdh96IR" />
    <sourcecode value=":&#xa;Message.__init__(self,msg)&#xa;" id="20UFXoMhOyK8" />
    <sourcecode value=":&#xa;return blue(str(self.msg))&#xa;" id="ulzOErYfTYk4" />
    <sourcecode value=":&#xa;self.msg=msg or&quot;&quot;&#xa;" id="9RdKQKUbSbUp" />
    <sourcecode value=":&#xa;return str(self.msg)&#xa;" id="onUgZC4QgZrN" />
    <sourcecode value=":&#xa;list.__init__(self)&#xa;" id="8sdxRwkKwrbp" />
    <sourcecode value=":&#xa;for cmd in self:&#xa;  if cmd.name()==name or name in cmd.aliases():&#xa;    return True&#xa;&#xa;&#xa;return False&#xa;" id="F3uAsTxpUPSn" />
    <sourcecode value=":&#xa;names=[cmd.name()for cmd in self]&#xa;for cmd in self:&#xa;  names+=cmd.aliases()&#xa;&#xa;return names" id="b2HV6efTgF03" />
    <sourcecode value=":&#xa;Command.__init__(self,&quot;alias&quot;)&#xa;" id="toCErGAGiJ0r" />
    <sourcecode value=":&#xa;if not args:&#xa;  return Error(&quot;invalid syntax&quot;)&#xa;&#xa;name,value=None,None&#xa;try:&#xa;  name,value=args.split()&#xa;&#xa;except ValueError:&#xa;  return Error(&quot;invalid syntax&quot;)&#xa;&#xa;cmd=[cmd for cmd in namespace if cmd.name()==value]&#xa;if not cmd:&#xa;  return Error(&quot;'%s' it's not defined.&quot;%value)&#xa;&#xa;else:&#xa;  cmd=cmd[0]&#xa;&#xa;if name in cmd.aliases():&#xa;  return Error(&quot;'%s' it's already defined. Unset it first ('unalias %s').&quot;%(value,value))&#xa;&#xa;else:&#xa;  cmd.addAlias(name)&#xa;  return False&#xa;&#xa;" id="RVZ8mXztnE79" />
    <sourcecode value=":&#xa;return&quot;long long help for alias&quot;&#xa;" id="66dZkvpwCvuh" />
    <sourcecode value=":&#xa;return&quot;Usage: alias name value&quot;" id="Sq2cmwKtuLLV" />
    <sourcecode value=":&#xa;Command.__init__(self,name)&#xa;self.obj=obj&#xa;self.specials=:&#xa;  &quot;config&quot;:self._configHandler&#xa;&#xa;self._cmds=None&#xa;self._completers=None&#xa;self._exclude=[name for name in dir(ILifeCycle)if not name.startswith(&quot;_&quot;)]&#xa;" id="MGu4S7YORFuu" />
    <sourcecode value=":&#xa;if self._cmds!=None:&#xa;  return self._cmds&#xa;&#xa;self._cmds=[]&#xa;for name in dir(self.obj):&#xa;  if name.startswith(&quot;_&quot;):continue&#xa;  attr=getattr(self.obj,name)&#xa;  if not callable(attr):continue&#xa;  self._cmds.append(name)&#xa;&#xa;for ex in self._exclude:&#xa;  if ex in self._cmds:&#xa;    self._cmds.remove(ex)&#xa;&#xa;&#xa;for inc in self.specials.keys():&#xa;  self._cmds.append(inc)&#xa;&#xa;return self._cmds&#xa;" id="N1ygWAO7tUAo" />
    <sourcecode value=":&#xa;if not line.strip():&#xa;  return self._getCommands()&#xa;&#xa;else:&#xa;  if prefix_start==0:&#xa;    return[cmd for cmd in self._getCommands()if cmd.startswith(prefix)]&#xa;&#xa;  subcommand_name=line.strip().split()[0]&#xa;  if subcommand_name==&quot;config&quot;:&#xa;    return self._configCompleter(prefix,line.strip()[len(subcommand_name):],&#xa;    prefix_start-len(subcommand_name)-1,prefix_end-len(subcommand_name)-1)&#xa;&#xa;return[]&#xa;" id="paUg4dSXgvi6" />
    <sourcecode value=":&#xa;if not args.strip():&#xa;  return str(self.name())&#xa;&#xa;method=args.split()[0]&#xa;if method in self.specials:&#xa;  return self.specials[method](args)&#xa;&#xa;try:&#xa;  args=args[len(method):].strip()&#xa;  evaluated=()&#xa;  if args:&#xa;    evaluated=eval(&quot;(%s,)&quot;%args)&#xa;&#xa;  return self._methodHandler(method,evaluated)&#xa;&#xa;except Exception,e:&#xa;  print e&#xa;  return Error(&quot;Invalid arguments '%s' for %s&quot;%(args,method))&#xa;&#xa;" id="q5c6vuY7cxEG" />
    <sourcecode value=":&#xa;args,varargs,kwargs,defaults=inspect.getargspec(method)&#xa;args=args[1:]&#xa;non_default=len(args)-len(defaults)&#xa;sign=&quot;&quot;&#xa;for i,default in zip(range(len(defaults)),defaults):&#xa;  args[len(args)-i-1]=&quot;%s=%s&quot;%(args[len(args)-i-1],default)&#xa;&#xa;for arg in args:&#xa;  sign+=str(arg)+&quot; &quot;&#xa;&#xa;sign=sign[:-1]&#xa;sign=&quot;%s %s&quot;%(method.__name__,sign)&#xa;return(len(args),non_default,sign)&#xa;" id="qFfVJC3HHipK" />
    <sourcecode value=":&#xa;func=None&#xa;try:&#xa;  func=getattr(self.obj,method)&#xa;&#xa;except AttributeError,e:&#xa;  return Error(&quot;Invalid operation on %s&quot;%self.name())&#xa;&#xa;arg_count,non_default_args,signature=self._getMethodSignature(func)&#xa;if len(args)&lt;non_default_args:&#xa;  return[Error(&quot;%s takes %d argument(s), %d given.&quot;%(method,non_default_args,len(args))),&#xa;  Hint(&quot;Usage: %s&quot;%signature)]&#xa;elif len(args)>arg_count:&#xa;  return[Error(&quot;%s takes at most %d argument(s), %d given.&quot;%(method,non_default_args,len(args))),&#xa;  Hint(&quot;Usage: %s&quot;%signature)]&#xa;try:&#xa;  return func(*args)&#xa;&#xa;except Exception,e:&#xa;  print e&#xa;  return Error(&quot;Error in %s %s call&quot;%(self.name(),method))&#xa;&#xa;" id="yQwvCgw6XeZd" />
    <sourcecode value=":&#xa;if not hasattr(self.obj,'config'):&#xa;  return[]&#xa;&#xa;return[name for name in self.obj.config.keys()if name.startswith(prefix)]&#xa;" id="CMFO3WlPhEJU" />
    <sourcecode value=":&#xa;if not hasattr(self.obj,'config'):&#xa;  return Error(&quot;Object doesn't support configuration&quot;)&#xa;&#xa;args=args[len(&quot;config&quot;):].strip()&#xa;if not args:&#xa;  return Config(self.obj.config)&#xa;&#xa;def getConfig(key):&#xa;  return self.obj.config[key]&#xa;&#xa;def setConfig(key,value):&#xa;  self.obj.config[key]=value&#xa;  return None&#xa;&#xa;tasks=[]&#xa;errors=[]&#xa;results=:&#xa;&#xa;&#xa;for item in args.split(&quot;,&quot;):&#xa;  if&quot;=&quot;in item:&#xa;    try:&#xa;      key,value=item.split(&quot;=&quot;)&#xa;      key=key.strip()&#xa;      value=value.strip()&#xa;      try:&#xa;        value=eval(value)&#xa;&#xa;      except Exception:&#xa;        errors.append(&quot;invalid configuration value&quot;)&#xa;&#xa;      tasks.append((setConfig,(key,value)))&#xa;&#xa;    except ValueError:&#xa;      errors.append(&quot;invalid syntax&quot;)&#xa;&#xa;&#xa;  else:&#xa;    key=item.strip()&#xa;    if not key:&#xa;      continue&#xa;&#xa;    tasks.append((getConfig,(key,)))&#xa;&#xa;&#xa;for task in tasks:&#xa;  handler,name,args=task[0],task[1][0],task[1]&#xa;  try:&#xa;    result=handler(*args)&#xa;    if result!=None:&#xa;      results[name]=result&#xa;&#xa;&#xa;  except KeyError:&#xa;    errors.append(&quot;'%s' doesn't exists&quot;%name)&#xa;&#xa;  except OptionConversionException:&#xa;    errors.append(&quot;invalid configuration value to '%s'&quot;%name)&#xa;&#xa;&#xa;errors_list=[Error(&quot;%s: %s&quot;%(self.name(),err))for err in errors]&#xa;results_list=[Config(results)]&#xa;return errors_list+results_list" id="p1RGV2iTPZ6z" />
    <sourcecode value=":&#xa;Command.__init__(self,&quot;quit&quot;,[])&#xa;" id="7SfUEplcDepZ" />
    <sourcecode value=":&#xa;return ConsoleController().quit()" id="QNfd0SBrvCwe" />
    <sourcecode value=":&#xa;HighLevelCommand.__init__(self,&quot;site&quot;,[])&#xa;self._kind=[&quot;instrument&quot;,&quot;controller&quot;,&quot;driver&quot;]&#xa;self._kinds=[&quot;instruments&quot;,&quot;controllers&quot;,&quot;drivers&quot;]&#xa;" id="eZZsJ5VhBMe7" />
    <sourcecode value=":&#xa;objs=&quot;&quot;&#xa;for o in ConsoleController().getManager().getResources():&#xa;  objs+=str(o)+'\n'&#xa;&#xa;objs=objs[:-1]&#xa;return[Message(&quot;=== Objects ===&quot;),&#xa;Message(objs)]" id="IYTUv5b1jSRW" />
    <sourcecode value=":&#xa;if not args or len(args)&lt;2:&#xa;  return Error(&quot;Invalid syntax&quot;)&#xa;&#xa;kind,location=args&#xa;if location in namespace:&#xa;  return Error(&quot;%s already on the system.&quot;%location)&#xa;&#xa;ret=False&#xa;if kind==&quot;instrument&quot;:&#xa;  ret=ConsoleController().getManager().addInstrument(location)&#xa;&#xa;elif kind==&quot;controller&quot;:&#xa;  ret=ConsoleController().getManager().addController(location)&#xa;&#xa;elif kind==&quot;driver&quot;:&#xa;  ret=ConsoleController().getManager().addDriver(location)&#xa;&#xa;else:&#xa;  return Error(&quot;Invalid object type '%s'&quot;%kind)&#xa;&#xa;if not ret:&#xa;  return Error(&quot;Couldn't add %s '%s'&quot;%(kind,location))&#xa;&#xa;obj=ConsoleController().getObject(location)&#xa;namespace.append(ObjectCommand(location,obj))&#xa;return False&#xa;" id="OGdvidOCCqPF" />
    <sourcecode value=":&#xa;&quot;[instrument|controller|driver] /Location/location&quot;&#xa;if prefix_start==0:&#xa;  if not prefix:&#xa;    return self._kind&#xa;&#xa;  else:&#xa;    return[kind for kind in self._kind if kind.startswith(prefix)]&#xa;&#xa;&#xa;return[]" id="pqdSeyl3gEeD" />
    <sourcecode value=":&#xa;Command.__init__(self,name,aliases)&#xa;self._cmds=None&#xa;self._completers=None&#xa;" id="6xfkO2is3x7h" />
    <sourcecode value=":&#xa;if self._cmds:&#xa;  return self._cmds&#xa;&#xa;self._cmds=:&#xa;&#xa;&#xa;for name in dir(self):&#xa;  attr=getattr(self,name)&#xa;  if callable(attr)and hasattr(attr,&quot;__command__&quot;):&#xa;    self._cmds[name]=attr&#xa;&#xa;&#xa;return self._cmds&#xa;" id="0WW6hBXuZr8r" />
    <sourcecode value=":&#xa;if self._completers:&#xa;  return self._completers&#xa;&#xa;self._completers=:&#xa;&#xa;&#xa;for cmd in self._getCommands():&#xa;  completer_name='complete_%s'%cmd&#xa;  if hasattr(self,completer_name):&#xa;    attr=getattr(self,completer_name)&#xa;    if callable(attr):&#xa;      self._completers[cmd]=getattr(self,completer_name)&#xa;&#xa;&#xa;&#xa;return self._completers&#xa;" id="7s9ehGUvK8EQ" />
    <sourcecode value=":&#xa;if not line.strip():&#xa;  return self._getCommands().keys()&#xa;&#xa;else:&#xa;  if prefix_start==0:&#xa;    return[cmd for cmd in self._getCommands()if cmd.startswith(prefix)]&#xa;&#xa;  else:&#xa;    subcommand_name=line.strip().split()[0]&#xa;    if subcommand_name in self._getCompleters():&#xa;      return self._getCompleters()[subcommand_name](prefix,line.strip()[len(subcommand_name):],&#xa;      prefix_start-len(subcommand_name)-1,prefix_end-len(subcommand_name)-1)&#xa;&#xa;&#xa;return[]&#xa;" id="Qv1k1GAtQqRu" />
    <sourcecode value=":&#xa;if not args:&#xa;  return False&#xa;&#xa;try:&#xa;  splitted=args.split()&#xa;  if len(splitted)>1:&#xa;    cmd,args=splitted[0],splitted[1:]&#xa;&#xa;  else:&#xa;    cmd,args=splitted[0],[]&#xa;&#xa;  if cmd in self._getCommands():&#xa;    handler=getattr(self,'%s'%cmd)&#xa;    return handler(args,namespace)&#xa;&#xa;  else:&#xa;    return Error(&quot;Invalid option '%s' to '%s'&quot;%(cmd,self.name()))&#xa;&#xa;&#xa;except ValueError:&#xa;  return Error(&quot;Invalid option '%s' to '%s'&quot;%(cmd,self.name()))&#xa;&#xa;return Error(&quot;Invalid option '%s' to '%s'&quot;%(cmd,self.name()))" id="Qxp8iTdx5Ldj" />
    <sourcecode value=":&#xa;Command.__init__(self,&quot;unalias&quot;)&#xa;" id="mYFUraHDZLBq" />
    <sourcecode value=":&#xa;if not args:&#xa;  return Error(&quot;invalid syntax&quot;)&#xa;&#xa;names=None&#xa;results=[]&#xa;try:&#xa;  names=args.strip().split()&#xa;&#xa;except ValueError:&#xa;  return Error(&quot;invalid syntax&quot;)&#xa;&#xa;for name in names:&#xa;  cmd=[cmd for cmd in namespace if name in cmd.aliases()]&#xa;  if not cmd:&#xa;    results.append(Error(&quot;'%s' it's not defined.&quot;%name))&#xa;    continue&#xa;&#xa;  cmd=cmd[0]&#xa;  cmd.delAlias(name)&#xa;&#xa;return results&#xa;" id="6EGfXSTD7zkP" />
    <sourcecode value=":&#xa;return&quot;long long help for unalias&quot;&#xa;" id="L6DGJHjxoOgK" />
    <sourcecode value=":&#xa;return&quot;Usage: unalias name&quot;" id="2L6qhk8UYL2O" />
    <sourcecode value=":&#xa;self._name=name or&quot;&quot;&#xa;self._aliases=aliases or[]&#xa;" id="2UKd7vcL2x6P" />
    <sourcecode value=":&#xa;return self._name&#xa;" id="zsjHuzkTU8Zj" />
    <sourcecode value=":&#xa;return self._aliases&#xa;" id="BqIdyqKp4JrF" />
    <sourcecode value=":&#xa;if alias not in self._aliases:&#xa;  return self._aliases.append(alias)&#xa;&#xa;return False&#xa;" id="zUt3miGvwaO6" />
    <sourcecode value=":&#xa;if alias not in self._aliases:&#xa;  return False&#xa;&#xa;return self._aliases.remove(alias)&#xa;" id="dHFaCtsNLkgx" />
    <sourcecode value=":&#xa;return False&#xa;" id="wyBxYDPgB8t5" />
    <sourcecode value=":&#xa;return[]&#xa;" id="XEtahpEL8WBX" />
    <sourcecode value=":&#xa;return&quot;&quot;&#xa;" id="SaCAq7BM50Ly" />
    <sourcecode value=":&#xa;return&quot;&quot;&#xa;" id="zex2eGyuhX4h" />
    <sourcecode value=":&#xa;default=:&#xa;  'exptime':1.0,&#xa;  'frames':1,'interval':0.0,'shutter':Shutter.OPEN,'binning':None,'window':None,'bitpix':Bitpix.uint16,'filename':'$DATE-$TIME','type':'object'&#xa;self.auto_collect_metadata=True&#xa;self.metadataPre=[]&#xa;self.metadataPost=[]&#xa;self.headers=[]&#xa;self.update(default)&#xa;not_valid=[k for k in kwargs.keys()if k not in default.keys()]&#xa;if any(not_valid):&#xa;  if len(not_valid)>1:&#xa;    msg=&quot;Invalid keywords: &quot;&#xa;    for k in not_valid:&#xa;      msg+=&quot;'%s', &quot;%str(k)&#xa;&#xa;    msg=msg[:-2]&#xa;&#xa;  else:&#xa;    msg=&quot;Invalid keyword '%s'&quot;%str(not_valid[0])&#xa;&#xa;  raise TypeError(msg)&#xa;&#xa;self.update(kwargs)&#xa;self._accum_from=[]&#xa;if self['exptime']&lt;0.0:&#xa;  raise ChimeraValueError('Invalid exposure length (&lt;0 seconds).')&#xa;&#xa;if self['exptime']>12*60*60:&#xa;  raise ChimeraValueError('Invalid exposure. Must be lower them 12 hours.')&#xa;&#xa;if self['frames']&lt;1:&#xa;  raise ChimeraValueError('Invalid number of frames (&lt;1 frame).')&#xa;&#xa;if self['interval']&lt;0.0:&#xa;  raise ChimeraValueError('Invalid interval between exposures (&lt;0 seconds)')&#xa;&#xa;if str(self['shutter'])not in Shutter:&#xa;  raise ChimeraValueError('Invalid shutter value: '+str(self['shutter']))&#xa;&#xa;" id="pTH7CEFpoCJK" />
    <sourcecode value=":&#xa;return('exptime: %f, frames: %i, shutter: %s, type: %s'%(self['exptime'],&#xa;self['frames'],self['shutter'],self['type']))" id="f3grihQzV8pO" />
    <sourcecode value=":&#xa;auto=[]&#xa;if self.auto_collect_metadata:&#xa;  for cls in('Site','Camera','Dome','FilterWheel','Focuser','Telescope'):&#xa;    classes=manager.getResourcesByClass(cls)&#xa;    if len(classes)==1:&#xa;      auto.append(str(classes[0]))&#xa;&#xa;&#xa;&#xa;self._getHeaders(manager,auto+self.metadataPre)&#xa;" id="OYlseYG1jHAT" />
    <sourcecode value=":&#xa;self._getHeaders(manager,self.metadataPost)&#xa;" id="ZFAsF1nFs0KQ" />
    <sourcecode value=":&#xa;for proxyurl in proxies:&#xa;  try:&#xa;    proxy=manager.getProxy(proxyurl)&#xa;    proxyLoc=str(proxy.getLocation())&#xa;    if proxyLoc not in self._accum_from:&#xa;      self._accum_from.append(proxyLoc)&#xa;      self.headers+=proxy.getMetadata(self)&#xa;&#xa;&#xa;  except Exception,e:&#xa;    log.warning('Unable to get metadata from %s'%(proxyurl))&#xa;    print''.join(Pyro.util.getPyroTraceback(e))" id="0gq5obTbgE76" />
    <sourcecode value=":&#xa;threading.Thread.__init__(self)&#xa;self.setDaemon(True)&#xa;self.setName(&quot;Image Server HTTPD&quot;)&#xa;self.ctrl=ctrl&#xa;" id="fuFVJjUYDh1D" />
    <sourcecode value=":&#xa;cherrypy.log.screen=False&#xa;for handler in logging.getLogger(&quot;chimera&quot;).handlers:&#xa;  cherrypy.log.error_log.addHandler(handler)&#xa;&#xa;cherrypy.quickstart(self,&quot;chimera&quot;,&#xa;config=:&#xa;  &quot;chimera&quot;::&#xa;    &quot;server.socket_port&quot;:self.ctrl['http_port'],&quot;server.socket_host&quot;:self.ctrl['http_host'],&quot;tools.encode.on&quot;:True,&quot;tools.encode.encoding&quot;:&quot;iso-8859-1&quot;,&quot;tools.decode.on&quot;:True,&quot;tools.trailing_slash.on&quot;:True,&quot;engine.autoreload_on&quot;:False&#xa;&#xa;)" id="AXxHhabVww4K" />
    <sourcecode value=":&#xa;cherrypy.engine.stop()&#xa;self.join()&#xa;" id="ajKWdMo1n9gq" />
    <sourcecode value=":&#xa;return&quot;All your images belong to us.&quot;&#xa;" id="WJaKTG8TEJId" />
    <sourcecode value=":&#xa;if args:&#xa;  img=self.ctrl.getImageByID(args[0])&#xa;  if not img:&#xa;    return&quot;Couldn't find the image.&quot;&#xa;&#xa;  return serve_file(img.filename(),&quot;image/fits&quot;,&quot;attachment&quot;)&#xa;&#xa;else:&#xa;  return&quot;What are you looking for?&quot;&#xa;&#xa;" id="QSWxjRwCDva6" />
    <sourcecode value=":&#xa;toReturn='&lt;table>&lt;tr>&lt;th>Image ID&lt;/th>&lt;th>Path&lt;/th>&lt;/tr>'&#xa;keys=self.ctrl.imagesByPath.keys()&#xa;keys.sort()&#xa;for key in keys:&#xa;  image=self.ctrl.imagesByPath[key]&#xa;  id=image.GUID()&#xa;  path=image.filename()&#xa;  toReturn+=('&lt;tr>&lt;td>&lt;a href=&quot;/image/%s&quot;>%s&lt;/a>&lt;/td>&lt;td>&lt;a href=&quot;/image/%s&quot;>%s&lt;/a>&lt;/td>&lt;/tr>'%&#xa;  (id,id,id,path))&#xa;return toReturn" id="W1LbG9mSZONJ" />
    <sourcecode value=":&#xa;&quot;@param caliblocation: location of individual calibration images.;@type caliblocation:str&#xa;@param writeto:directory to which master calibrations are written.default is'Masters/'created within the calibdirectory&#xa;@type writeto:str&#xa;self.calimages=caliblocation&#xa;self.writedir=caliblocation+writeto&#xa;" id="aldfs7DQDgZE" />
    <sourcecode value=":&#xa;&quot;Wrapper for iraf routine zerocombine.  Takes .fits with header imagetyp=zero and makes a master zero.&quot;&quot;&quot;&#xa;reduction_tools.rmFile(self.writedir+'Zero*')&#xa;iraf.noao.imred.ccdred.zerocombine(input=self.calimages+'*',output=self.writedir+'Zero',process='no',delete='no',clobber='no')&#xa;" id="nCNbEmGNOKhe" />
    <sourcecode value=":&#xa;&quot;Wrapper for iraf routine darkcombine.  Takes .fits with headers imagetyp=dark and makes a master dark.&quot;&quot;&quot;&#xa;reduction_tools.rmFile(self.writedir+'Dark*')&#xa;iraf.noao.imred.ccdred.darkcombine(input=self.calimages+'*',output=self.writedir+'Dark',process='no',delete='no',clobber='no')&#xa;" id="waGIuvwpAO1g" />
    <sourcecode value=":&#xa;&quot;Wrapper for iraf routine flatcombine.  Takes .fits with headers imagetyp=flat and makes a master flat.&quot;&quot;&quot;&#xa;reduction_tools.rmFile(self.writedir+'Flat*')&#xa;iraf.noao.imred.ccdred.flatcombine(input=self.calimages+'*',output=self.writedir+'Flat',process='no',delete='no',clobber='no',subset='yes')" id="Q6maUnEPxgdz" />
    <sourcecode value=":&#xa;threading.Thread.__init__(self)&#xa;self.scheduler=scheduler&#xa;self.controller=controller&#xa;self.setDaemon(False)&#xa;self.state(State.OFF)&#xa;" id="wMvD8TkonA0n" />
    <sourcecode value=":&#xa;self.__stateLock.acquire()&#xa;try:&#xa;  if not state:return self.__state&#xa;  log.debug(&quot;Chaning state, from %s to %s.&quot;%(self.__state,state))&#xa;  self.__state=state&#xa;  self.wakeup()&#xa;&#xa;finally:&#xa;  self.__stateLock.release()&#xa;&#xa;" id="9ZPgmwKTDnuf" />
    <sourcecode value=":&#xa;log.info(&quot;Starting scheduler machine&quot;)&#xa;self.state(State.DIRTY)&#xa;while self.state()!=State.SHUTDOWN:&#xa;  if self.state()==State.OFF:&#xa;    log.debug(&quot;[off] will just sleep..&quot;)&#xa;    pass&#xa;&#xa;  if self.state()==State.DIRTY:&#xa;    log.debug(&quot;[dirty] database changed, rescheduling...&quot;)&#xa;    self.scheduler.reschedule(self)&#xa;    self.state(State.IDLE)&#xa;    continue&#xa;&#xa;  if self.state()==State.IDLE:&#xa;    log.debug(&quot;[idle] looking for something to do...&quot;)&#xa;    exposure=self.scheduler.next()&#xa;    if exposure:&#xa;      log.debug(&quot;[idle] there is something to do, processing...&quot;)&#xa;      self.state(State.BUSY)&#xa;      self._process(exposure)&#xa;      continue&#xa;&#xa;    log.debug(&quot;[idle] there is nothing to do, sleeping...&quot;)&#xa;&#xa;  elif self.state()==State.BUSY:&#xa;    log.debug(&quot;[busy] waiting tasks to finish..&quot;)&#xa;    pass&#xa;&#xa;  elif self.state()==State.SHUTDOWN:&#xa;    log.debug(&quot;[shutdown] should die soon.&quot;)&#xa;    break&#xa;&#xa;  self.sleep()&#xa;&#xa;log.debug('[shutdown] thread ending...')&#xa;" id="37yi4RaYOHcH" />
    <sourcecode value=":&#xa;self.__wakeUpCall.acquire()&#xa;log.debug(&quot;Sleeping&quot;)&#xa;self.__wakeUpCall.wait()&#xa;self.__wakeUpCall.release()&#xa;" id="VhuryW89GNrS" />
    <sourcecode value=":&#xa;self.__wakeUpCall.acquire()&#xa;log.debug(&quot;Waking up&quot;)&#xa;self.__wakeUpCall.notifyAll()&#xa;self.__wakeUpCall.release()&#xa;" id="wJnAhedzRlDr" />
    <sourcecode value=":&#xa;log.debug(&quot;Starting to process exposure: &quot;+exp.__str__())&#xa;def process():&#xa;  try:&#xa;    self.controller.process(exp)&#xa;    log.debug(&quot;Done with exposure: &quot;+exp.__str__())&#xa;    self.scheduler.done(exp)&#xa;&#xa;  finally:&#xa;    self.state(State.IDLE)&#xa;&#xa;&#xa;t=threading.Thread(target=process)&#xa;t.setDaemon(False)&#xa;t.start()" id="KUEjEPaRY8eJ" />
    <sourcecode value=":&#xa;return True&#xa;" id="1evzKplQkhb4" />
    <sourcecode value=":&#xa;self.rq=None&#xa;self.machine=None&#xa;" id="cbgDxCBMy1ZA" />
    <sourcecode value=":&#xa;self.machine=machine&#xa;self.rq=Queue(-1)&#xa;exps=Exposure.query.filter_by(finished=False).all()&#xa;log.debug(&quot;rescheduling, found %d exposures.&quot;%len(exps))&#xa;for exp in exps:&#xa;  self.rq.put(exp)&#xa;&#xa;machine.wakeup()&#xa;" id="XzsV0QfER2wf" />
    <sourcecode value=":&#xa;if not self.rq.empty():&#xa;  return self.rq.get()&#xa;&#xa;" id="oNk5YgLiKGOI" />
    <sourcecode value=":&#xa;task.finished=True&#xa;task.flush()&#xa;self.rq.task_done()&#xa;self.machine.wakeup()" id="bqHv4dD0Ezbq" />
    <sourcecode value=":&#xa;Re-schedule using current database state.This will setup a&#xa;timer to wakeup the Machine to process the next runnable task.&#xa;Reschedule runs only phase-one scheduling,&#xa;date/observability.So,may not be possible to process the new&#xa;scheduled items because of realtime constraints.&#xa;" id="EwY19RpbjGTt" />
    <sourcecode value=":&#xa;Called to get next runnable task after run phase-two&#xa;scheduling on the current runqueue.It may use'now'&#xa;information to see if we are laggy according to our last&#xa;reschedule and cut non-runnable items or reschedule again.&#xa;" id="Z4zYP2L0yliV" />
    <sourcecode value=":&#xa;Called to change runnable state of'task'.When called,will&#xa;remove'task'from the runqueue(task can be either completed&#xa;or just ignored with some error)" id="2J602oTsegfE" />
    <sourcecode value=":&#xa;return'MoonDistance'&#xa;" id="8EFDdZGx20Yz" />
    <sourcecode value=":&#xa;return'Constraint based upon the distance from the moon'&#xa;" id="hSujSQhb1zZt" />
    <sourcecode value=":&#xa;if exposure==None:&#xa;  return self.DONTCARE" id="hYegVBX0kUul" />
    <sourcecode value=":&#xa;self.manager=Manager(port=8000)&#xa;self.manager.addClass(Site,&quot;lna&quot;,:&#xa;  &quot;name&quot;:&quot;LNA&quot;,&#xa;  &quot;latitude&quot;:&quot;-22 32 03&quot;,&quot;longitude&quot;:&quot;-45 34 57&quot;,&quot;altitude&quot;:&quot;1896&quot;,&quot;utc_offset&quot;:&quot;-3&quot;&#xa;)self.manager.addClass(FakeTelescope,&quot;fake&quot;,:&#xa;  &quot;skip_init&quot;:False&#xa;)&#xa;self.manager.addClass(Telescope,&quot;fake&quot;,:&#xa;  &quot;driver&quot;:&quot;/FakeTelescope/0&quot;&#xa;)&#xa;self.manager.addClass(FakeCamera,&quot;fake&quot;)&#xa;self.manager.addClass(Camera,&quot;cam&quot;,:&#xa;  &quot;driver&quot;:&quot;/FakeCamera/0&quot;&#xa;)&#xa;self.manager.addClass(FakeDome,&quot;fake&quot;)&#xa;self.manager.addClass(Dome,&quot;dome&quot;,:&#xa;  &quot;driver&quot;:&quot;/FakeDome/0&quot;,&#xa;  &quot;mode&quot;:&quot;Track&quot;,&quot;telescope&quot;:&quot;/Telescope/0&quot;&#xa;)@callback(self.manager)&#xa;def exposeBeginClbk(exp_time):&#xa;  print time.time(),&quot;[cam] Expose begin for %.3f s.&quot;%exp_time&#xa;&#xa;@callback(self.manager)&#xa;def exposeCompleteClbk():&#xa;  print time.time(),&quot;[cam] Expose complete.&quot;&#xa;&#xa;@callback(self.manager)&#xa;def readoutBeginClbk(frame):&#xa;  print time.time(),&quot;[cam] Readout begin for %s.&quot;%frame&#xa;&#xa;@callback(self.manager)&#xa;def readoutCompleteClbk(frame):&#xa;  print time.time(),&quot;[cam] Readout complete for %s.&quot;%frame&#xa;&#xa;@callback(self.manager)&#xa;def camAbortCompleteClbk():&#xa;  print time.time(),&quot;[cam] Abort complete.&quot;&#xa;&#xa;cam=self.manager.getProxy(Camera)&#xa;cam.exposeBegin+=exposeBeginClbk&#xa;cam.exposeComplete+=exposeCompleteClbk&#xa;cam.readoutBegin+=readoutBeginClbk&#xa;cam.readoutComplete+=readoutCompleteClbk&#xa;cam.abortComplete+=camAbortCompleteClbk&#xa;@callback(self.manager)&#xa;def slewBeginClbk(target):&#xa;  print time.time(),&quot;[tel] Slew begin. target=%s&quot;%str(target)&#xa;&#xa;@callback(self.manager)&#xa;def slewCompleteClbk(position):&#xa;  print time.time(),&quot;[tel] Slew complete. position=%s&quot;%str(position)&#xa;&#xa;@callback(self.manager)&#xa;def telAbortCompleteClbk(position):&#xa;  print time.time(),&quot;[tel] Abort complete. position=%s&quot;%str(position)&#xa;&#xa;self.tel=self.manager.getProxy(Telescope)&#xa;self.tel.slewBegin+=slewBeginClbk&#xa;self.tel.slewComplete+=slewCompleteClbk&#xa;self.tel.abortComplete+=telAbortCompleteClbk&#xa;@callback(self.manager)&#xa;def domeSlewBeginClbk(target):&#xa;  print&#xa;  print time.time(),&quot;[dome] Slew begin. target=%s&quot;%str(target)&#xa;&#xa;@callback(self.manager)&#xa;def domeSlewCompleteClbk(position):&#xa;  print time.time(),&quot;[dome] Slew complete. position=%s&quot;%str(position)&#xa;&#xa;@callback(self.manager)&#xa;def domeAbortCompleteClbk(position):&#xa;  print time.time(),&quot;[dome] Abort slew at position=%s&quot;%str(position)&#xa;&#xa;dome=self.manager.getProxy(Dome)&#xa;dome.slewBegin+=domeSlewBeginClbk&#xa;dome.slewComplete+=domeSlewCompleteClbk&#xa;dome.abortComplete+=domeAbortCompleteClbk&#xa;" id="6m71Pl6GqlJ1" />
    <sourcecode value=":&#xa;self.manager.shutdown()&#xa;del self.manager&#xa;" id="zZlnI3pVr7Jk" />
    <sourcecode value=":&#xa;tel=self.manager.getProxy(Telescope)&#xa;cam=self.manager.getProxy(Camera)&#xa;dome=self.manager.getProxy(Dome)&#xa;site=self.manager.getProxy(Site)&#xa;" id="eItVQADJ5pSC" />
    <sourcecode value=":&#xa;self.manager=Manager(port=8000)&#xa;self.manager.addClass(SBIG,&quot;sbig&quot;,:&#xa;  &quot;device&quot;:&quot;USB&quot;&#xa;)&#xa;self.manager.addClass(Camera,&quot;cam&quot;,:&#xa;  &quot;driver&quot;:&quot;/SBIG/0&quot;&#xa;)&#xa;self.manager.addClass(Site,&quot;lna&quot;,:&#xa;  &quot;name&quot;:&quot;UFSC&quot;,&#xa;  &quot;latitude&quot;:&quot;-27 36 13 &quot;,&quot;longitude&quot;:&quot;-48 31 20&quot;,&quot;altitude&quot;:&quot;20&quot;,&quot;utc_offset&quot;:&quot;-3&quot;&#xa;)self.manager.addClass(Meade,&quot;meade&quot;,:&#xa;  &quot;device&quot;:&quot;/dev/ttyS6&quot;&#xa;)&#xa;self.manager.addClass(Telescope,&quot;meade&quot;,:&#xa;  &quot;driver&quot;:&quot;/Meade/meade&quot;&#xa;)&#xa;self.manager.addClass(PointVerify,&quot;Point&quot;)&#xa;" id="Dv2iQfFotVAZ" />
    <sourcecode value=":&#xa;self.manager.shutdown()&#xa;del self.manager&#xa;" id="cSvVy44woHJ5" />
    <sourcecode value=":&#xa;autofocus=self.manager.getProxy(Autofocus)&#xa;best_focus=autofocus.focus(debug=&quot;/home/henrique/ph/basic-run&quot;)" id="SzjEE2KF4ADo" />
    <sourcecode value=":&#xa;point=self.manager.getProxy(PointVerify)" id="34JHI8932wJO" />
    <sourcecode value=":&#xa;MethodWrapperDispatcher.__init__(self,cls,instance,func)&#xa;" id="ttC6klyqtEkd" />
    <sourcecode value=":&#xa;return self.func(*args,**kwargs)" id="9Y8b3Ak4BGVx" />
    <sourcecode value=":&#xa;self._cache=:&#xa;&#xa;&#xa;" id="Gakj3ha49cAU" />
    <sourcecode value=":&#xa;return self._lookupClass(clsname,path)&#xa;" id="Ra2aDD3wWTRI" />
    <sourcecode value=":&#xa;pass&#xa;" id="m9iBfYmMSKZp" />
    <sourcecode value=":&#xa;Based on this recipe&#xa;http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/52241&#xa;by Jorgen Hermann&#xa;if clsname.lower()in self._cache:&#xa;  return self._cache[clsname.lower()]&#xa;&#xa;if not isinstance(path,(list,tuple)):&#xa;  path=[path]&#xa;&#xa;sys.path=path+sys.path&#xa;try:&#xa;  module=__import__(clsname.lower(),globals(),locals(),[clsname])&#xa;&#xa;except ImportError:&#xa;  tb_size=len(traceback.extract_tb(sys.exc_info()[2]))&#xa;  if tb_size==1:&#xa;    raise ClassLoaderException(&quot;Couldn't found module %s (%s).&quot;%(clsname,path))&#xa;&#xa;  else:&#xa;    raise ClassLoaderException(&quot;Module %s found but couldn't be loaded.&quot;%clsname)&#xa;&#xa;&#xa;except:&#xa;  raise ClassLoaderException(&quot;Module %s found but couldn't be loaded.&quot;%clsname)&#xa;&#xa;[sys.path.remove(p)for p in path]&#xa;cls=None&#xa;for k,v in vars(module).items():&#xa;  if k.lower()==clsname.lower():&#xa;    cls=v&#xa;    break&#xa;&#xa;&#xa;if not cls:&#xa;  raise ClassLoaderException(&quot;Module found but couldn't fount class on module '%s' (%s).&quot;%&#xa;  (clsname.lower(),module.__file__))&#xa;self._cache[clsname.lower()]=cls&#xa;return self._cache[clsname.lower()]" id="mKBFscKv7aWZ" />
    <sourcecode value=":&#xa;if not value or not os.path.isdir(os.path.abspath(value)):&#xa;  raise optparse.OptionValueError(&quot;Couldn't find %s include path.&quot;%value)&#xa;&#xa;l=getattr(parser.values,&quot;%s&quot;%option.dest)&#xa;l.append(value)&#xa;" id="WCGozFuB7iHn" />
    <sourcecode value=":&#xa;try:&#xa;  l=Location(value)&#xa;&#xa;except InvalidLocationException:&#xa;  raise optparse.OptionValueError(&quot;%s isnt't a valid location.&quot;%value)&#xa;&#xa;setattr(parser.values,&quot;%s&quot;%option.dest,value)&#xa;" id="GRjUwflx9D9f" />
    <sourcecode value=":&#xa;if defaults:&#xa;  for(attr,val)in defaults.items():&#xa;    setattr(self,attr,val)&#xa;&#xa;&#xa;object.__setattr__(self,'__order__',[])&#xa;" id="JnYZTOY8NPei" />
    <sourcecode value=":&#xa;object.__setattr__(self,attr,value)&#xa;if hasattr(self,'__order__'):&#xa;  order=object.__getattribute__(self,'__order__')&#xa;  order.append(attr)&#xa;&#xa;" id="QODcYBWsqmEk" />
    <sourcecode value=":&#xa;Checker.__init__(self)&#xa;" id="zKcZZRBj3GbN" />
    <sourcecode value=":&#xa;return value&#xa;" id="hWpkmP6ISwiU" />
    <sourcecode value=":&#xa;Checker.__init__(self)&#xa;" id="Wc3izup9f6QF" />
    <sourcecode value=":&#xa;if type(value)in(IntType,LongType,FloatType,BooleanType):&#xa;  return int(value)&#xa;&#xa;if type(value)==StringType:&#xa;  try:&#xa;    tmp=float(value)&#xa;    tmp=int(tmp)&#xa;    return tmp&#xa;&#xa;  except ValueError:&#xa;    raise OptionConversionException(&quot;couldn't convert '%s' to int value.&quot;%value)&#xa;&#xa;&#xa;raise OptionConversionException(&quot;couldn't convert '%s' to int.&quot;%str(type(value)))&#xa;" id="52Pl6pyD1f8f" />
    <sourcecode value=":&#xa;Checker.__init__(self)&#xa;" id="3rNMSqE4arRY" />
    <sourcecode value=":&#xa;if type(value)in(FloatType,IntType,LongType,BooleanType):&#xa;  return float(value)&#xa;&#xa;if type(value)==StringType:&#xa;  try:&#xa;    tmp=float(value)&#xa;    return tmp&#xa;&#xa;  except ValueError:&#xa;    raise OptionConversionException(&quot;couldn't convert '%s' to float value.&quot;%value)&#xa;&#xa;&#xa;raise OptionConversionException(&quot;couldn't convert %s to float.&quot;%str(type(value)))&#xa;" id="iodGf2pBot5H" />
    <sourcecode value=":&#xa;Checker.__init__(self)&#xa;" id="moiPqZE3VKk3" />
    <sourcecode value=":&#xa;return str(value)&#xa;" id="4hiX0SYVHeHr" />
    <sourcecode value=":&#xa;Checker.__init__(self)&#xa;self._trueValues=[&quot;true&quot;,&quot;yes&quot;,&quot;y&quot;,&quot;on&quot;,&quot;1&quot;]&#xa;self._falseValues=[&quot;false&quot;,&quot;no&quot;,&quot;n&quot;,&quot;off&quot;,&quot;0&quot;]&#xa;self._truthTable=self._trueValues+self._falseValues&#xa;" id="2y6bSYu1xnQZ" />
    <sourcecode value=":&#xa;if type(value)==BooleanType:&#xa;  return value&#xa;&#xa;if type(value)in(IntType,LongType,FloatType):&#xa;  if value==1:&#xa;    return True&#xa;&#xa;  if value==0:&#xa;    return False&#xa;&#xa;&#xa;if type(value)==StringType:&#xa;  value=value.strip().lower()&#xa;  if value in self._truthTable:&#xa;    return value in self._trueValues&#xa;&#xa;  raise OptionConversionException(&quot;couldn't convert '%s' to bool.&quot;%value)&#xa;&#xa;raise OptionConversionException(&quot;couldn't convert %s to bool.&quot;%str(type(value)))&#xa;" id="5Y23LQcyz4Jx" />
    <sourcecode value=":&#xa;Checker.__init__(self)&#xa;self._options=self._readOptions(options)&#xa;" id="Wt0dWv4QZR4K" />
    <sourcecode value=":&#xa;options=[]&#xa;for value in opt:&#xa;  if type(value)in(IntType,LongType):&#xa;    options.append(:&#xa;      &quot;value&quot;:value,&#xa;      &quot;checker&quot;:IntChecker()&#xa;    )continue&#xa;&#xa;  if type(value)==FloatType:&#xa;    options.append(:&#xa;      &quot;value&quot;:value,&#xa;      &quot;checker&quot;:FloatChecker()&#xa;    )continue&#xa;&#xa;  if type(value)==StringType:&#xa;    options.append(:&#xa;      &quot;value&quot;:value,&#xa;      &quot;checker&quot;:StringChecker()&#xa;    )continue&#xa;&#xa;  if type(value)==BooleanType:&#xa;    options.append(:&#xa;      &quot;value&quot;:value,&#xa;      &quot;checker&quot;:BoolChecker()&#xa;    )continue&#xa;&#xa;&#xa;return options&#xa;" id="AsCGUxOhOJOZ" />
    <sourcecode value=":&#xa;for option in self._options:&#xa;  try:&#xa;    tmp=option[&quot;checker&quot;].check(value)&#xa;    if tmp==option[&quot;value&quot;]:&#xa;      return option[&quot;value&quot;]&#xa;&#xa;    else:&#xa;      continue&#xa;&#xa;&#xa;  except OptionConversionException:&#xa;    continue&#xa;&#xa;&#xa;raise OptionConversionException(&quot;'%s' isn't a valid option.&quot;%str(value))&#xa;" id="m3QcDLERXZaI" />
    <sourcecode value=":&#xa;Checker.__init__(self)&#xa;self._min=value[0]&#xa;self._max=value[1]&#xa;if type(value[0])==FloatType:&#xa;  self._checker=FloatChecker()&#xa;&#xa;else:&#xa;  self._checker=IntChecker()&#xa;&#xa;" id="sXM0Iiaydt5E" />
    <sourcecode value=":&#xa;try:&#xa;  tmp=self._checker.check(value)&#xa;&#xa;except OptionConversionException:&#xa;  raise OptionConversionException(&quot;'%s' isn't a valid option.&quot;%str(value))&#xa;&#xa;else:&#xa;  if(tmp>=self._min)and(tmp&lt;=self._max):&#xa;    return tmp&#xa;&#xa;  else:&#xa;    raise OptionConversionException(&quot;'%s' it's outside valid limits (%f &lt;= x &lt;= %f.&quot;%(str(value),&#xa;    self._min,self._max))&#xa;&#xa;" id="imNUV71E27ud" />
    <sourcecode value=":&#xa;Checker.__init__(self)&#xa;self.enumtype=value.enumtype&#xa;" id="48JFYzdMLUOP" />
    <sourcecode value=":&#xa;if type(value)==EnumValue:&#xa;  if value in self.enumtype:&#xa;    return value&#xa;&#xa;&#xa;if type(value)==StringType:&#xa;  ret=[v for v in self.enumtype if str(v).upper()==value.upper()]&#xa;  if ret:&#xa;    return ret[0]&#xa;&#xa;&#xa;raise OptionConversionException('invalid enum value %s. not a %s enum.'%(value,str(self.enumtype)))&#xa;" id="JS2nlazHAnml" />
    <sourcecode value=":&#xa;Option.__init__(self,name,value,checker)&#xa;self._state=value.state&#xa;" id="Zy95fhkAzOLT" />
    <sourcecode value=":&#xa;try:&#xa;  oldvalue=self._value&#xa;  self._value=self._checker.check(value,self._state)&#xa;  return oldvalue&#xa;&#xa;except OptionConversionException,e:&#xa;  log.debug(&quot;Error setting %s: %s.&quot;%(self._name,str(e)))&#xa;  raise e&#xa;&#xa;" id="gU3u0WT5XLhw" />
    <sourcecode value=":&#xa;for key,value in kw.items():&#xa;  if hasattr(self,key):&#xa;    setattr(self,key,value)&#xa;&#xa;  else:&#xa;    raise TypeError(&quot;Invalid option '%s'.&quot;%key)&#xa;&#xa;&#xa;self.validate()&#xa;" id="E6tUtiLEfSpD" />
    <sourcecode value=":&#xa;self.name=self.name or getattr(self.target,'__name__',None)&#xa;if not self.name:&#xa;  raise TypeError(&quot;Option must have a name&quot;)&#xa;&#xa;self.long=self.long or self.name&#xa;self.help=self.help or getattr(self.target,'__doc__',None)&#xa;if self.short and self.short[0]!='-':&#xa;  self.short=&quot;-&quot;+self.short&#xa;&#xa;if self.long and self.long[0]!='-':&#xa;  self.long=&quot;--&quot;+self.long&#xa;&#xa;if self.name and self.name[0]=='-':&#xa;  self.name=self.name[self.name.rindex('-')+1:]&#xa;&#xa;if self.help:&#xa;  self.help=self.help.strip().replace(&quot;\n&quot;,&quot; &quot;)&#xa;  if self.default:&#xa;    self.help+=&quot; [default=%default]&quot;&#xa;&#xa;&#xa;if self.metavar:&#xa;  self.metavar=self.metavar.upper()&#xa;&#xa;else:&#xa;  self.metavar=self.name.upper()&#xa;&#xa;" id="YIwLTWXcmyXL" />
    <sourcecode value=":&#xa;s=&quot;&quot;&#xa;s+=&quot;&lt;%s &quot;%self.__class__.__name__&#xa;for name in dir(self):&#xa;  attr=getattr(self,name)&#xa;  if not name.startswith(&quot;_&quot;)and not hasattr(attr,'__call__'):&#xa;    s+=&quot;%s=%s &quot;%(name,attr)&#xa;&#xa;&#xa;s=s[:-1]&#xa;s+=&quot;>&quot;&#xa;return s&#xa;" id="Noz7kWSpGb77" />
    <sourcecode value=":&#xa;return self.__str__()&#xa;" id="vbaABhHDD1IR" />
    <sourcecode value=":&#xa;self._name=name&#xa;self._value=value&#xa;self._default=value&#xa;self._checker=checker&#xa;" id="XJYTYNdMLEKv" />
    <sourcecode value=":&#xa;try:&#xa;  oldvalue=self._value&#xa;  self._value=self._checker.check(value)&#xa;  return oldvalue&#xa;&#xa;except OptionConversionException,e:&#xa;  log.debug(&quot;Error setting %s: %s.&quot;%(self._name,str(e)))&#xa;  raise e&#xa;&#xa;" id="sFOnDG3qgAqy" />
    <sourcecode value=":&#xa;return self._value&#xa;" id="c2ML3WptEKwU" />
    <sourcecode value=":&#xa;Checker.__init__(self)&#xa;" id="s176ceI82fuk" />
    <sourcecode value=":&#xa;if not isinstance(value,Coord):&#xa;  try:&#xa;    return Coord.fromState(value,state)&#xa;&#xa;  except ValueError:&#xa;    pass&#xa;&#xa;&#xa;raise OptionConversionException('invalid coord value %s.'%value)&#xa;" id="85H07fduwtuX" />
    <sourcecode value=":&#xa;pass&#xa;" id="ASxM7Hntd2kL" />
    <sourcecode value=":&#xa;if type(obj)==DictType:&#xa;  self._options=self._readOptions(obj)&#xa;&#xa;else:&#xa;  self._options=self._readOptions(obj.__config__)&#xa;&#xa;" id="AcSLnACfod2I" />
    <sourcecode value=":&#xa;return self._str" id="QPEx25u4ckhp" />
    <sourcecode value=":&#xa;options=:&#xa;&#xa;&#xa;for name,value in opt.items():&#xa;  if type(value)in(IntType,LongType):&#xa;    options[name]=Option(name,value,IntChecker())&#xa;    continue&#xa;&#xa;  if type(value)==FloatType:&#xa;    options[name]=Option(name,value,FloatChecker())&#xa;    continue&#xa;&#xa;  if type(value)==StringType:&#xa;    options[name]=Option(name,value,StringChecker())&#xa;    continue&#xa;&#xa;  if type(value)==BooleanType:&#xa;    options[name]=Option(name,value,BoolChecker())&#xa;    continue&#xa;&#xa;  if type(value)==ListType:&#xa;    options[name]=Option(name,value[0],OptionsChecker(value))&#xa;    continue&#xa;&#xa;  if type(value)==TupleType:&#xa;    options[name]=Option(name,value[0],RangeChecker(value))&#xa;    continue&#xa;&#xa;  if type(value)==EnumValue:&#xa;    options[name]=Option(name,value,EnumChecker(value))&#xa;    continue&#xa;&#xa;  if type(value)==Coord:&#xa;    options[name]=CoordOption(name,value,CoordChecker(value))&#xa;    continue&#xa;&#xa;  raise ValueError(&quot;Invalid option type: %s.&quot;%type(value))&#xa;&#xa;return options&#xa;" id="00Ke1c2khTd3" />
    <sourcecode value=":&#xa;return name in self._options&#xa;" id="s1F6zZtsJkkD" />
    <sourcecode value=":&#xa;return len(self._options)&#xa;" id="b2rlMztEtu6t" />
    <sourcecode value=":&#xa;if type(name)!=StringType:&#xa;  raise TypeError&#xa;&#xa;if name in self:&#xa;  return self._options[name].get()&#xa;&#xa;else:&#xa;  raise KeyError(&quot;invalid option: %s.&quot;%name)&#xa;&#xa;" id="0nkthqkHZVXB" />
    <sourcecode value=":&#xa;if name in self:&#xa;  return self._options[name].set(value)&#xa;&#xa;else:&#xa;  raise KeyError(&quot;invalid option: %s.&quot;%name)&#xa;&#xa;" id="Sqzz273OMGwf" />
    <sourcecode value=":&#xa;return self.iterkeys()&#xa;" id="2gAk43SZzYP9" />
    <sourcecode value=":&#xa;return self._options.__iter__()&#xa;" id="OcdN80UhrBD5" />
    <sourcecode value=":&#xa;for name in self._options:&#xa;  yield self._options[name].get()&#xa;&#xa;" id="ZrAR2LUlo9gl" />
    <sourcecode value=":&#xa;for name in self._options:&#xa;  yield(name,self._options[name].get())&#xa;&#xa;" id="1T0obeZCqWUa" />
    <sourcecode value=":&#xa;return[key for key in self.iterkeys()]&#xa;" id="ZK7OoZwOVBMP" />
    <sourcecode value=":&#xa;return[value for value in self.itervalues()]&#xa;" id="wCFPNZoFvsNI" />
    <sourcecode value=":&#xa;return[(name,value)for name,value in self.iteritems()]&#xa;" id="B7D5zaNcJRMF" />
    <sourcecode value=":&#xa;if type(other)not in(Config,DictType):&#xa;  return self&#xa;&#xa;if type(other)==DictType:&#xa;  other=Config(other)&#xa;&#xa;for name,value in other._options.items():&#xa;  if not name in self._options:&#xa;    raise KeyError(&quot;invalid option: %s&quot;%name)&#xa;&#xa;  self._options[name]=value&#xa;&#xa;return self" id="ER7XtTluaztQ" />
    <sourcecode value=":&#xa;self.handlers=:&#xa;&#xa;&#xa;" id="VCwkmzrqlpQY" />
    <sourcecode value=":&#xa;topic=handler[&quot;topic&quot;]&#xa;if topic not in self.handlers:&#xa;  self.handlers[topic]=[]&#xa;&#xa;if handler[&quot;handler&quot;]not in self.handlers[topic]:&#xa;  self.handlers[topic].append(handler[&quot;handler&quot;])&#xa;&#xa;return True&#xa;" id="iYERNez44ppI" />
    <sourcecode value=":&#xa;topic=handler[&quot;topic&quot;]&#xa;if not topic in self.handlers:&#xa;  return True&#xa;&#xa;if handler[&quot;handler&quot;]not in self.handlers[topic]:&#xa;  return True&#xa;&#xa;self.handlers[topic].remove(handler[&quot;handler&quot;])&#xa;return True&#xa;" id="DoKnc9usozoB" />
    <sourcecode value=":&#xa;if topic not in self.handlers:&#xa;  return True&#xa;&#xa;excluded=[]&#xa;for handler in self.handlers[topic]:&#xa;  proxy=Proxy(uri=handler[&quot;proxy&quot;])&#xa;  try:&#xa;    dispatcher=getattr(proxy,handler[&quot;method&quot;])&#xa;    dispatcher(*args,**kwargs)&#xa;&#xa;  except AttributeError,e:&#xa;    log.debug(&quot;Invalid proxy method ('%s %s') for '%s' handler.&quot;%\&#xa;    (handler[&quot;proxy&quot;],handler[&quot;method&quot;],topic))excluded.append(handler)&#xa;    continue&#xa;&#xa;  except Pyro.errors.ProtocolError,e:&#xa;    log.debug(&quot;Unreachable handler (%s). Removing from subscribers list.&quot;%proxy)&#xa;    excluded.append(handler)&#xa;    continue&#xa;&#xa;  except Exception,e:&#xa;    log.debug(&quot;Handler (%s) raised an exception. Removing from subscribers list.&quot;%proxy)&#xa;    log.exception(e)&#xa;    excluded.append(handler)&#xa;    continue&#xa;&#xa;&#xa;for handler in excluded:&#xa;  self.handlers[topic].remove(handler)&#xa;&#xa;return True" id="GeyRF5qQiGRj" />
    <sourcecode value=":&#xa;logging.Formatter.__init__(self,fmt,datefmt)&#xa;" id="3BAEwqYEIvgM" />
    <sourcecode value=":&#xa;stream=StringIO.StringIO()&#xa;printException(exc_info[1],stream=stream)&#xa;try:&#xa;  return stream.getvalue()&#xa;&#xa;finally:&#xa;  stream.close()&#xa;&#xa;" id="2YSGVQQJwmOL" />
    <sourcecode value=":&#xa;Pyro.core.initServer(banner=False)&#xa;Pyro.core.Daemon.__init__(self,&#xa;host=host or MANAGER_DEFAULT_HOST,port=port or MANAGER_DEFAULT_PORT,norange=0)self.useNameServer(None)&#xa;self.connect(manager)&#xa;self.manager=manager&#xa;self.getAdapter().setTimeout(None)&#xa;" id="35URHzTvlUgO" />
    <sourcecode value=":&#xa;return self.manager&#xa;" id="zk8nYJtLwrr4" />
    <sourcecode value=":&#xa;return Proxy(uri=Pyro.core.PyroURI(self.hostname,&#xa;obj.GUID(),prtcol=self.protocol,port=self.port))" id="kqQgiHi92SGC" />
    <sourcecode value=":&#xa;URI=Pyro.core.PyroURI(self.hostname,obj.GUID(),prtcol=self.protocol,port=self.port)&#xa;self.implementations[obj.GUID()]=(obj,name)&#xa;if index:&#xa;  self.implementations[index]=(obj,name)&#xa;&#xa;obj.setPyroDaemon(self)&#xa;return URI&#xa;" id="7nxVm28ZSxsG" />
    <sourcecode value=":&#xa;RemoteObject.__init__(self)&#xa;log.info(&quot;Starting manager.&quot;)&#xa;self.resources=ResourcesManager()&#xa;self.classLoader=ClassLoader()&#xa;self.setGUID(MANAGER_LOCATION)&#xa;self.died=threading.Event()&#xa;if not local:&#xa;  try:&#xa;    ManagerLocator.locate()&#xa;    raise ChimeraException(&quot;Chimera is already running&quot;&#xa;    &quot; on this system. Use chimera-admin&quot;&quot; to manage it.&quot;)&#xa;  except ManagerNotFoundException:&#xa;    pass&#xa;&#xa;&#xa;self.adapter=ManagerAdapter(self,host,port)&#xa;self.adapterThread=threading.Thread(target=self.adapter.requestLoop)&#xa;self.adapterThread.setDaemon(True)&#xa;self.adapterThread.start()&#xa;if not local:&#xa;  self.beacon=ManagerBeacon(self)&#xa;  self.beaconThread=threading.Thread(target=self.beacon.run)&#xa;  self.beaconThread.setDaemon(True)&#xa;  self.beaconThread.start()&#xa;&#xa;else:&#xa;  self.beacon=None&#xa;&#xa;self.resources.add(MANAGER_LOCATION,self,getManagerURI(self.getHostname(),self.getPort()))&#xa;signal.signal(signal.SIGTERM,self._sighandler)&#xa;signal.signal(signal.SIGINT,self._sighandler)&#xa;atexit.register(self._sighandler)&#xa;" id="YE7obKrVia8N" />
    <sourcecode value=":&#xa;if hasattr(self,'adapter')and self.adapter:&#xa;  return&quot;&lt;Manager for %s:%d at %s>&quot;%(self.adapter.hostname,self.adapter.port,hex(id(self)))&#xa;&#xa;else:&#xa;  return&quot;&lt;Manager at %s>&quot;%hex(id(self))&#xa;&#xa;" id="XpVotdxgbxCN" />
    <sourcecode value=":&#xa;self.shutdown()&#xa;" id="rqqSo0n2bRmd" />
    <sourcecode value=":&#xa;if self.adapter:&#xa;  return self.adapter.hostname&#xa;&#xa;else:&#xa;  return None&#xa;&#xa;" id="2rU3bcbpVEMe" />
    <sourcecode value=":&#xa;if self.adapter:&#xa;  return self.adapter.port&#xa;&#xa;else:&#xa;  return None&#xa;&#xa;" id="YiY4xsghwHqU" />
    <sourcecode value=":&#xa;Returns a list with the Location of all the available resources&#xa;return self.resources.keys()&#xa;" id="EXJ8p9d3HDSs" />
    <sourcecode value=":&#xa;resources=self.getResources()&#xa;toRet=[]&#xa;for r in resources:&#xa;  if r.cls==cls:&#xa;    toRet.append(r)&#xa;&#xa;&#xa;return toRet&#xa;" id="uTY9f01bbuFt" />
    <sourcecode value=":&#xa;return self.adapter&#xa;" id="jyCRf6eWQc5X" />
    <sourcecode value=":&#xa;Get a proxy for the object pointed by location.The given location can contain index&#xa;instead of names,e.g.'/Object/0'to get objects when you don't know their names.;location can also be a class.getProxy will return an instance&#xa;named'name'at the given host/port(or on the current&#xa;manager,if None given).&#xa;host and port parameters determines which Manager we will&#xa;lookup for location/instance.If None,look at this&#xa;Manager.host/port is only used when location is a&#xa;class,otherwise,host and port are determined by location&#xa;itself.&#xa;lazy parameter determines if Manager will try to locate the&#xa;selected Manager at host/port and ask them for a valid&#xa;object/instance.If False,Manager just return an proxy for&#xa;the selected parameters but can't guarantee that the returned;Proxy have an active object bounded.&#xa;For objects managed by this own Manager,lazy is always False.&#xa;@param location:Object location or class.&#xa;@type location:Location or class&#xa;@param name:Instance name.&#xa;@type name:str&#xa;@param host:Manager's hostname.;@type host:str&#xa;@param port:Manager's port.;@type port:int&#xa;@param lazy:Manager's laziness (check for already bound objects on host/port Manager);@type lazy:bool&#xa;@raises NotValidChimeraObjectException:When a object which doesn't inherites from ChimeraObject is given in location.;@raises ObjectNotFoundException:When te request object or the Manager was not found.&#xa;@raises InvalidLocationException:When the requested location s invalid.&#xa;@return:Proxy for selected object.&#xa;@rtype:Proxy&#xa;if not location:&#xa;  raise ObjectNotFoundException(&quot;Couldn't find an object at the&quot;&#xa;  &quot; given location %s&quot;%location)&#xa;if not isinstance(location,StringType)and not isinstance(location,Location):&#xa;  if issubclass(location,ChimeraObject):&#xa;    location=Location(cls=location.__name__,name=name,host=host or self.getHostname(),port=port or self.getPort())&#xa;&#xa;  else:&#xa;    raise NotValidChimeraObjectException(&quot;Can't get a proxy from non ChimeraObject's descendent object (%s).&quot;%location)&#xa;&#xa;&#xa;else:&#xa;  location=Location(location,host=host or self.getHostname(),port=port or self.getPort())&#xa;&#xa;if self._belongsToMe(location):&#xa;  ret=self.resources.get(location)&#xa;  if not ret:&#xa;    raise ObjectNotFoundException(&quot;Couldn't found an object at the&quot;&#xa;    &quot; given location %s&quot;%location)&#xa;  return Proxy(uri=ret.uri)&#xa;&#xa;else:&#xa;  if lazy:&#xa;    return Proxy(location)&#xa;&#xa;  else:&#xa;    other=Proxy(location=MANAGER_LOCATION,&#xa;    host=location.host or host,port=location.port or port)if not other.ping():&#xa;      raise ObjectNotFoundException(&quot;Can't contact %s manager at %s.&quot;%(location,other.URI.address))&#xa;&#xa;    proxy=other.getProxy(location)&#xa;    if not proxy:&#xa;      raise ObjectNotFoundException(&quot;Couldn't found an object at the&quot;&#xa;      &quot; given location %s&quot;%location)&#xa;    else:&#xa;      return proxy&#xa;&#xa;&#xa;&#xa;" id="TfCuFHPdQuFB" />
    <sourcecode value=":&#xa;meHost=self.getHostname()&#xa;meName=socket.gethostbyname(meHost)&#xa;mePort=self.getPort()&#xa;return(location.host==None or location.host in(meHost,meName))and\&#xa;(location.port==None or location.port==self.getPort())" id="E4h9d6JQs5eZ" />
    <sourcecode value=":&#xa;Ask the system to shutdown.Closing all sockets and stopping&#xa;all threads.&#xa;@return:Nothing&#xa;@rtype:None&#xa;if not self.died.isSet():&#xa;  log.info(&quot;Shuting down manager.&quot;)&#xa;  try:&#xa;    try:&#xa;      elderly_first=sorted(list(self.resources.values()),&#xa;      cmp=lambda x,y:cmp(x.created,y.created),reverse=True)for resource in elderly_first:&#xa;        if resource.location==MANAGER_LOCATION:continue&#xa;        self.stop(resource.location)&#xa;&#xa;&#xa;    except ChimeraException:&#xa;      pass&#xa;&#xa;&#xa;  finally:&#xa;    self.adapter.shutdown(disconnect=True)&#xa;    if self.beacon:&#xa;      self.beacon.shutdown()&#xa;      self.beaconThread.join()&#xa;&#xa;    self.died.set()&#xa;    log.info(&quot;Manager finished.&quot;)&#xa;&#xa;&#xa;" id="WkkU9ok2Vy49" />
    <sourcecode value=":&#xa;Ask the system to wait until anyone calls L:&#xa;  shutdown&#xa;.&#xa;If nobody calls L:&#xa;  shutdown&#xa;,you can stop the system using&#xa;Ctrl+C.&#xa;@return:Nothing&#xa;@rtype:None&#xa;try:&#xa;  while not self.died.isSet():&#xa;    time.sleep(1)&#xa;&#xa;&#xa;except IOError:&#xa;  pass&#xa;&#xa;" id="vVAQRCYKUVAj" />
    <sourcecode value=":&#xa;Add the class pointed by'location'to the system configuring it using'config'.&#xa;Manager will look for the class in'path'plus sys.path.&#xa;@param path:The class search path.&#xa;@type path:list&#xa;@param start:start the object after initialization.&#xa;@type start:bool&#xa;@raises ChimeraObjectException:Internal error on managed(user)object.&#xa;@raises ClassLoaderException:Class not found.&#xa;@raises NotValidChimeraObjectException:When a object which doesn't inherites from ChimeraObject is given in location.;@raises InvalidLocationException:When the requested location s invalid.&#xa;@return:retuns a proxy for the object if sucessuful,False otherwise.&#xa;@rtype:Proxy or bool&#xa;if type(location)!=Location:&#xa;  location=Location(location)&#xa;&#xa;cls=None&#xa;cls=self.classLoader.loadClass(location.cls,path)&#xa;return self.addClass(cls,location.name,location.config,start)&#xa;" id="dBW5ego2HkXJ" />
    <sourcecode value=":&#xa;" id="ZwcT9s21vb7j" />
    <sourcecode value=":&#xa;data=self.request[0]&#xa;sk=self.request[1]&#xa;if data==MANAGER_BEACON_CHALLENGE:&#xa;  sk.sendto(&quot;%s:%s&quot;%(self.server.manager.getHostname(),self.server.manager.getPort()),self.client_address)&#xa;&#xa;else:&#xa;  sk.sendto(MANAGER_BEACON_ERROR,self.client_address)&#xa;&#xa;" id="FlOI7tYgH4If" />
    <sourcecode value=":&#xa;SocketServer.UDPServer.allow_reuse_address=True&#xa;SocketServer.ThreadingUDPServer.daemon_threads=False&#xa;try:&#xa;  SocketServer.ThreadingUDPServer.__init__(self,(&quot;&quot;,MANAGER_BEACON_PORT),_ManagerBeaconHandler)&#xa;&#xa;except Exception,e:&#xa;  raise ChimeraException(&quot;Failed to start Manager Beacon.&quot;)&#xa;&#xa;self.manager=manager&#xa;self.shouldDie=threading.Event()&#xa;" id="D82pcckddzLb" />
    <sourcecode value=":&#xa;self.shouldDie.set()&#xa;" id="8swkoKmTvJKN" />
    <sourcecode value=":&#xa;ret=select.select([self.fileno()],[],[self.fileno()],0)&#xa;if self.fileno()in ret[0]:&#xa;  data,client_addr=self.socket.recvfrom(self.max_packet_size)&#xa;  return(data,self.socket),client_addr&#xa;&#xa;else:&#xa;  return(None,None)&#xa;&#xa;" id="RH4LZOgKsgkZ" />
    <sourcecode value=":&#xa;&quot;Finish one request by instantiating RequestHandlerClass.&quot;&quot;&quot;&#xa;if request:&#xa;  self.RequestHandlerClass(request,client_address,self)&#xa;&#xa;" id="6htwLbVTyXNj" />
    <sourcecode value=":&#xa;while not self.shouldDie.isSet():&#xa;  self.handle_request()" id="5xZ1DcI5B1vF" />
    <sourcecode value=":&#xa;&quot;Use to locate running instance of Chimera.;When started,Manager creates a UDP broadcast server.This&#xa;method tries to locate the Manager using a broadcast message&#xa;and waiting for an answer.&#xa;sk=socket.socket(socket.AF_INET,socket.SOCK_DGRAM)&#xa;sk.setblocking(0)&#xa;try:&#xa;  try:&#xa;    sk.sendto(MANAGER_BEACON_CHALLENGE,(&quot;&quot;,MANAGER_BEACON_PORT))&#xa;    ins,outs,excs=select.select([sk],[],[sk],1)&#xa;    if sk in ins:&#xa;      data,_=sk.recvfrom(1024)&#xa;      if data.strip()!=MANAGER_BEACON_ERROR:&#xa;        host,port=data.split(&quot;:&quot;)&#xa;        return Proxy(uri=getManagerURI(host,int(port)))&#xa;&#xa;&#xa;    raise ManagerNotFoundException(&quot;Couldn't locate any suitable Manager.&quot;)&#xa;&#xa;  except socket.error,e:&#xa;    raise ManagerNotFoundException(&quot;Error trying to locate a suitable Manager.&quot;)&#xa;&#xa;&#xa;finally:&#xa;  sk.close()" id="NmbJh4L4mWqH" />
    <sourcecode value=":&#xa;config=:&#xa;&#xa;&#xa;for base in bases:&#xa;  if CONFIG_ATTRIBUTE_NAME in base.__dict__ and type(base.__dict__[CONFIG_ATTRIBUTE_NAME])==DictType:&#xa;    config=dict(config,**base.__dict__[CONFIG_ATTRIBUTE_NAME])&#xa;&#xa;&#xa;_dict[CONFIG_ATTRIBUTE_NAME]=dict(config,**_dict.get(CONFIG_ATTRIBUTE_NAME,:&#xa;&#xa;))&#xa;events=[]&#xa;methods=[]&#xa;for name,obj in _dict.iteritems():&#xa;  if hasattr(obj,'__call__')and not name.startswith('_'):&#xa;    if hasattr(obj,EVENT_ATTRIBUTE_NAME):&#xa;      _dict[name]=MethodWrapper(obj,dispatcher=EventWrapperDispatcher)&#xa;      events.append(name)&#xa;&#xa;    elif hasattr(obj,LOCK_ATTRIBUTE_NAME):&#xa;      _dict[name]=LockWrapper(obj,dispatcher=LockWrapperDispatcher)&#xa;      methods.append(name)&#xa;&#xa;    else:&#xa;      _dict[name]=MethodWrapper(obj,dispatcher=MethodWrapperDispatcher)&#xa;      methods.append(name)&#xa;&#xa;&#xa;&#xa;_dict[EVENTS_ATTRIBUTE_NAME]=events&#xa;_dict[METHODS_ATTRIBUTE_NAME]=methods&#xa;_dict[INSTANCE_MONITOR_ATTRIBUTE_NAME]=threading.Condition(threading.RLock())&#xa;_dict[RWLOCK_ATTRIBUTE_NAME]=ReadWriteLock()&#xa;return super(MetaObject,meta).__new__(meta,clsname,bases,_dict)" id="XKVv90OaSMLW" />
    <sourcecode value=":&#xa;self.wrapper=wrapper&#xa;self.func=wrapper.func&#xa;self.instance=instance&#xa;self.cls=cls&#xa;self.bound_name=&quot;&lt;bound method %s.%s.begin of %s>&quot;%(self.cls.__name__,&#xa;self.func.func_name,repr(self.instance))self.unbound_name=&quot;&lt;unbound method %s.%s>&quot;%(self.cls.__name__,self.func.func_name)&#xa;" id="2FeMD0kfjUZ9" />
    <sourcecode value=":&#xa;if self.instance:&#xa;  return self.bound_name&#xa;&#xa;else:&#xa;  return self.unbound_name&#xa;&#xa;" id="dNpLwtfn2iK4" />
    <sourcecode value=":&#xa;if not self.instance:&#xa;  if not args:&#xa;    args=[None,None]&#xa;&#xa;  if not isinstance(args[0],self.cls):&#xa;    raise TypeError(&quot;unbound method %s object must be called with %s instance &quot;&#xa;    &quot;as first argument (got %s instance instead)&quot;%(self.func.func_name,self.cls.__name__,args[0].__class__.__name__))&#xa;  else:&#xa;    return self.call(args[0],*args[1:],**kwargs)&#xa;&#xa;&#xa;return self.call(self.instance,*args,**kwargs)&#xa;" id="sTnuA5wHOTqA" />
    <sourcecode value=":&#xa;return self.func(*args,**kwargs)" id="Ij0FRU0q9GHo" />
    <sourcecode value=":&#xa;if not lock:lock=threading.RLock()&#xa;threading.Condition.__init__(self,lock)" id="l9tOEyDteTlE" />
    <sourcecode value=":&#xa;if have_pkg_resources:&#xa;  try:&#xa;    pkgs=pkg_resources.require('chimera-python')&#xa;    chimera=pkgs[0]&#xa;    return os.path.realpath(os.path.join(chimera.location,'chimera'))&#xa;&#xa;  except pkg_resources.DistributionNotFound:&#xa;    pass&#xa;&#xa;&#xa;return os.path.realpath(os.path.join(os.path.abspath(__file__),'../../'))&#xa;" id="OUCJzpq5WvYm" />
    <sourcecode value=":&#xa;return os.path.join(ChimeraPath.root(),'instruments')&#xa;" id="2BtonkD9CNSA" />
    <sourcecode value=":&#xa;return os.path.join(ChimeraPath.root(),'controllers')&#xa;" id="2O7S0Q90Z0pK" />
    <sourcecode value=":&#xa;return os.path.join(ChimeraPath.root(),'drivers')" id="1j8DQCeTaltY" />
    <sourcecode value=":&#xa;self._location=None&#xa;self._instance=None&#xa;self._created=time.time()&#xa;self._loop=None&#xa;self._uri=None&#xa;" id="m4pIxcv4lPlr" />
    <sourcecode value=":&#xa;return&quot;&lt;%s (%s) at %s>&quot;%(self.location,self.instance,self.uri)&#xa;" id="aanLyWAGRjQu" />
    <sourcecode value=":&#xa;self._res=:&#xa;&#xa;&#xa;" id="YEM2JYNJsBo3" />
    <sourcecode value=":&#xa;location=self._validLocation(location)&#xa;if location in self:&#xa;  raise InvalidLocationException(&quot;Location already on the resource pool.&quot;)&#xa;&#xa;entry=Resource()&#xa;entry.location=location&#xa;entry.instance=instance&#xa;entry.loop=loop&#xa;entry.uri=uri&#xa;self._res[location]=entry&#xa;return len(self.getByClass(location.cls))-1&#xa;" id="OppEydIcSwdv" />
    <sourcecode value=":&#xa;entry=self.get(location)&#xa;del self._res[entry.location]&#xa;return True&#xa;" id="dRp48FuTQVK8" />
    <sourcecode value=":&#xa;location=self._validLocation(item)&#xa;try:&#xa;  index=int(location.name)&#xa;  return self._getByIndex(location,index)&#xa;&#xa;except ValueError:&#xa;  pass&#xa;&#xa;return self._get(location)&#xa;" id="jD7CdJJgTlsN" />
    <sourcecode value=":&#xa;entries=filter(lambda location:location.cls==cls,self.keys())&#xa;ret=[]&#xa;for entry in entries:&#xa;  ret.append(self.get(entry))&#xa;&#xa;ret.sort(key=lambda entry:entry.created)&#xa;return ret&#xa;" id="UvrQXpMt6LZd" />
    <sourcecode value=":&#xa;location=self._validLocation(item)&#xa;if location in self:&#xa;  ret=filter(lambda x:x==location,self.keys())&#xa;  return self._res[ret[0]]&#xa;&#xa;else:&#xa;  raise ObjectNotFoundException(&quot;Couldn't found %s.&quot;%location)&#xa;&#xa;" id="xkQwquOMVVn4" />
    <sourcecode value=":&#xa;location=self._validLocation(item)&#xa;insts=self.getByClass(location.cls)&#xa;if insts:&#xa;  try:&#xa;    return self._res[insts[index].location]&#xa;&#xa;  except IndexError:&#xa;    raise ObjectNotFoundException(&quot;Couldn't found %s instance;&#xa;&#xa;else:&#xa;  raise ObjectNotFoundException(&quot;Couldn't found %s.&quot;%location)&#xa;&#xa;" id="3NJSFAwspxj9" />
    <sourcecode value=":&#xa;ret=item&#xa;if not isinstance(item,Location):&#xa;  ret=Location(item)&#xa;&#xa;return ret&#xa;" id="uxBWtcK1w1wF" />
    <sourcecode value=":&#xa;try:&#xa;  return self.get(item)&#xa;&#xa;except ChimeraException:&#xa;  raise KeyError(&quot;Couldn't found %s&quot;%item),None,sys.exc_info()[2]&#xa;&#xa;" id="znoVwENqnWvy" />
    <sourcecode value=":&#xa;item=self._validLocation(item)&#xa;if item in self.keys():&#xa;  return True&#xa;&#xa;else:&#xa;  try:&#xa;    index=int(item.name)&#xa;    return bool(self._getByIndex(item,index))&#xa;&#xa;  except ValueError:&#xa;    return False&#xa;&#xa;  except ObjectNotFoundException:&#xa;    return False&#xa;&#xa;&#xa;" id="XPr4xTUZKCFx" />
    <sourcecode value=":&#xa;&quot;Initialize this read-write lock.&quot;&quot;&quot;&#xa;self.__condition=Condition(Lock())&#xa;self.__writer=None&#xa;self.__upgradewritercount=0&#xa;self.__pendingwriters=[]&#xa;self.__readers=:&#xa;&#xa;&#xa;" id="tX5IOMuGvjTK" />
    <sourcecode value=":&#xa;&quot;Acquire a read lock for the current thread, waiting at most;timeout seconds or doing a non-blocking check in case timeout is&lt;=0.&#xa;In case timeout is None,the call to acquireRead blocks until the&#xa;lock request can be serviced.&#xa;In case the timeout expires before the lock could be serviced,a&#xa;RuntimeError is thrown.&#xa;if timeout is not None:&#xa;  endtime=time()+timeout&#xa;&#xa;me=currentThread()&#xa;self.__condition.acquire()&#xa;try:&#xa;  if self.__writer is me:&#xa;    self.__writercount+=1&#xa;    return&#xa;&#xa;  while True:&#xa;    if self.__writer is None:&#xa;      if self.__upgradewritercount or self.__pendingwriters:&#xa;        if me in self.__readers:&#xa;          self.__readers[me]+=1&#xa;          return&#xa;&#xa;&#xa;      else:&#xa;        self.__readers[me]=self.__readers.get(me,0)+1&#xa;        return&#xa;&#xa;&#xa;    if timeout is not None:&#xa;      remaining=endtime-time()&#xa;      if remaining&lt;=0:&#xa;        raise RuntimeError(&quot;Acquiring read lock timed out&quot;)&#xa;&#xa;      self.__condition.wait(remaining)&#xa;&#xa;    else:&#xa;      self.__condition.wait()&#xa;&#xa;&#xa;&#xa;finally:&#xa;  self.__condition.release()&#xa;&#xa;" id="PoMLVpf26veA" />
    <sourcecode value=":&#xa;&quot;Acquire a write lock for the current thread, waiting at most;timeout seconds or doing a non-blocking check in case timeout is&lt;=0.&#xa;In case the write lock cannot be serviced due to the deadlock&#xa;condition mentioned above,a ValueError is raised.&#xa;In case timeout is None,the call to acquireWrite blocks until the&#xa;lock request can be serviced.&#xa;In case the timeout expires before the lock could be serviced,a&#xa;RuntimeError is thrown.&#xa;if timeout is not None:&#xa;  endtime=time()+timeout&#xa;&#xa;me,upgradewriter=currentThread(),False&#xa;self.__condition.acquire()&#xa;try:&#xa;  if self.__writer is me:&#xa;    self.__writercount+=1&#xa;    return&#xa;&#xa;  elif me in self.__readers:&#xa;    if self.__upgradewritercount:&#xa;      raise ValueError(&#xa;      &quot;Inevitable dead lock, denying write lock&quot;)&#xa;    upgradewriter=True&#xa;    self.__upgradewritercount=self.__readers.pop(me)&#xa;&#xa;  else:&#xa;    self.__pendingwriters.append(me)&#xa;&#xa;  while True:&#xa;    if not self.__readers and self.__writer is None:&#xa;      if self.__upgradewritercount:&#xa;        if upgradewriter:&#xa;          self.__writer=me&#xa;          self.__writercount=self.__upgradewritercount+1&#xa;          self.__upgradewritercount=0&#xa;          return&#xa;&#xa;&#xa;      elif self.__pendingwriters[0]is me:&#xa;        self.__writer=me&#xa;        self.__writercount=1&#xa;        self.__pendingwriters=self.__pendingwriters[1:]&#xa;        return&#xa;&#xa;&#xa;    if timeout is not None:&#xa;      remaining=endtime-time()&#xa;      if remaining&lt;=0:&#xa;        if upgradewriter:&#xa;          self.__readers[me]=self.__upgradewritercount&#xa;          self.__upgradewritercount=0&#xa;&#xa;        else:&#xa;          self.__pendingwriters.remove(me)&#xa;&#xa;        raise RuntimeError(&quot;Acquiring write lock timed out&quot;)&#xa;&#xa;      self.__condition.wait(remaining)&#xa;&#xa;    else:&#xa;      self.__condition.wait()&#xa;&#xa;&#xa;&#xa;finally:&#xa;  self.__condition.release()&#xa;&#xa;" id="JqRHi9xnpDbZ" />
    <sourcecode value=":&#xa;&quot;Release the currently held lock.;In case the current thread holds no lock,a ValueError is thrown.&#xa;me=currentThread()&#xa;self.__condition.acquire()&#xa;try:&#xa;  if self.__writer is me:&#xa;    self.__writercount-=1&#xa;    if not self.__writercount:&#xa;      self.__writer=None&#xa;      self.__condition.notifyAll()&#xa;&#xa;&#xa;  elif me in self.__readers:&#xa;    self.__readers[me]-=1&#xa;    if not self.__readers[me]:&#xa;      del self.__readers[me]&#xa;      if not self.__readers:&#xa;        self.__condition.notifyAll()&#xa;&#xa;&#xa;&#xa;  else:&#xa;    raise ValueError(&quot;Trying to release unheld lock&quot;)&#xa;&#xa;&#xa;finally:&#xa;  self.__condition.release()" id="DujU8fpUuvEg" />
    <sourcecode value=":&#xa;&quot;Initialize the thread pool with numThreads workers.&quot;&quot;&quot;&#xa;self.__threads=[]&#xa;self.__resizeLock=threading.Condition(threading.Lock())&#xa;self.__taskLock=threading.Condition(threading.Lock())&#xa;self.__tasks=[]&#xa;self.__isJoining=False&#xa;self.setThreadCount(numThreads)&#xa;" id="HW05ijyQYuL0" />
    <sourcecode value=":&#xa;&quot; External method to set the current pool size.  Acquires;the resizing lock,then calls the internal version to do real&#xa;work.&#xa;if self.__isJoining:&#xa;  return False&#xa;&#xa;self.__resizeLock.acquire()&#xa;try:&#xa;  self.__setThreadCountNolock(newNumThreads)&#xa;&#xa;finally:&#xa;  self.__resizeLock.release()&#xa;&#xa;return True&#xa;" id="W5dqKJl4pgxg" />
    <sourcecode value=":&#xa;&quot;Set the current pool size, spawning or terminating threads;if necessary.Internal use only&#xa;assumes the resizing lock is&#xa;held.&#xa;while newNumThreads>len(self.__threads):&#xa;  newThread=ThreadPoolThread(self)&#xa;  self.__threads.append(newThread)&#xa;  newThread.start()&#xa;&#xa;while newNumThreads&lt;len(self.__threads):&#xa;  self.__threads[0].goAway()&#xa;  del self.__threads[0]&#xa;&#xa;" id="NtxOKXR33KJj" />
    <sourcecode value=":&#xa;&quot;Return the number of threads in the pool.&quot;&quot;&quot;&#xa;self.__resizeLock.acquire()&#xa;try:&#xa;  return len(self.__threads)&#xa;&#xa;finally:&#xa;  self.__resizeLock.release()&#xa;&#xa;" id="ITbwJT2S4cW6" />
    <sourcecode value=":&#xa;" id="MZwO9QVjDzAC" />
    <sourcecode value=":&#xa;&quot; Initialize the thread and remember the pool. &quot;&quot;&quot;&#xa;threading.Thread.__init__(self)&#xa;self.__pool=pool&#xa;self.__isDying=False&#xa;self.setDaemon(True)&#xa;" id="KCgg2fAGq7dd" />
    <sourcecode value=":&#xa;&quot; Until told to quit, retrieve the next task and execute;it,calling the callback if any.&#xa;while self.__isDying==False:&#xa;  cmd,args,kwargs,callback=self.__pool.getNextTask()&#xa;  if cmd is None:&#xa;    sleep(ThreadPoolThread.threadSleepTime)&#xa;&#xa;  else:&#xa;    log.debug(&quot;Running %s on thread %s&quot;%(cmd,self.getName()))&#xa;    if callback is None:&#xa;      cmd(*args,**kwargs)&#xa;&#xa;    else:&#xa;      callback(cmd(*args,**kwargs))&#xa;&#xa;&#xa;&#xa;" id="XWrMYTc6q3Fo" />
    <sourcecode value=":&#xa;&quot; Exit the run loop next time through.&quot;&quot;&quot;&#xa;self.__isDying=True" id="FzD52StkyzHQ" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;" id="ZcUIZvmWc22D" />
    <sourcecode value=":&#xa;return 42" id="mw8OzAZndCRm" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;" id="Ki1V2fpKRyYV" />
    <sourcecode value=":&#xa;return False&#xa;" id="7eOYbu4vV3Nr" />
    <sourcecode value=":&#xa;return 42" id="sGdNJ0DtwBKa" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;raise Exception(&quot;oops in __init__&quot;)&#xa;" id="q6dulbn6uPN9" />
    <sourcecode value=":&#xa;return True&#xa;" id="eJLWghfiYzg4" />
    <sourcecode value=":&#xa;return 42" id="mubIrHK9Fw92" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;" id="1ASkZ2iFpf8O" />
    <sourcecode value=":&#xa;raise Exception(&quot;oops in __main__&quot;)&#xa;" id="RNYE2fcufefk" />
    <sourcecode value=":&#xa;return 42" id="EwfrYIb32kdd" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;" id="Ab392Yk3T9ZX" />
    <sourcecode value=":&#xa;raise Exception(&quot;oops in __start__&quot;)&#xa;return True&#xa;" id="GsNjzuHEzHme" />
    <sourcecode value=":&#xa;return 42" id="sa8srsUzW0zK" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;" id="ifzreoqX6Utw" />
    <sourcecode value=":&#xa;raise Exception(&quot;oops in __stop__&quot;)&#xa;" id="CrmIJfCw9NhY" />
    <sourcecode value=":&#xa;return True&#xa;" id="fyioJPKyzRID" />
    <sourcecode value=":&#xa;return 42" id="EhaC8tNRkSg0" />
    <sourcecode value=":&#xa;manager=Manager(host='localhost',port=9999)&#xa;proxy=ManagerLocator.locate()&#xa;assert proxy.ping()==True&#xa;assert proxy.URI.address==gethostbyname(&quot;localhost&quot;)&#xa;assert proxy.URI.port==9999&#xa;manager.shutdown()&#xa;assert_raises(ManagerNotFoundException,ManagerLocator.locate)" id="4OTJuANRTSit" />
    <sourcecode value=":&#xa;class BaseClass(ChimeraObject):&#xa;  __config__=:&#xa;    &quot;baseConfig&quot;:True&#xa;&#xa;  @event&#xa;  def baseEvent(self):&#xa;    pass&#xa;&#xa;  def baseMethod(self):&#xa;    pass&#xa;&#xa;  def _basePrivateMethod(self):&#xa;    pass&#xa;&#xa;&#xa;assert isinstance(BaseClass.__dict__['baseMethod'],MethodWrapper)&#xa;assert isinstance(BaseClass.__dict__['baseEvent'],MethodWrapper)&#xa;assert not isinstance(BaseClass.__dict__['_basePrivateMethod'],MethodWrapper)&#xa;assert BaseClass.__dict__[CONFIG_ATTRIBUTE_NAME]['baseConfig']==True&#xa;class SingleClass(BaseClass):&#xa;  __config__=:&#xa;    &quot;singleConfig&quot;:True&#xa;&#xa;  @event&#xa;  def singleEvent(self):&#xa;    pass&#xa;&#xa;  def singleMethod(self):&#xa;    pass&#xa;&#xa;&#xa;assert isinstance(SingleClass.__bases__[0].__dict__['baseMethod'],MethodWrapper)&#xa;assert isinstance(SingleClass.__dict__['singleMethod'],MethodWrapper)&#xa;assert isinstance(SingleClass.__dict__['singleEvent'],MethodWrapper)&#xa;assert not isinstance(SingleClass.__bases__[0].__dict__['_basePrivateMethod'],MethodWrapper)&#xa;assert SingleClass.__dict__[CONFIG_ATTRIBUTE_NAME]['baseConfig']==True&#xa;assert SingleClass.__dict__[CONFIG_ATTRIBUTE_NAME]['singleConfig']==True&#xa;class AnotherBase(ChimeraObject):&#xa;  __config__=:&#xa;    &quot;anotherBaseConfig&quot;:True&#xa;&#xa;  def anotherBaseMethod(self):&#xa;    pass&#xa;&#xa;&#xa;class NonChimeraClass(object):&#xa;  __config__=:&#xa;&#xa;&#xa;  def nonChimeraMethod(self):&#xa;    pass&#xa;&#xa;&#xa;class MultipleClass(SingleClass,AnotherBase,NonChimeraClass):&#xa;  __config__=:&#xa;    &quot;multipleConfig&quot;:True,&#xa;    &quot;baseConfig&quot;:&quot;overriden&quot;&#xa;  def multipleMethod(self):&#xa;    pass&#xa;&#xa;&#xa;assert isinstance(MultipleClass.__dict__['multipleMethod'],MethodWrapper)&#xa;assert isinstance(MultipleClass.__bases__[0].__dict__['singleMethod'],MethodWrapper)&#xa;assert isinstance(MultipleClass.__bases__[1].__dict__['anotherBaseMethod'],MethodWrapper)&#xa;assert not isinstance(MultipleClass.__bases__[2].__dict__['nonChimeraMethod'],MethodWrapper)&#xa;assert MultipleClass.__dict__[CONFIG_ATTRIBUTE_NAME]['baseConfig']==&quot;overriden&quot;&#xa;assert MultipleClass.__dict__[CONFIG_ATTRIBUTE_NAME]['singleConfig']==True&#xa;assert MultipleClass.__dict__[CONFIG_ATTRIBUTE_NAME]['anotherBaseConfig']==True&#xa;assert MultipleClass.__dict__[CONFIG_ATTRIBUTE_NAME]['multipleConfig']==True&#xa;" id="m90y4NRqcEuC" />
    <sourcecode value=":&#xa;class Test(ChimeraObject):&#xa;  def doFoo(self,a,b,c=None):&#xa;    assert type(self)==Test&#xa;    return True&#xa;&#xa;&#xa;t=Test()&#xa;assert t.doFoo(1,2,3)==True&#xa;" id="RQ71e0DG4TGu" />
    <sourcecode value=":&#xa;class ConfigTest(ChimeraObject):&#xa;  __config__=:&#xa;    &quot;key1&quot;:True,&#xa;    &quot;key2&quot;:False&#xa;&#xa;c=ConfigTest()&#xa;assert c[&quot;key1&quot;]==True&#xa;assert c[&quot;key2&quot;]==False&#xa;assert c.__getitem__(&quot;key1&quot;)==True&#xa;assert c.__getitem__(&quot;key2&quot;)==False&#xa;assert c.__setitem__(&quot;key1&quot;,False)==True&#xa;c[&quot;key1&quot;]=False&#xa;assert c[&quot;key1&quot;]==False&#xa;c[&quot;key1&quot;]=True&#xa;assert_raises(OptionConversionException,c.__setitem__,&quot;key1&quot;,&quot;Am I a bool?&quot;)&#xa;assert c[&quot;key1&quot;]==True&#xa;assert_raises(KeyError,c.__getitem__,&quot;frog&quot;)&#xa;assert_raises(TypeError,c.__getitem__,100)&#xa;" id="6JNBme5VfnGO" />
    <sourcecode value=":&#xa;class MainTest(ChimeraObject):&#xa;  def __init__(self):&#xa;    ChimeraObject.__init__(self)&#xa;    self.counter=0&#xa;&#xa;  def control(self):&#xa;    Execute ten times per second(10Hz)and stop after 1 s,&#xa;    in other words,when counter=frequency&#xa;    self.counter+=1&#xa;    return self.counter&lt;self.getHz()&#xa;&#xa;&#xa;m=MainTest()&#xa;m.setHz(10)&#xa;assert m.__main__()==True&#xa;assert m.counter==m.getHz()&#xa;" id="F4ytrFHHJpZk" />
    <sourcecode value=":&#xa;class Foo(ChimeraObject):pass&#xa;f=Foo()&#xa;assert f.__setlocation__('/Foo/bar')==True&#xa;assert_raises(InvalidLocationException,f.__setlocation__,'Siberian Lakes')&#xa;assert f.getLocation()=='/Foo/bar'&#xa;" id="tXgALFsBDUck" />
    <sourcecode value=":&#xa;class Foo(ChimeraObject):pass&#xa;f=Foo()&#xa;assert f.getState()==State.STOPPED,&quot;Initial object state MUST be STOPPED&quot;&#xa;assert f.__setstate__(State.RUNNING)==State.STOPPED&#xa;assert f.getState()==State.RUNNING&#xa;" id="FOTQt58dR1Lp" />
    <sourcecode value=":&#xa;class Minimo(ChimeraObject):&#xa;  CONST=42&#xa;  def __init__(self):&#xa;    ChimeraObject.__init__(self)&#xa;    self.answer=42&#xa;&#xa;  def __start__(self):&#xa;    return True&#xa;&#xa;  def __stop__(self):&#xa;    return True&#xa;&#xa;  def doMethod(self):&#xa;    return self.answer&#xa;&#xa;  def doRaise(self):&#xa;    raise Exception(str(self.answer))&#xa;&#xa;  @staticmethod&#xa;  def doStatic():&#xa;    return 42&#xa;&#xa;  @classmethod&#xa;  def doClass(cls):&#xa;    return cls.CONST&#xa;&#xa;&#xa;m=Minimo()&#xa;assert m.doMethod()==42&#xa;assert Minimo.doMethod(m)==42&#xa;assert_raises(TypeError,Minimo.doMethod,())&#xa;assert m.doStatic()==42&#xa;assert Minimo.doStatic()==42&#xa;assert m.doClass()==42&#xa;assert Minimo.doClass()==42&#xa;assert_raises(Exception,m.doRaise,())" id="8uvXtEM1t6qP" />
    <sourcecode value=":&#xa;loader=ClassLoader()&#xa;t0=time.time()&#xa;cls=loader.loadClass(&quot;ClassLoaderHelperWorking&quot;,path=[os.path.dirname(__file__)])&#xa;t=time.time()&#xa;assert cls.__name__==&quot;ClassLoaderHelperWorking&quot;&#xa;t0=time.time()&#xa;cls=loader.loadClass(&quot;ClassLoaderHelperWorking&quot;,path=[os.path.dirname(__file__)])&#xa;t1=time.time()-t0&#xa;assert cls.__name__==&quot;ClassLoaderHelperWorking&quot;&#xa;assert t1&lt;t&#xa;loader._cache=:&#xa;&#xa;&#xa;cls=loader.loadClass(&quot;ClAsSloAdErHeLpErWoRkiNg&quot;,path=[os.path.dirname(__file__)])&#xa;assert_raises(ClassLoaderException,loader.loadClass,&quot;ClassLoaderHelperNotFound&quot;)&#xa;assert_raises(ClassLoaderException,loader.loadClass,&quot;ClassLoaderHelperFoundWithoutClass&quot;)&#xa;assert_raises(ClassLoaderException,loader.loadClass,&quot;ClassLoaderHelperFoundNotWorking1&quot;)&#xa;assert_raises(ClassLoaderException,loader.loadClass,&quot;ClassLoaderHelperFoundNotWorking2&quot;)" id="grKt7DAQdo86" />
    <sourcecode value=":&#xa;c=Config(:&#xa;  &quot;key_str&quot;:&quot;value&quot;&#xa;)&#xa;for i in(&quot;valid&quot;,1,True,1.0,object):&#xa;  assert c.__setitem__(&quot;key_str&quot;,i)!=False,&quot;%s (%s) is a valid str configuration&quot;%(i,type(i))&#xa;  assert type(c.__getitem__(&quot;key_str&quot;))==StringType,&quot;should return str object&quot;&#xa;&#xa;" id="ARrwVps1WdoG" />
    <sourcecode value=":&#xa;c=Config(:&#xa;  &quot;key_int&quot;:10,&#xa;  &quot;key_float&quot;:1.0&#xa;)for i in(1,1.0,&quot;1&quot;,&quot;1.0&quot;,&quot;-1&quot;,&quot;-1.0&quot;,&quot;   10  &quot;,True):&#xa;  assert c.__setitem__(&quot;key_int&quot;,i)!=False,&quot;%s (%s) is a valid int configuration&quot;%(i,type(i))&#xa;  assert type(c.__getitem__(&quot;key_int&quot;))==IntType,&quot;should return int object&quot;&#xa;  assert c.__setitem__(&quot;key_float&quot;,i)!=False,&quot;%s (%s) is a valid float configuration&quot;%(i,type(i))&#xa;  assert type(c.__getitem__(&quot;key_float&quot;))==FloatType,&quot;should return str object&quot;&#xa;&#xa;for i in(object,&quot;a10&quot;,&quot;1.a&quot;):&#xa;  assert_raises(OptionConversionException,c.__setitem__,&quot;key_int&quot;,i)&#xa;  assert_raises(OptionConversionException,c.__setitem__,&quot;key_float&quot;,i)&#xa;&#xa;" id="HGzltnz0nFRj" />
    <sourcecode value=":&#xa;c=Config(:&#xa;  &quot;key_bool&quot;:True&#xa;)&#xa;for i in(1,1.0,0,0.0,&quot;y&quot;,&quot;Y&quot;,&quot;yes&quot;,&quot;YES&quot;,&quot;n&quot;,&quot;N&quot;,&quot;no&quot;,&quot;NO&quot;,&#xa;&quot;on&quot;,&quot;ON&quot;,&quot;off&quot;,&quot;OFF&quot;,&quot;true&quot;,&quot;TRUE&quot;,&quot;false&quot;,&quot;FALSE&quot;,True,False):&#xa;  c.__setitem__(&quot;key_bool&quot;,i)&#xa;  assert type(c.__getitem__(&quot;key_bool&quot;))==BooleanType,&quot;should return bool object&quot;&#xa;&#xa;for i in(object,&quot;ok&quot;,10):&#xa;  assert_raises(OptionConversionException,c.__setitem__,&quot;key_bool&quot;,i)&#xa;&#xa;" id="Lnx62MqNBOg9" />
    <sourcecode value=":&#xa;c=Config(:&#xa;  &quot;key_opt_int&quot;:[1,2,3],&#xa;  &quot;key_opt_float&quot;:[1,2.0,4.0],&quot;key_opt_bool&quot;:[1,False],&quot;key_opt_str&quot;:[&quot;one&quot;,&quot;two&quot;,&quot;three&quot;]&#xa;)for i in(1,2,3,True):&#xa;  assert c.__setitem__(&quot;key_opt_int&quot;,i)!=False,&quot;%s (%s) is a valid configuration&quot;%(i,type(i))&#xa;  assert type(c.__getitem__(&quot;key_opt_int&quot;))==IntType,&quot;should return int object&quot;&#xa;&#xa;for i in(&quot;one&quot;,&quot;two&quot;,&quot;three&quot;):&#xa;  assert c.__setitem__(&quot;key_opt_str&quot;,i)!=False,&quot;%s (%s) is a valid configuration&quot;%(i,type(i))&#xa;  assert type(c.__getitem__(&quot;key_opt_str&quot;))==StringType,&quot;should return str object&quot;&#xa;&#xa;for i in(4,5,6,&quot;str&quot;,False):&#xa;  assert_raises(OptionConversionException,c.__setitem__,&quot;key_opt_int&quot;,i)&#xa;&#xa;for i in(&quot;four&quot;,&quot;five&quot;,&quot;six&quot;,1,2,3,True,False):&#xa;  assert_raises(OptionConversionException,c.__setitem__,&quot;key_opt_str&quot;,i)&#xa;&#xa;" id="mJzvhd3DzEMK" />
    <sourcecode value=":&#xa;c=Config(:&#xa;  &quot;key_range&quot;:(1,10)&#xa;)&#xa;for i in range(1,11):&#xa;  assert c.__setitem__(&quot;key_range&quot;,i)!=False,&quot;%s (%s) is a valid configuration&quot;%(i,type(i))&#xa;  assert type(c.__getitem__(&quot;key_range&quot;))==IntType,&quot;should return int object&quot;&#xa;&#xa;for i in(0,11,&quot;str&quot;):&#xa;  assert_raises(OptionConversionException,c.__setitem__,&quot;key_range&quot;,i)&#xa;&#xa;" id="xOTubnDfEwx8" />
    <sourcecode value=":&#xa;d=:&#xa;  &quot;device&quot;:&quot;/dev/ttyS0&quot;,&#xa;  &quot;ccd&quot;:[&quot;imaging&quot;,&quot;tracking&quot;],&quot;exp_time&quot;:(0.1,6000.0),&quot;shutter&quot;:[&quot;open&quot;,&quot;close&quot;,&quot;leave&quot;],&quot;readout_aborted&quot;:True,&quot;readout_mode&quot;:1,&quot;date_format&quot;:&quot;%d%m%y&quot;,&quot;file_format&quot;:&quot;$num-$observer-$date-%objname&quot;,&quot;directory&quot;:&quot;/home/someuser/images&quot;,&quot;save_on_temp&quot;:False,&quot;seq_num&quot;:1,&quot;observer&quot;:&quot;observer name&quot;,&quot;obj_name&quot;:&quot;object name&quot;&#xa;c=Config(d)&#xa;assert len(c)==len(d)&#xa;assert&quot;device&quot;in c&#xa;assert&quot;stuff&quot;not in c&#xa;assert c.keys()==c.keys()&#xa;assert c.values()==c.values()&#xa;assert c.items()==c.items()&#xa;dd=:&#xa;  &quot;new&quot;:10&#xa;&#xa;assert_raises(KeyError,c.__iadd__,dd)&#xa;assert not&quot;new&quot;in c&#xa;c+=:&#xa;  &quot;device&quot;:&quot;foo&quot;&#xa;&#xa;assert c[&quot;device&quot;]==&quot;foo&quot;&#xa;assert isinstance(c,Config)&#xa;" id="Q3TczQledCc8" />
    <sourcecode value=":&#xa;Values=Enum(&quot;A_VALUE&quot;,&quot;OTHER_VALUE&quot;)&#xa;c=Config(:&#xa;  &quot;key_enum&quot;:Values.A_VALUE&#xa;)&#xa;assert c[&quot;key_enum&quot;]==Values.A_VALUE&#xa;for i in Values:&#xa;  assert c.__setitem__(&quot;key_enum&quot;,i)!=False,&quot;%s (%s) is a valid enum configuration&quot;%(i,type(i))&#xa;  assert type(c.__getitem__(&quot;key_enum&quot;))==EnumValue,&quot;should return EnumValue object&quot;&#xa;&#xa;for i in[&quot;A_VALUE&quot;,&quot;OTHER_VALUE&quot;,&quot;a_value&quot;,&quot;other_value&quot;,&quot;a_vAlUe&quot;,&quot;oThEr_VaLuE&quot;]:&#xa;  assert c.__setitem__(&quot;key_enum&quot;,i)!=False,&quot;%s (%s) is a valid enum configuration&quot;%(i,type(i))&#xa;  assert type(c.__getitem__(&quot;key_enum&quot;))==EnumValue,&quot;should return EnumValue object&quot;&#xa;&#xa;assert_raises(KeyError,c.__getitem__,&quot;WHATERVER&quot;)" id="IwGv6s1XllRn" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;self.counter=0&#xa;" id="sSagX5iQcG1T" />
    <sourcecode value=":&#xa;self.fooDone+=self.getProxy().fooDoneClbk&#xa;return True&#xa;" id="cRhDfjguD8bY" />
    <sourcecode value=":&#xa;self.fooDone-=self.getProxy().fooDoneClbk&#xa;" id="9I4MQdsxXOVH" />
    <sourcecode value=":&#xa;self.fooDone(time.time())&#xa;return 42&#xa;" id="gRABpfQVDaE3" />
    <sourcecode value=":&#xa;pass&#xa;" id="lxowW00YCZMg" />
    <sourcecode value=":&#xa;self.counter+=1&#xa;" id="BNA6LfhK5epa" />
    <sourcecode value=":&#xa;return self.counter&#xa;" id="gOxtDTmoPNoJ" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;self.counter=0&#xa;self.results=[]&#xa;" id="beekdMXpscf6" />
    <sourcecode value=":&#xa;self.results.append((when,time.time()))&#xa;self.counter+=1&#xa;assert when,&quot;When it happened?&quot;&#xa;" id="difTJJZAb7D8" />
    <sourcecode value=":&#xa;return self.counter&#xa;" id="b4dUn3H56UaS" />
    <sourcecode value=":&#xa;return self.results&#xa;" id="xgR38zU2ur2q" />
    <sourcecode value=":&#xa;self.manager=Manager()&#xa;" id="IPdKDeevkBDM" />
    <sourcecode value=":&#xa;self.manager.shutdown()&#xa;del self.manager&#xa;" id="Gkf1vsNq2pIv" />
    <sourcecode value=":&#xa;assert self.manager.addClass(Publisher,&quot;p&quot;)!=False&#xa;assert self.manager.addClass(Subscriber,&quot;s&quot;)!=False&#xa;p=self.manager.getProxy(&quot;/Publisher/p&quot;)&#xa;assert isinstance(p,Proxy)&#xa;s=self.manager.getProxy(&quot;/Subscriber/s&quot;)&#xa;assert isinstance(s,Proxy)&#xa;p.fooDone+=s.fooDoneClbk&#xa;assert p.foo()==42&#xa;time.sleep(0.5)&#xa;assert s.getCounter()==1&#xa;assert p.getCounter()==1&#xa;assert p.foo()==42&#xa;time.sleep(0.5)&#xa;assert s.getCounter()==2&#xa;assert p.getCounter()==2&#xa;p.fooDone-=s.fooDoneClbk&#xa;p.fooDone-=p.fooDoneClbk&#xa;assert p.foo()==42&#xa;time.sleep(0.5)&#xa;assert s.getCounter()==2&#xa;assert p.getCounter()==2&#xa;" id="RnvRbBKOyXuT" />
    <sourcecode value=":&#xa;assert self.manager.addClass(Publisher,&quot;p&quot;)!=False&#xa;assert self.manager.addClass(Subscriber,&quot;s&quot;)!=False&#xa;p=self.manager.getProxy(&quot;/Publisher/p&quot;)&#xa;assert isinstance(p,Proxy)&#xa;s=self.manager.getProxy(&quot;/Subscriber/s&quot;)&#xa;assert isinstance(s,Proxy)&#xa;p.fooDone+=s.fooDoneClbk&#xa;for check in range(1):&#xa;  start=time.time()&#xa;  for i in range(100):&#xa;    p.foo()&#xa;&#xa;  end=time.time()&#xa;  time.sleep(5)&#xa;  results=s.getResults()&#xa;  dt=[(t-t0)*1000 for t0,t in results]&#xa;  mean=sum(dt)/len(dt)&#xa;  sigma=math.sqrt(sum([(t-mean)**2 for t in dt])/len(dt))&#xa;  print&quot;;print&quot;;print&quot;;print&quot;;print&quot;;print&quot;;print&quot;;print" id="6kF4G9XnEuLh" />
    <sourcecode value=":&#xa;l=Location('/Class/name?option1=value1,option2=value2')&#xa;assert l&#xa;assert l.host==None&#xa;assert l.port==None&#xa;assert l.cls==&quot;Class&quot;&#xa;assert l.name==&quot;name&quot;&#xa;assert l.config==dict(option1=&quot;value1&quot;,option2=&quot;value2&quot;)&#xa;l=Location('host.com.br:1000/Class/name?option1=value1,option2=value2')&#xa;assert l&#xa;assert l.host=='host.com.br'&#xa;assert l.port==1000&#xa;assert l.cls==&quot;Class&quot;&#xa;assert l.name==&quot;name&quot;&#xa;assert l.config==dict(option1=&quot;value1&quot;,option2=&quot;value2&quot;)&#xa;assert_raises(InvalidLocationException,Location,cls=&quot;Class&quot;,config=dict(option1=&quot;value1&quot;,option2=&quot;value2&quot;))&#xa;assert_raises(InvalidLocationException,Location,name=&quot;name&quot;,config=dict(option1=&quot;value1&quot;,option2=&quot;value2&quot;))&#xa;assert_raises(InvalidLocationException,Location,config=dict(option1=&quot;value1&quot;,option2=&quot;value2&quot;))&#xa;assert_raises(InvalidLocationException,Location,cls=&quot;Class&quot;,name=&quot;&quot;)&#xa;assert_raises(InvalidLocationException,Location,cls=&quot;&quot;,name=&quot;name&quot;)&#xa;assert_raises(InvalidLocationException,Location,cls=&quot;&quot;,name=&quot;&quot;)&#xa;assert Location(cls=&quot;Class&quot;,name=&quot;0&quot;)&#xa;l=Location(cls=&quot;Class&quot;,name=&quot;name&quot;,config=dict(option1=&quot;value1&quot;,option2=&quot;value2&quot;))&#xa;assert l&#xa;assert l.cls==&quot;Class&quot;&#xa;assert l.name==&quot;name&quot;&#xa;assert l.config==dict(option1=&quot;value1&quot;,option2=&quot;value2&quot;)&#xa;assert type(str(l))==StringType&#xa;l=Location(host='host.com.br',port=1000,cls=&quot;Class&quot;,name=&quot;name&quot;,config=dict(option1=&quot;value1&quot;,option2=&quot;value2&quot;))&#xa;assert l&#xa;assert l.host=='host.com.br'&#xa;assert l.port==1000&#xa;assert l.cls==&quot;Class&quot;&#xa;assert l.name==&quot;name&quot;&#xa;assert l.config==dict(option1=&quot;value1&quot;,option2=&quot;value2&quot;)&#xa;assert type(str(l))==StringType&#xa;l=Location(host='host.com.br',cls=&quot;Class&quot;,name=&quot;name&quot;,config=dict(option1=&quot;value1&quot;,option2=&quot;value2&quot;))&#xa;assert l&#xa;assert l.host=='host.com.br'&#xa;assert l.port==None&#xa;assert l.cls==&quot;Class&quot;&#xa;assert l.name==&quot;name&quot;&#xa;assert l.config==dict(option1=&quot;value1&quot;,option2=&quot;value2&quot;)&#xa;assert type(str(l))==StringType&#xa;assert_raises(InvalidLocationException,Location,host='host.com.br',port=&quot;xyz&quot;,&#xa;cls=&quot;Class&quot;,name=&quot;name&quot;,config=dict(option1=&quot;value1&quot;,option2=&quot;value2&quot;))l1=Location('/Class/name')&#xa;l2=Location(l1)&#xa;assert l1&#xa;assert l2&#xa;assert l2.cls==l1.cls&#xa;assert l2.name==l1.name&#xa;assert l2.config==l1.config&#xa;assert l2==l1&#xa;assert id(l2)!=id(l1)&#xa;" id="vT84vPc2IfUz" />
    <sourcecode value=":&#xa;l1=Location('host.com.br:1000/Class/name?option1=value1,option2=value2')&#xa;l2=Location('othr.com.br:1001/Class/name?option3=value3,option4=value4')&#xa;assert hash(l1)==hash(l2)&#xa;assert l1==l2&#xa;l3=Location('host.com.br:1000/Class/name?option1=value1,option2=value2')&#xa;l4=Location('host.com.br:1000/Class/othr?option1=value1,option2=value2')&#xa;assert l3!=l4&#xa;" id="O83emVd22Cx2" />
    <sourcecode value=":&#xa;valid=[&quot;/Class/other?option1=value1,option2=value2&quot;,&#xa;&quot;/Class/other?&quot;,&quot;/class/o?option=&quot;,&quot;/Class/1??option=1&quot;,&quot;/12345Class/o&quot;,&quot;host.com.br:1000/Class/name&quot;,&quot;host.com.br/Class/name&quot;,'200.100.100.100:1000/Class/name','200.100.100.100/Class/name',Location(&quot;/Class/name&quot;),]for l in valid:&#xa;  loc=Location(l)&#xa;  assert loc,&quot;'%s' is not valid&quot;%l&#xa;&#xa;" id="MpIP0FPanaAP" />
    <sourcecode value=":&#xa;invalid=[&quot;  /  Class   /   other   ?   option  1 = value1 , option2  =  value2&quot;,&#xa;&quot;/Who/am/I&quot;,&quot;:1000/Class/name&quot;,]for l in invalid:&#xa;  assert_raises(InvalidLocationException,Location,l)" id="mFjZntzrkcle" />
    <sourcecode value=":&#xa;class Minimo(ChimeraObject):&#xa;  def __init__(self):&#xa;    ChimeraObject.__init__(self)&#xa;    self.t0=time.time()&#xa;&#xa;  def doUnlocked(self):&#xa;    time.sleep(1)&#xa;    t=time.time()-self.t0&#xa;    print&quot;[unlocked] - %s - %.3f&quot;%(threading.currentThread().getName(),t)&#xa;    return t&#xa;&#xa;  @lock&#xa;  def doLocked(self):&#xa;    time.sleep(1)&#xa;    t=time.time()-self.t0&#xa;    print&quot;[ locked ] - %s - %.3f&quot;%(threading.currentThread().getName(),t)&#xa;    return t&#xa;&#xa;&#xa;def doTest(obj):&#xa;  &quot;Rationale: We use 5 threads for each method (locked and;unlocked).As unlocked methods isn't serialized, they runs;'at the same instant',while locked methods will be&#xa;  serialized and will run only when the previous one&#xa;  finishes.Each method simulate a load(sleep of 1s)and&#xa;  then returns the time of completion(with an arbitrary&#xa;  zero point to give small numbers).The deviation from the&#xa;  mean of unlocked methods termination times should be&#xa;  nearly zero,as every methods runs at the same time.For&#xa;  locked ones,the termination time will be a linear&#xa;  function with the slope equals to the load(sleep in this&#xa;  case),and as we use 10 threads for the locked case,the&#xa;  deviation will be~2.872.We use a simple equals_eps to&#xa;  handle load factors that may influence scheduler&#xa;  performance and timmings.&#xa;  unlocked=[]&#xa;  locked=[]&#xa;  def getObj(o):&#xa;    Copy Proxy to share between threads.&#xa;    if isinstance(o,Proxy):&#xa;      return copy.copy(o)&#xa;&#xa;    return o&#xa;&#xa;  def runUnlocked():&#xa;    unlocked.append(getObj(obj).doUnlocked())&#xa;&#xa;  def runLocked():&#xa;    locked.append(getObj(obj).doLocked())&#xa;&#xa;  threads=[]&#xa;  print&#xa;  for i in range(10):&#xa;    t1=threading.Thread(target=runUnlocked,name=&quot;unlocked-%d&quot;%i)&#xa;    t2=threading.Thread(target=runLocked,name=&quot;  lock-%d&quot;%i)&#xa;    t1.start()&#xa;    t2.start()&#xa;    threads+=[t1,t2]&#xa;&#xa;  for t in threads:&#xa;    t.join()&#xa;&#xa;  unlocked_mean=sum(unlocked)/len(unlocked)&#xa;  locked_mean=sum(locked)/len(locked)&#xa;  unlocked_sigma=sqrt(sum([(unlocked_mean-u)**2 for u in unlocked])/len(unlocked))&#xa;  locked_sigma=sqrt(sum([(locked_mean-l)**2 for l in locked])/len(locked))&#xa;  def equals_eps(a,b,eps=1e-3):&#xa;    return abs(a-b)&lt;=eps&#xa;&#xa;  print&quot;unlocked: mean: %.6f sigma: %.6f&quot;%(unlocked_mean,unlocked_sigma)&#xa;  print&quot;locked  : mean: %.6f sigma: %.6f&quot;%(locked_mean,locked_sigma)&#xa;  assert equals_eps(unlocked_sigma,0.0,0.5)&#xa;  assert equals_eps(locked_sigma,2.875,1.0)&#xa;&#xa;m=Minimo()&#xa;doTest(m)&#xa;manager=Manager()&#xa;manager.addClass(Minimo,&quot;m&quot;,start=True)&#xa;p=manager.getProxy(Minimo)&#xa;doTest(p)&#xa;manager.shutdown()&#xa;" id="BknsfV8xZioi" />
    <sourcecode value=":&#xa;class Minimo(ChimeraObject):&#xa;  __config__=:&#xa;    &quot;config&quot;:0&#xa;&#xa;  def __init__(self):&#xa;    ChimeraObject.__init__(self)&#xa;&#xa;  def doWrite(self):&#xa;    for i in range(10):&#xa;      self[&quot;config&quot;]=i&#xa;      print&quot;[ write ] - config=%d&quot;%i&#xa;      sys.stdout.flush()&#xa;      time.sleep(0.1)&#xa;&#xa;&#xa;  def doRead(self):&#xa;    for i in range(1000):&#xa;      t0=time.time()&#xa;      value=self[&quot;config&quot;]&#xa;      t=time.time()-t0&#xa;      print&quot;[  read ] - config=%s took %.6f&quot;%(value,t)&#xa;      sys.stdout.flush()&#xa;&#xa;&#xa;&#xa;m=Minimo()&#xa;t1=threading.Thread(target=lambda:m.doWrite())&#xa;t2=threading.Thread(target=lambda:m.doRead())&#xa;print&#xa;t1.start()&#xa;t2.start()&#xa;t1.join()&#xa;t2.join()" id="dM2D3otGsfnL" />
    <sourcecode value=":&#xa;class Simple(ChimeraObject):&#xa;  def __init__(self):&#xa;    ChimeraObject.__init__(self)&#xa;&#xa;  def answer(self):&#xa;    try:&#xa;      raise ChimeraException(&quot;I'm an Exception, sorry.&quot;)&#xa;&#xa;    except ChimeraException:&#xa;      self.log.exception(&quot;from except: wow, exception caught.&quot;)&#xa;      raise ChimeraException(&quot;I'm a new Exception, sorry again&quot;)&#xa;&#xa;&#xa;&#xa;manager=Manager()&#xa;manager.addClass(Simple,&quot;simple&quot;)&#xa;simple=manager.getProxy(Simple)&#xa;try:&#xa;  simple.answer()&#xa;&#xa;except ChimeraException,e:&#xa;  assert e.cause!=None&#xa;  log.exception(&quot;wow, something wrong&quot;)&#xa;&#xa;manager.shutdown()" id="xdci3eVQRz42" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;" id="sBlu8OwyozHY" />
    <sourcecode value=":&#xa;return 42&#xa;" id="vw3itKGZQZ5C" />
    <sourcecode value=":&#xa;self.manager=Manager()&#xa;" id="2q8PBN088mcU" />
    <sourcecode value=":&#xa;self.manager.shutdown()&#xa;del self.manager&#xa;" id="y0j6mJb8qMDE" />
    <sourcecode value=":&#xa;assert self.manager.addClass(Simple,&quot;simple&quot;,start=True)&#xa;assert_raises(InvalidLocationException,self.manager.addClass,Simple,&quot;simple&quot;)&#xa;assert_raises(NotValidChimeraObjectException,self.manager.addClass,NotValid,&quot;nonono&quot;)&#xa;assert_raises(InvalidLocationException,self.manager.addClass,Simple,&quot;&quot;)&#xa;assert self.manager.addLocation('/ManagerHelper/h',path=[os.path.dirname(__file__)])&#xa;assert_raises(ClassLoaderException,self.manager.addLocation,'/What/h')&#xa;assert_raises(InvalidLocationException,self.manager.addLocation,'foo')&#xa;assert_raises(InvalidLocationException,self.manager.start,&quot;/Who/am/I&quot;)&#xa;assert_raises(ChimeraObjectException,self.manager.addLocation,&#xa;&quot;/ManagerHelperWithInitException/h&quot;,[os.path.dirname(__file__)])assert_raises(ChimeraObjectException,self.manager.addLocation,&#xa;&quot;/ManagerHelperWithStartException/h&quot;,[os.path.dirname(__file__)])" id="hzhWJskxVH0e" />
    <sourcecode value=":&#xa;assert self.manager.addClass(Simple,&quot;simple&quot;)&#xa;assert_raises(InvalidLocationException,self.manager.remove,'Simple/what')&#xa;assert_raises(InvalidLocationException,self.manager.remove,'foo')&#xa;assert_raises(InvalidLocationException,self.manager.stop,'foo')&#xa;assert self.manager.remove('/Simple/simple')==True&#xa;assert self.manager.addLocation(&quot;/ManagerHelperWithStopException/h&quot;,path=[os.path.dirname(__file__)])&#xa;assert_raises(ChimeraObjectException,self.manager.stop,'/ManagerHelperWithStopException/h')&#xa;assert_raises(ChimeraObjectException,self.manager.remove,'/ManagerHelperWithStopException/h')&#xa;assert self.manager.addClass(Simple,&quot;simple&quot;)&#xa;assert self.manager.remove('/Simple/0')==True&#xa;" id="kIwFXvr3Rc7y" />
    <sourcecode value=":&#xa;assert self.manager.addClass(Simple,&quot;simple&quot;)&#xa;assert_raises(InvalidLocationException,self.manager.getProxy,'wrong')&#xa;assert_raises(InvalidLocationException,self.manager.getProxy,'Simple/simple')&#xa;assert self.manager.getProxy('/Simple/simple')&#xa;assert self.manager.getProxy('/Simple/0')&#xa;p=self.manager.getProxy('/Simple/0')&#xa;assert isinstance(p,Proxy)&#xa;assert p.answer()==42&#xa;assert_raises(AttributeError,p.wrong)&#xa;" id="sr1HR8D3UMLt" />
    <sourcecode value=":&#xa;assert self.manager.addClass(Simple,&quot;simple&quot;)&#xa;p=self.manager.getProxy(Simple)&#xa;assert p&#xa;m=p.getManager()&#xa;assert m.GUID()==self.manager.GUID()" id="5BLYWgRFLbIf" />
    <sourcecode value=":&#xa;self.res=ResourcesManager()&#xa;" id="w8ozHfqTWNXJ" />
    <sourcecode value=":&#xa;assert len(self.res)==0&#xa;assert self.res.add(&quot;/Location/l1&quot;,&quot;instance-1&quot;,&quot;uri-1&quot;)==0&#xa;assert_raises(InvalidLocationException,self.res.add,&quot;/Location/l1&quot;,&quot;instance-1&quot;,&quot;uri-1&quot;)&#xa;assert self.res.add(&quot;/Location/l2&quot;,&quot;instance-2&quot;,&quot;uri-2&quot;)==1&#xa;assert_raises(InvalidLocationException,self.res.add,&quot;wrong location&quot;,&quot;instance-2&quot;,&quot;uri-2&quot;)&#xa;assert&quot;/Location/l1&quot;in self.res&#xa;assert&quot;/Location/l2&quot;in self.res&#xa;assert&quot;/Location/0&quot;in self.res&#xa;assert not&quot;/LocationNotExistent/l2&quot;in self.res&#xa;assert len(self.res)==2&#xa;" id="QNguiEEY5Qxe" />
    <sourcecode value=":&#xa;assert len(self.res)==0&#xa;assert self.res.add(&quot;/Location/l1&quot;,&quot;instance-1&quot;,&quot;uri-1&quot;)==0&#xa;assert type(str(self.res.get('/Location/0')))==StringType&#xa;" id="36b8UZmS2LsP" />
    <sourcecode value=":&#xa;assert len(self.res)==0&#xa;assert self.res.add(&quot;/Location/l1&quot;,&quot;instance-1&quot;,&quot;uri-1&quot;)==0&#xa;assert self.res.remove(&quot;/Location/l1&quot;)==True&#xa;assert_raises(ObjectNotFoundException,self.res.remove,&quot;/What/l1&quot;)&#xa;assert_raises(InvalidLocationException,self.res.remove,&quot;wrong location&quot;)&#xa;assert&quot;/Location/l1&quot;not in self.res&#xa;" id="PzERK4ppA4VN" />
    <sourcecode value=":&#xa;assert len(self.res)==0&#xa;assert self.res.add(&quot;/Location/l2&quot;,&quot;instance-2&quot;,&quot;uri-2&quot;)==0&#xa;assert self.res.add(&quot;/Location/l1&quot;,&quot;instance-1&quot;,&quot;uri-1&quot;)==1&#xa;ret=self.res.get(&quot;/Location/l1&quot;)&#xa;assert ret.location==&quot;/Location/l1&quot;&#xa;assert ret.instance==&quot;instance-1&quot;&#xa;assert ret.uri==&quot;uri-1&quot;&#xa;assert_raises(ObjectNotFoundException,self.res.get,&quot;/Location/l99&quot;)&#xa;assert self.res[&quot;/Location/l1&quot;].location==&quot;/Location/l1&quot;&#xa;assert_raises(KeyError,self.res.__getitem__,&quot;/LocationNotExistent/l1&quot;)&#xa;assert_raises(KeyError,self.res.__getitem__,&quot;wrong location&quot;)&#xa;assert self.res.get(&quot;/Location/0&quot;).location==&quot;/Location/l2&quot;&#xa;assert self.res.get(&quot;/Location/1&quot;).location==&quot;/Location/l1&quot;&#xa;assert_raises(ObjectNotFoundException,self.res.get,'/Location/9')&#xa;assert_raises(ObjectNotFoundException,self.res.get,'/LocationNotExistent/0')&#xa;assert_raises(InvalidLocationException,self.res.get,'wrong location')&#xa;" id="PgXYi1vpzUsq" />
    <sourcecode value=":&#xa;assert len(self.res)==0&#xa;assert self.res.add(&quot;/Location/l1&quot;,&quot;instance-1&quot;,&quot;uri-1&quot;)==0&#xa;assert self.res.add(&quot;/Location/l2&quot;,&quot;instance-2&quot;,&quot;uri-2&quot;)==1&#xa;entries=[self.res.get(&quot;/Location/l1&quot;),self.res.get(&quot;/Location/l2&quot;)]&#xa;found=self.res.getByClass(&quot;Location&quot;)&#xa;assert(entries==found)" id="Kw6HPw7ZFehP" />
    <sourcecode value=":&#xa;self.manager=Manager(port=8000)&#xa;self.manager.addClass(Site,&quot;lna&quot;,:&#xa;  &quot;name&quot;:&quot;UFSC&quot;,&#xa;  &quot;latitude&quot;:&quot;-27 36 13 &quot;,&quot;longitude&quot;:&quot;-48 31 20&quot;,&quot;altitude&quot;:&quot;20&quot;,&quot;utc_offset&quot;:&quot;-3&quot;&#xa;)" id="cd9Kmh8NWIMf" />
    <sourcecode value=":&#xa;self.manager.shutdown()&#xa;" id="0ZCUrW71bClh" />
    <sourcecode value=":&#xa;site=self.manager.getProxy(Site)&#xa;try:&#xa;  print&#xa;  print&quot;local:&quot;,site.localtime()&#xa;  print&quot;UT   :&quot;,site.ut()&#xa;  print&quot;JD   :&quot;,site.JD()&#xa;  print&quot;MJD  :&quot;,site.MJD()&#xa;  print&quot;LST  :&quot;,site.LST()&#xa;  print&quot;GST  :&quot;,site.GST()&#xa;&#xa;except Exception,e:&#xa;  printException(e)&#xa;&#xa;" id="zfyapkG5H5GC" />
    <sourcecode value=":&#xa;return True&#xa;site=self.manager.getProxy(Site)&#xa;times=[]&#xa;real_times=[]&#xa;for i in range(100):&#xa;  t0=time.clock()&#xa;  t0_r=time.time()&#xa;  print&quot;\r%s&quot;%site.LST(),&#xa;  times.append(time.clock()-t0)&#xa;  real_times.append(time.time()-t0_r)&#xa;&#xa;print&#xa;print sum(times)/len(times)&#xa;print sum(real_times)/len(real_times)&#xa;" id="1OwIRASHwigj" />
    <sourcecode value=":&#xa;site=self.manager.getProxy(Site)&#xa;try:&#xa;  print&#xa;  print&quot;local   :&quot;,site.localtime()&#xa;  print&#xa;  print&quot;moonrise  :&quot;,site.moonrise()&#xa;  print&quot;moonset   :&quot;,site.moonset()&#xa;  print&quot;moon pos  :&quot;,site.moonpos()&#xa;  print&quot;moon phase:&quot;,site.moonphase()&#xa;  print&#xa;  print&quot;sunrise:&quot;,site.sunrise()&#xa;  print&quot;sunset :&quot;,site.sunset()&#xa;  print&quot;sun pos:&quot;,site.sunpos()&#xa;  print&#xa;  sunset_twilight_begin=site.sunset_twilight_begin()&#xa;  sunset_twilight_end=site.sunset_twilight_end()&#xa;  sunset_twilight_duration=relativedelta(sunset_twilight_end,sunset_twilight_begin)&#xa;  sunrise_twilight_begin=site.sunrise_twilight_begin()&#xa;  sunrise_twilight_end=site.sunrise_twilight_end()&#xa;  sunrise_twilight_duration=relativedelta(sunrise_twilight_end,sunrise_twilight_begin)&#xa;  print&quot;next sunset twilight begins at:&quot;,sunset_twilight_begin&#xa;  print&quot;next sunset twilight ends   at:&quot;,sunset_twilight_end&#xa;  print&quot;sunset twilight duration      :&quot;,sunset_twilight_duration&#xa;  print&#xa;  print&quot;next sunrise twilight begins at:&quot;,sunrise_twilight_begin&#xa;  print&quot;next sunrise twilight ends   at:&quot;,sunrise_twilight_end&#xa;  print&quot;sunrise twilight duration      :&quot;,sunrise_twilight_duration&#xa;&#xa;except Exception,e:&#xa;  printException(e)" id="FfKBL0tx8wDu" />
    <sourcecode value=":&#xa;s=&#xa;site:&#xa;  name:site1&#xa;  type:SiteType&#xa;  host:200.131.64.200&#xa;  port:10000&#xa;  config0:value0&#xa;&#xa;telescope:&#xa;  name:tel1&#xa;  type:TelescopeType&#xa;  host:200.131.64.201&#xa;  port:10001&#xa;  config1:value1&#xa;&#xa;camera:&#xa;  name:cam1&#xa;  type:CameraType&#xa;  host:200.131.64.202&#xa;  port:10002&#xa;  config2:value2&#xa;&#xa;focuser:&#xa;  name:focuser1&#xa;  type:FocuserType&#xa;  host:200.131.64.203&#xa;  port:10003&#xa;  config3:value3&#xa;&#xa;dome:&#xa;  name:dome1&#xa;  type:DomeType&#xa;  host:200.131.64.204&#xa;  port:10004&#xa;  config4:value4&#xa;&#xa;filterwheel:&#xa;  name:wheel1&#xa;  type:FilterWheelType&#xa;  host:200.131.64.205&#xa;  port:10005&#xa;  config5:value5&#xa;  filters:[R,G,B,RGB,CLEAR]&#xa;&#xa;system=SystemConfig(s,loadGlobal=False)&#xa;assert system.sites[0].name==&quot;site1&quot;&#xa;assert system.sites[0].cls==&quot;SiteType&quot;&#xa;assert system.sites[0].host==&quot;200.131.64.200&quot;&#xa;assert system.sites[0].port==10000&#xa;assert system.sites[0].config['config0']=='value0'&#xa;assert system.telescopes[0].name==&quot;tel1&quot;&#xa;assert system.telescopes[0].cls==&quot;TelescopeType&quot;&#xa;assert system.telescopes[0].host==&quot;200.131.64.201&quot;&#xa;assert system.telescopes[0].port==10001&#xa;assert system.telescopes[0].config['config1']=='value1'&#xa;assert system.cameras[0].name==&quot;cam1&quot;&#xa;assert system.cameras[0].cls==&quot;CameraType&quot;&#xa;assert system.cameras[0].host==&quot;200.131.64.202&quot;&#xa;assert system.cameras[0].port==10002&#xa;assert system.cameras[0].config['config2']=='value2'&#xa;assert system.focusers[0].name==&quot;focuser1&quot;&#xa;assert system.focusers[0].cls==&quot;FocuserType&quot;&#xa;assert system.focusers[0].host==&quot;200.131.64.203&quot;&#xa;assert system.focusers[0].port==10003&#xa;assert system.focusers[0].config['config3']=='value3'&#xa;assert system.domes[0].name==&quot;dome1&quot;&#xa;assert system.domes[0].cls==&quot;DomeType&quot;&#xa;assert system.domes[0].host==&quot;200.131.64.204&quot;&#xa;assert system.domes[0].port==10004&#xa;assert system.domes[0].config['config4']=='value4'&#xa;assert system.filterwheels[0].name==&quot;wheel1&quot;&#xa;assert system.filterwheels[0].cls==&quot;FilterWheelType&quot;&#xa;assert system.filterwheels[0].host==&quot;200.131.64.205&quot;&#xa;assert system.filterwheels[0].port==10005&#xa;assert system.filterwheels[0].config['config5']=='value5'&#xa;assert system.filterwheels[0].config['filters']==[&quot;R&quot;,&quot;G&quot;,&quot;B&quot;,&quot;RGB&quot;,&quot;CLEAR&quot;]&#xa;assert len(system.instruments)==5&#xa;system.dump()&#xa;" id="ZCYY0gkfvJtb" />
    <sourcecode value=":&#xa;s=&#xa;site:&#xa;  name:site1&#xa;  host:200.131.64.200&#xa;  port:10000&#xa;  config0:value0&#xa;&#xa;system=SystemConfig(s,loadGlobal=False)&#xa;assert system.sites[0].name==&quot;site1&quot;&#xa;assert system.sites[0].cls==&quot;Site&quot;&#xa;assert system.sites[0].host==&quot;200.131.64.200&quot;&#xa;assert system.sites[0].port==10000&#xa;assert system.sites[0].config['config0']=='value0'&#xa;system.dump()&#xa;" id="2nDv74WZyBfj" />
    <sourcecode value=":&#xa;s=&#xa;site:&#xa;  name:site1&#xa;&#xa;system=SystemConfig(s,loadGlobal=False)&#xa;assert system.sites[0].host==MANAGER_DEFAULT_HOST&#xa;assert system.sites[0].port==MANAGER_DEFAULT_PORT&#xa;system.dump()&#xa;" id="A1O6A1oaj7Ge" />
    <sourcecode value=":&#xa;s=&#xa;telescope:&#xa;  name:tel1&#xa;  driver:DriverType&#xa;&#xa;system=SystemConfig(s,loadGlobal=False)&#xa;assert system.drivers[0].cls=='DriverType'&#xa;assert&quot;device&quot;not in system.drivers[0].config&#xa;assert system.telescopes[0].config['driver']==system.drivers[0]&#xa;system.dump()&#xa;" id="UHfEOtqXNY0L" />
    <sourcecode value=":&#xa;s=&#xa;telescope:&#xa;  name:tel1&#xa;  driver:DriverType&#xa;  device:/dev/ttyS0&#xa;&#xa;system=SystemConfig(s,loadGlobal=False)&#xa;assert system.drivers[0].cls=='DriverType'&#xa;assert system.drivers[0].config[&quot;device&quot;]=='/dev/ttyS0'&#xa;assert system.telescopes[0].config['driver']==system.drivers[0]&#xa;system.dump()&#xa;" id="hUr22sNfhZaD" />
    <sourcecode value=":&#xa;s=&#xa;telescope:&#xa;  name:tel1&#xa;  device:/dev/ttyS0&#xa;  driver:&#xa;    name:driverName&#xa;&#xa;&#xa;assert_raises(TypeNotFoundException,SystemConfig,s)&#xa;s=&#xa;telescope:&#xa;  name:tel1&#xa;  device:/dev/ttyS0&#xa;  driver:&#xa;    type:DriverType&#xa;    device:/dev/ttyS1&#xa;&#xa;&#xa;system=SystemConfig(s,loadGlobal=False)&#xa;assert system.drivers[0].cls=='DriverType'&#xa;assert system.drivers[0].name=='noname'&#xa;assert system.drivers[0].config[&quot;device&quot;]=='/dev/ttyS1'&#xa;assert not'device'in system.telescopes[0].config&#xa;assert system.telescopes[0].config['driver']==system.drivers[0]&#xa;system.dump()&#xa;" id="OoP5NxGMJYvs" />
    <sourcecode value=":&#xa;s=&#xa;telescope:&#xa;  type:$lahlah&#xa;  name:tel1&#xa;&#xa;assert_raises(InvalidLocationException,SystemConfig,s)&#xa;s=&#xa;telescope&#xa;name:0 assert_raises(SystemConfigSyntaxException,SystemConfig,s)&#xa;" id="GPQXvLN9fwUZ" />
    <sourcecode value=":&#xa;s=&#xa;driver:&#xa;  name:simple&#xa;  type:DriverType&#xa;&#xa;system=SystemConfig(s,loadGlobal=False)&#xa;assert system.drivers[0].name=='simple'&#xa;assert system.drivers[0].cls=='DriverType'&#xa;" id="cswFoQm8QbjW" />
    <sourcecode value=":&#xa;s=&#xa;driver:&#xa;  -name:simple&#xa;  type:DriverType-name:simple&#xa;  type:DriverType&#xa;system=SystemConfig(s,loadGlobal=False)&#xa;assert len(system.drivers)==2&#xa;" id="bw91XtXUFVyl" />
    <sourcecode value=":&#xa;s=&#xa;driver:&#xa;  name:simple&#xa;&#xa;assert_raises(TypeNotFoundException,SystemConfig,s)&#xa;" id="ST1fzzO4jgDY" />
    <sourcecode value=":&#xa;s=&#xa;instrument:&#xa;  name:simple&#xa;  type:InstrumentType&#xa;&#xa;system=SystemConfig(s,loadGlobal=False)&#xa;assert system.instruments[0].name=='simple'&#xa;assert system.instruments[0].cls=='InstrumentType'&#xa;" id="YAeForlz6ioA" />
    <sourcecode value=":&#xa;s=&#xa;instrument:&#xa;  -name:simple&#xa;  type:InstrumentType-name:simple&#xa;  type:InstrumentType&#xa;system=SystemConfig(s,loadGlobal=False)&#xa;assert len(system.instruments)==2&#xa;" id="1qc5ZRG74eeV" />
    <sourcecode value=":&#xa;s=&#xa;instrument:&#xa;  name:simple&#xa;&#xa;assert_raises(TypeNotFoundException,SystemConfig,s)&#xa;" id="pieuMIN2jDuG" />
    <sourcecode value=":&#xa;s=&#xa;controller:&#xa;  name:simple&#xa;  type:ControllerType&#xa;&#xa;system=SystemConfig(s,loadGlobal=False)&#xa;assert system.controllers[0].name=='simple'&#xa;assert system.controllers[0].cls=='ControllerType'&#xa;" id="8tJp4D5On8ax" />
    <sourcecode value=":&#xa;s=&#xa;controller:&#xa;  -name:simple&#xa;  type:ControllerType-name:simple&#xa;  type:ControllerType&#xa;system=SystemConfig(s,loadGlobal=False)&#xa;assert len(system.controllers)==2&#xa;" id="5tjq1IovHGpo" />
    <sourcecode value=":&#xa;s=&#xa;controller:&#xa;  name:simple&#xa;&#xa;assert_raises(TypeNotFoundException,SystemConfig,s)&#xa;" id="AwGRA3DU8AKI" />
    <sourcecode value=":&#xa;s=SystemConfig.fromDefault()&#xa;s.dump()" id="SW1ZeKpbkYKC" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;self.tty=None&#xa;self.abort=threading.Event()&#xa;self._slewing=False&#xa;self._slitOpen=False&#xa;self._az_shift=0&#xa;" id="CEd5IalJIBNb" />
    <sourcecode value=":&#xa;self.open()&#xa;return True&#xa;" id="ltI23fdR1HBP" />
    <sourcecode value=":&#xa;self.close()&#xa;return True&#xa;" id="izEhGN6O443I" />
    <sourcecode value=":&#xa;self.getAz()&#xa;return True&#xa;" id="kH8pLB7ul6Eu" />
    <sourcecode value=":&#xa;self._write(&quot;&quot;)&#xa;ret=self._readline()&#xa;if ret!=&quot;INVALIDO&quot;:&#xa;  raise ChimeraException(&quot;Quirk error!!! (%s)&quot;%str(ret))&#xa;&#xa;return True&#xa;" id="S4sB9458HBMB" />
    <sourcecode value=":&#xa;self.tty=serial.Serial(self[&quot;device&quot;],baudrate=9600,&#xa;bytesize=serial.EIGHTBITS,parity=serial.PARITY_NONE,stopbits=serial.STOPBITS_ONE,timeout=self[&quot;init_timeout&quot;],xonxoff=0,rtscts=0)self.tty.open()&#xa;self.tty.flushInput()&#xa;self.tty.flushOutput()&#xa;self._checkDome()&#xa;" id="1IbGRxRkSAwH" />
    <sourcecode value=":&#xa;if self.tty.isOpen():&#xa;  self.tty.close()&#xa;&#xa;" id="X1hxBbDxMBTB" />
    <sourcecode value=":&#xa;self._checkQuirk()&#xa;dome_az=az.D+self._az_shift&#xa;dome_az=dome_az%360&#xa;dome_az=int(math.ceil(dome_az/self[&quot;az_resolution&quot;]))&#xa;pstn=&quot;CUPULA=%03d&quot;%dome_az&#xa;self.tty.setTimeout(self[&quot;slew_timeout&quot;])&#xa;self._write(pstn)&#xa;ack=self._readline()&#xa;if ack==&quot;INVALIDO&quot;:&#xa;  raise IOError(&quot;Error trying to slew the dome to&quot;&#xa;  &quot;azimuth '%s' (dome azimuth '%s').&quot;%(az,dome_az))&#xa;self._slewing=True&#xa;self.slewBegin(az)&#xa;fin=self._readline()&#xa;if fin==&quot;ALARME&quot;:&#xa;  raise IOError(&quot;Error while slewing dome. Some barcodes&quot;&#xa;  &quot; couldn't be read correctly.&quot;&quot; Restarting the dome and trying again.&quot;)&#xa;if fin.startswith(&quot;CUPULA=&quot;):&#xa;  self._slewing=False&#xa;  time.sleep(0.3)&#xa;  self.slewComplete(self.getAz())&#xa;&#xa;else:&#xa;  self._slewing=False&#xa;  raise IOError(&quot;Unknow error while slewing. Received '%s' from dome.&quot;%fin)&#xa;&#xa;" id="r4SCEvNY0mJ3" />
    <sourcecode value=":&#xa;return self._slewing&#xa;" id="wzIttyE9CWkh" />
    <sourcecode value=":&#xa;if not self.isSlewing():return&#xa;self._checkQuirk()&#xa;self._write(&quot;PARAR&quot;)&#xa;self.tty.setTimeout(self[&quot;abort_timeout&quot;])&#xa;ack=self._readline()&#xa;if ack!=&quot;PARADO&quot;:&#xa;  raise IOError(&quot;Error while trying to stop the dome.&quot;)&#xa;&#xa;self.abortComplete(self.getAz())&#xa;" id="FS7Qyp7de6T0" />
    <sourcecode value=":&#xa;self._checkQuirk()&#xa;self.tty.setTimeout(10)&#xa;cmd=&quot;POSICAO?&quot;&#xa;self._write(cmd)&#xa;ack=self._readline()&#xa;if not ack:&#xa;  raise IOError(&quot;Couldn't get azimuth after %d seconds.&quot;%10)&#xa;&#xa;if ack==&quot;INVALIDO&quot;:&#xa;  raise IOError(&quot;Error getting dome azimuth (ack=INVALIDO).&quot;)&#xa;&#xa;if ack.startswith(&quot;CUPULA=&quot;):&#xa;  ack=ack[ack.find(&quot;=&quot;)+1:]&#xa;&#xa;if ack==&quot;ERRO&quot;:&#xa;  raise ChimeraException(&quot;Dome is in invalid state. Hard restart needed.&quot;)&#xa;&#xa;az=int(math.ceil(int(ack)*self[&quot;az_resolution&quot;]))&#xa;az-=self._az_shift&#xa;az=az%360&#xa;return Coord.fromDMS(az)&#xa;" id="P6l3CC4ruosn" />
    <sourcecode value=":&#xa;self._checkQuirk()&#xa;cmd=&quot;ABRIR&quot;&#xa;self._write(cmd)&#xa;ack=self._readline()&#xa;if ack!=&quot;ABRINDO&quot;:&#xa;  raise IOError(&quot;Error trying to open the slit.&quot;)&#xa;&#xa;self.tty.setTimeout(self[&quot;open_timeout&quot;])&#xa;fin=self._readline()&#xa;if not fin:&#xa;  raise IOError(&quot;Dome is still opening after %d seconds&quot;%self[&quot;open_timeout&quot;])&#xa;&#xa;if not fin.startswith(&quot;ABERTO&quot;):&#xa;  raise IOError(&quot;Error opening slit.&quot;)&#xa;&#xa;self._slitOpen=True&#xa;self.slitOpened(self.getAz())&#xa;" id="04SssLfeLn6k" />
    <sourcecode value=":&#xa;self._checkQuirk()&#xa;cmd=&quot;FECHAR&quot;&#xa;self._write(cmd)&#xa;ack=self._readline()&#xa;if ack!=&quot;FECHANDO&quot;:&#xa;  raise IOError(&quot;Error trying to close the slit.&quot;)&#xa;&#xa;self.tty.setTimeout(self[&quot;close_timeout&quot;])&#xa;fin=self._readline()&#xa;if not fin:&#xa;  raise IOError(&quot;Dome is still closing after %d seconds&quot;%self[&quot;close_timeout&quot;])&#xa;&#xa;if not fin.startswith(&quot;FECHADO&quot;):&#xa;  raise IOError(&quot;Error closing slit.&quot;)&#xa;&#xa;self._slitOpen=False&#xa;self.slitClosed(self.getAz())&#xa;" id="apEucLeczGxi" />
    <sourcecode value=":&#xa;return self._slitOpen&#xa;" id="3Qw0gth0utMJ" />
    <sourcecode value=":&#xa;if not self.tty.isOpen():&#xa;  raise IOError(&quot;Device not open&quot;)&#xa;&#xa;self.tty.flushInput()&#xa;return self.tty.read(n)&#xa;" id="lAud1GwWcL9b" />
    <sourcecode value=":&#xa;if not self.tty.isOpen():&#xa;  raise IOError(&quot;Device not open&quot;)&#xa;&#xa;self.tty.flushInput()&#xa;ret=self.tty.readline(None,eol)&#xa;if ret:&#xa;  return ret[:-3]&#xa;&#xa;else:&#xa;  return&quot;&quot;&#xa;&#xa;" id="7z5k2gnwCE6Z" />
    <sourcecode value=":&#xa;ret=int(self._read(1))&#xa;if not ret:&#xa;  return False&#xa;&#xa;return True&#xa;" id="vpb0Vh7r8J8l" />
    <sourcecode value=":&#xa;if not self.tty.isOpen():&#xa;  raise IOError(&quot;Device not open&quot;)&#xa;&#xa;self.tty.flushOutput()&#xa;return self.tty.write(&quot;%s%s&quot;%(data,eol))" id="4LNH3VytSDyr" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;self._position=0&#xa;self._slewing=False&#xa;self._slitOpen=False&#xa;self._abort=threading.Event()&#xa;" id="O4geqPdu7eu6" />
    <sourcecode value=":&#xa;if az>360:&#xa;  raise InvalidDomePositionException(&quot;Cannot slew to %s. &quot;&#xa;  &quot;Outside azimuth limits.&quot;%az)&#xa;self._abort.clear()&#xa;self._slewing=True&#xa;self.slewBegin(az)&#xa;slew_time=(Random().random()*self[&quot;slew_timeout&quot;])/10&#xa;t=0&#xa;while t&lt;slew_time:&#xa;  if self._abort.isSet():&#xa;    self._slewing=False&#xa;    return&#xa;&#xa;  time.sleep(0.1)&#xa;  t+=0.1&#xa;&#xa;self._position=az&#xa;self._slewing=False&#xa;self.slewComplete(self.getAz())&#xa;" id="0CS5rMB3R9gO" />
    <sourcecode value=":&#xa;return self._slewing&#xa;" id="Z3zh2yLesuxK" />
    <sourcecode value=":&#xa;if not self.isSlewing():return&#xa;self._abort.set()&#xa;while self.isSlewing():time.sleep(0.1)&#xa;self.abortComplete(self.getAz())&#xa;" id="mofcgcxhNkyR" />
    <sourcecode value=":&#xa;self._slitOpen=True&#xa;" id="jhR7ROWTmaZi" />
    <sourcecode value=":&#xa;self._slitOpen=False&#xa;" id="xmCjNlSgEXmE" />
    <sourcecode value=":&#xa;return self._slitOpen&#xa;" id="1FZGmLS9F6s5" />
    <sourcecode value=":&#xa;return self._position" id="P4acASinmvIU" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;self._lastFilter=0&#xa;" id="hUj8iKwLKJuN" />
    <sourcecode value=":&#xa;return self._lastFilter&#xa;" id="ugPCzHZI8zqQ" />
    <sourcecode value=":&#xa;self.filterChange(filter,self._lastFilter)&#xa;self._lastFilter=filter" id="PQLVPBwzgQ1t" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;self._position=0&#xa;" id="8mdvAWeWSLzp" />
    <sourcecode value=":&#xa;self._position=int(self[&quot;max_position&quot;]/2)&#xa;self.setHz(1.0/10)&#xa;" id="FzJhKIUTDeDz" />
    <sourcecode value=":&#xa;target=self.getPosition()-n&#xa;if self._inRange(target):&#xa;  self._setPosition(target)&#xa;&#xa;else:&#xa;  raise InvalidFocusPositionException(&quot;%d is outside focuser boundaries.&quot;%target)&#xa;&#xa;" id="5feGHpDK85LM" />
    <sourcecode value=":&#xa;target=self.getPosition()+n&#xa;if self._inRange(target):&#xa;  self._setPosition(target)&#xa;&#xa;else:&#xa;  raise InvalidFocusPositionException(&quot;%d is outside focuser boundaries.&quot;%target)&#xa;&#xa;" id="oSabGCgzMCZI" />
    <sourcecode value=":&#xa;if self._inRange(position):&#xa;  self._setPosition(position)&#xa;&#xa;else:&#xa;  raise InvalidFocusPositionException(&quot;%d is outside focuser boundaries.&quot;%position)&#xa;&#xa;return False&#xa;" id="hMRc7T477TzF" />
    <sourcecode value=":&#xa;return self._position&#xa;" id="kWZdp6srXPwB" />
    <sourcecode value=":&#xa;self.log.info(&quot;Changing focuser to %s&quot;%n)&#xa;self._position=n&#xa;" id="Q9iyWc7sEaax" />
    <sourcecode value=":&#xa;return(self[&quot;min_position&quot;]&lt;=n&lt;=self[&quot;max_position&quot;])&#xa;" id="Q2PSF2M1Qwn8" />
    <sourcecode value=":&#xa;return(self[&quot;min_position&quot;],self[&quot;max_position&quot;])" id="UobxJKCl54n6" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;self.__slewing=False&#xa;self._az=Coord.fromDMS(0)&#xa;self._alt=Coord.fromDMS(70)&#xa;self._slewing=False&#xa;self._tracking=True&#xa;self._parked=False&#xa;self._abort=threading.Event()&#xa;try:&#xa;  self._site=self.getManager().getProxy(self['site'])&#xa;  self._gotSite=True&#xa;&#xa;except:&#xa;  self._site=Site()&#xa;  self._gotSite=False&#xa;&#xa;self._setRaDecFromAltAz()&#xa;" id="NglrkZHdqZSb" />
    <sourcecode value=":&#xa;if self._gotSite:&#xa;  self._site._transferThread()&#xa;  return self._site&#xa;&#xa;else:&#xa;  try:&#xa;    self._site=self.getManager().getProxy(self['site'])&#xa;    self._gotSite=True&#xa;&#xa;  except:&#xa;    pass&#xa;&#xa;&#xa;return self._site&#xa;" id="lTMZ0mAeCzHp" />
    <sourcecode value=":&#xa;raDec=self._getSite().altAzToRaDec(Position.fromAltAz(self._alt,self._az))&#xa;self._ra=raDec.ra&#xa;self._dec=raDec.dec&#xa;" id="VYJhVaUbrL3o" />
    <sourcecode value=":&#xa;altAz=self._getSite().raDecToAltAz(Position.fromRaDec(self._ra,self._dec))&#xa;self._alt=altAz.alt&#xa;self._az=altAz.az&#xa;" id="50vwLwieQVeI" />
    <sourcecode value=":&#xa;self.setHz(1)&#xa;" id="BwRaP3s8OhuP" />
    <sourcecode value=":&#xa;self._getSite()&#xa;if not self._slewing:&#xa;  if self._tracking:&#xa;    self._setAltAzFromRaDec()&#xa;&#xa;  else:&#xa;    self._setRaDecFromAltAz()&#xa;&#xa;&#xa;return True&#xa;" id="f7k1mcQaQk46" />
    <sourcecode value=":&#xa;pass&#xa;" id="aMq04t7dX3lh" />
    <sourcecode value=":&#xa;pass&#xa;" id="RT7yUsdMVOEB" />
    <sourcecode value=":&#xa;pass&#xa;" id="3tUYFgjuIvXT" />
    <sourcecode value=":&#xa;self.slewBegin(position)&#xa;ra_steps=position.ra-self.getRa()&#xa;ra_steps=float(ra_steps/10.0)&#xa;dec_steps=position.dec-self.getDec()&#xa;dec_steps=float(dec_steps/10.0)&#xa;self._slewing=True&#xa;self._abort.clear()&#xa;t=0&#xa;while t&lt;5:&#xa;  if self._abort.isSet():&#xa;    self._slewing=False&#xa;    return&#xa;&#xa;  self._ra+=ra_steps&#xa;  self._dec+=dec_steps&#xa;  self._setAltAzFromRaDec()&#xa;  time.sleep(0.5)&#xa;  t+=0.5&#xa;&#xa;self._slewing=False&#xa;self.slewComplete(self.getPositionRaDec())&#xa;" id="jiv1cSSLq2gG" />
    <sourcecode value=":&#xa;self.slewBegin(self._getSite().altAzToRaDec(position))&#xa;alt_steps=position.alt-self.getAlt()&#xa;alt_steps=float(alt_steps/10.0)&#xa;az_steps=position.az-self.getAz()&#xa;az_steps=float(az_steps/10.0)&#xa;self._slewing=True&#xa;self._abort.clear()&#xa;t=0&#xa;while t&lt;5:&#xa;  if self._abort.isSet():&#xa;    self._slewing=False&#xa;    return&#xa;&#xa;  self._alt+=alt_steps&#xa;  self._az+=az_steps&#xa;  self._setRaDecFromAltAz()&#xa;  time.sleep(0.5)&#xa;  t+=0.5&#xa;&#xa;self._slewing=False&#xa;self.slewComplete(self.getPositionRaDec())&#xa;" id="sGv93GppBzL9" />
    <sourcecode value=":&#xa;return self._slewing&#xa;" id="KILwUQi7WqeR" />
    <sourcecode value=":&#xa;self._abort.set()&#xa;while self.isSlewing():&#xa;  time.sleep(0.1)&#xa;&#xa;self.abortComplete(self.getPositionRaDec())&#xa;" id="Oy4vngKqrXNS" />
    <sourcecode value=":&#xa;pass&#xa;" id="psDgPb842tas" />
    <sourcecode value=":&#xa;pass&#xa;" id="BbJ8p6Ub1sOn" />
    <sourcecode value=":&#xa;pass&#xa;" id="wgBMgsaj2Po4" />
    <sourcecode value=":&#xa;pass&#xa;" id="XVsJdmleGxe9" />
    <sourcecode value=":&#xa;return self._ra&#xa;" id="HitRNvGlhfSQ" />
    <sourcecode value=":&#xa;return self._dec&#xa;" id="fdGMIgnytpRR" />
    <sourcecode value=":&#xa;return self._az&#xa;" id="ncnhPF6Nb4gW" />
    <sourcecode value=":&#xa;return self._alt&#xa;" id="7y6i0mCqlLXX" />
    <sourcecode value=":&#xa;return Position.fromRaDec(self.getRa(),self.getDec())&#xa;" id="AeVvx0Tfo2vP" />
    <sourcecode value=":&#xa;return Position.fromAltAz(self.getAlt(),self.getAz())&#xa;" id="NB3ADyXFXIWc" />
    <sourcecode value=":&#xa;return Position.fromRaDec(self.getRa(),self.getDec())&#xa;" id="YN63fcfI6fyQ" />
    <sourcecode value=":&#xa;return Position.fromAltAz(self.getAlt(),self.getAz())&#xa;" id="IOQN2Onej4Tv" />
    <sourcecode value=":&#xa;return self['align_mode']&#xa;" id="FAszCLudZfKJ" />
    <sourcecode value=":&#xa;return self._getSite()['latitude']&#xa;" id="knbJQubnXgUp" />
    <sourcecode value=":&#xa;return self._getSite()['longitude']&#xa;" id="DiUkMyXYXRLJ" />
    <sourcecode value=":&#xa;return self._getSite().ut()&#xa;" id="B1cgQvz7I8s1" />
    <sourcecode value=":&#xa;return self._getSite().localtime()&#xa;" id="X4epCWpcsX0R" />
    <sourcecode value=":&#xa;return self._getSite()['utc_offset']&#xa;" id="WxfNSfo99WGx" />
    <sourcecode value=":&#xa;return self._getSite().LST()&#xa;" id="nYGw2VtYkz6c" />
    <sourcecode value=":&#xa;pass&#xa;" id="cnjKlpwxnBdS" />
    <sourcecode value=":&#xa;self._ra=position.ra&#xa;self._dec=position.dec&#xa;" id="YpiJ0JjvqKSr" />
    <sourcecode value=":&#xa;self._parked=True&#xa;" id="0TdtoUlMJGut" />
    <sourcecode value=":&#xa;self._parked=False&#xa;" id="O9lhNfY2oVty" />
    <sourcecode value=":&#xa;return self._parked&#xa;" id="LYF9265q4T1D" />
    <sourcecode value=":&#xa;pass&#xa;" id="8CJBfKO1KQn3" />
    <sourcecode value=":&#xa;self._tracking=True&#xa;" id="T7D8S4UiioRM" />
    <sourcecode value=":&#xa;self._tracking=False&#xa;" id="940ptS985I3G" />
    <sourcecode value=":&#xa;return self._tracking" id="K7gPPjdnvpbY" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;self._tty=None&#xa;self._slewRate=None&#xa;self._abort=threading.Event()&#xa;self._slewing=False&#xa;self._errorNo=0&#xa;self._errorString=&quot;&quot;&#xa;self._lastAlignMode=None&#xa;self._parked=False&#xa;self._target_az=None&#xa;self._target_alt=None&#xa;self._calibration=:&#xa;&#xa;&#xa;self._calibration_time=3.0&#xa;self._calibrationFile=os.path.expandvars(&quot;$HOME/.chimera/move_calibration.bin&quot;)&#xa;for rate in SlewRate:&#xa;  self._calibration[rate]=:&#xa;&#xa;&#xa;  for direction in Direction:&#xa;    self._calibration[rate][direction]=1&#xa;&#xa;&#xa;self._calibrated=False&#xa;" id="TnAxrjiBuak2" />
    <sourcecode value=":&#xa;self.open()&#xa;if os.path.exists(self._calibrationFile):&#xa;  try:&#xa;    self._calibration=pickle.loads(open(self._calibrationFile,&quot;r&quot;).read())&#xa;    self.calibrated=True&#xa;&#xa;  except Exception,e:&#xa;    self.log.warning(&quot;Problems reading calibration persisted data (%s)&quot;%e)&#xa;&#xa;&#xa;return True&#xa;" id="m7Bhhvh1kWVa" />
    <sourcecode value=":&#xa;if self.isSlewing():&#xa;  self.abortSlew()&#xa;&#xa;self.close()&#xa;" id="PWH73kh9OgDU" />
    <sourcecode value=":&#xa;pass&#xa;" id="xIsLw5ozFkiA" />
    <sourcecode value=":&#xa;tmp=self._tty.timeout&#xa;self._tty.timeout=5&#xa;align=self.getAlignMode()&#xa;self._tty.timeout=tmp&#xa;if align&lt;0:&#xa;  raise MeadeException(&quot;Couldn't found a Meade telescope on '%s'.&quot;%self[&quot;device&quot;])&#xa;&#xa;return True&#xa;" id="AZbPJJXVShU7" />
    <sourcecode value=":&#xa;self.setAlignMode(self[&quot;align_mode&quot;])&#xa;self._setHighPrecision()&#xa;self.setSlewRate(self[&quot;slew_rate&quot;])&#xa;try:&#xa;  site=self.getManager().getProxy(&quot;/Site/0&quot;)&#xa;  self.setLat(site[&quot;latitude&quot;])&#xa;  self.setLong(site[&quot;longitude&quot;])&#xa;  self.setDate(dt.date.today())&#xa;  self.setLocalTime(dt.datetime.now().time())&#xa;  self.setUTCOffset(site[&quot;utc_offset&quot;])&#xa;&#xa;except ObjectNotFoundException:&#xa;  self.log.warning(&quot;Cannot initialize telescope. &quot;&#xa;  &quot;Site object not available. Telescope&quot;&quot; attitude cannot be determined.&quot;)&#xa;" id="vpaLU3SejIzx" />
    <sourcecode value=":&#xa;self._tty=serial.Serial(self[&quot;device&quot;],&#xa;baudrate=9600,bytesize=serial.EIGHTBITS,parity=serial.PARITY_NONE,stopbits=serial.STOPBITS_ONE,timeout=self[&quot;timeout&quot;],xonxoff=False,rtscts=False)try:&#xa;  self._tty.open()&#xa;  self._checkMeade()&#xa;  if self[&quot;skip_init&quot;]:&#xa;    self.log.info(&quot;Skipping init as requested.&quot;)&#xa;&#xa;  else:&#xa;    self._initTelescope()&#xa;&#xa;  return True&#xa;&#xa;except(serial.SerialException,IOError),e:&#xa;  raise MeadeException(&quot;Error while opening %s.&quot;%self[&quot;device&quot;])&#xa;&#xa;" id="KS51i2yEatET" />
    <sourcecode value=":&#xa;if self._tty.isOpen():&#xa;  self._tty.close()&#xa;  return True&#xa;&#xa;else:&#xa;  return False&#xa;&#xa;" id="oXzOODshTy6K" />
    <sourcecode value=":&#xa;self._write(&quot;:Aa;while not self._tty.inWaiting():&#xa;  time.sleep(1)&#xa;&#xa;tmp=self._read(1)&#xa;return True&#xa;" id="Sdzua5EfY908" />
    <sourcecode value=":&#xa;self._write('\x06')&#xa;ret=self._read(1)&#xa;if ret=='0':&#xa;  ret=self._read(1,flush=False)&#xa;&#xa;if not ret or ret not in&quot;APL&quot;:&#xa;  raise MeadeException(&quot;Couldn't get the alignment mode. Is this a Meade??&quot;)&#xa;&#xa;if ret==&quot;A&quot;:&#xa;  return AlignMode.ALT_AZ&#xa;&#xa;elif ret==&quot;P&quot;:&#xa;  return AlignMode.POLAR&#xa;&#xa;elif ret==&quot;L&quot;:&#xa;  return AlignMode.LAND&#xa;&#xa;" id="HImnSmwk2x9C" />
    <sourcecode value=":&#xa;if mode==self.getAlignMode():&#xa;  return True&#xa;&#xa;if mode==AlignMode.ALT_AZ:&#xa;  self._write(&quot;:AA;&#xa;elif mode==AlignMode.POLAR:&#xa;  self._write(&quot;:AP;&#xa;elif mode==AlignMode.LAND:&#xa;  self._write(&quot;:AL;&#xa;return True&#xa;" id="1k81hHDr956b" />
    <sourcecode value=":&#xa;return self._slewing&#xa;" id="BHtEu92BstQr" />
    <sourcecode value=":&#xa;if self.isSlewing():&#xa;  raise MeadeException(&quot;Telescope already slewing.&quot;)&#xa;&#xa;self.setTargetRaDec(position.ra,position.dec)&#xa;if self._slewToRaDec():&#xa;  self.slewComplete(self.getPositionRaDec())&#xa;  return True&#xa;&#xa;return False&#xa;" id="DbE5SduzehxL" />
    <sourcecode value=":&#xa;self._slewing=True&#xa;self._abort.clear()&#xa;self._write(':MS;start_time=time.time()&#xa;err=self._readbool()&#xa;if err:&#xa;  msg=self._readline()&#xa;  self._slewing=False&#xa;  raise MeadeException(msg[:-1])&#xa;&#xa;target=self.getTargetRaDec()&#xa;return self._waitSlew(start_time,target)&#xa;" id="6OkHt9hJnSrT" />
    <sourcecode value=":&#xa;self.setSlewRate(self[&quot;slew_rate&quot;])&#xa;if self.isSlewing():&#xa;  raise MeadeException(&quot;Telescope already slewing.&quot;)&#xa;&#xa;self.setTargetAltAz(position.alt,position.az)&#xa;if self._slewToAltAz():&#xa;  self.slewComplete(self.getPositionRaDec())&#xa;  return True&#xa;&#xa;return False&#xa;" id="FGu0ijTT8q7J" />
    <sourcecode value=":&#xa;self._slewing=True&#xa;self._abort.clear()&#xa;self._write(':MA;start_time=time.time()&#xa;err=self._readbool()&#xa;if err:&#xa;  self._slewing=False&#xa;  raise MeadeException(&quot;Couldn't slew to ALT/AZ: '%s'.&quot;%self.getTargetAltAz())&#xa;&#xa;target=self.getTargetAltAz()&#xa;return self._waitSlew(start_time,target,local=True)&#xa;" id="rZfDRbpcyjYQ" />
    <sourcecode value=":&#xa;self.slewBegin(target)&#xa;while True:&#xa;  if self._abort.isSet():&#xa;    self._slewing=False&#xa;    return False&#xa;&#xa;  if time.time()>=(start_time+self[&quot;max_slew_time&quot;]):&#xa;    self.abortSlew()&#xa;    self._slewing=False&#xa;    raise MeadeException(&quot;Slew aborted. Max slew time reached.&quot;)&#xa;&#xa;  if local:&#xa;    position=self.getPositionAltAz()&#xa;&#xa;  else:&#xa;    position=self.getPositionRaDec()&#xa;&#xa;  if target.within(position,60,units='arcsec'):&#xa;    time.sleep(self[&quot;stabilization_time&quot;])&#xa;    self._slewing=False&#xa;    return True&#xa;&#xa;  time.sleep(self[&quot;slew_idle_time&quot;])&#xa;&#xa;return True&#xa;" id="KcAIJjgWklUD" />
    <sourcecode value=":&#xa;if not self.isSlewing():&#xa;  return True&#xa;&#xa;self._abort.set()&#xa;self.stopMoveAll()&#xa;time.sleep(self[&quot;stabilization_time&quot;])&#xa;self.abortComplete(self.getPositionRaDec())&#xa;" id="ihIYy8doLLby" />
    <sourcecode value=":&#xa;if duration&lt;=0:&#xa;  raise ValueError(&quot;Slew duration cannot be less than 0.&quot;)&#xa;&#xa;if self.isSlewing():&#xa;  raise MeadeException(&quot;Telescope is slewing. Cannot move.&quot;)&#xa;&#xa;if slewRate:&#xa;  self.setSlewRate(slewRate)&#xa;&#xa;self._slewing=True&#xa;start=time.time()&#xa;self._write(&quot;:M%s;finish=start+duration&#xa;while time.time()&lt;finish:&#xa;  time.sleep(0.01)&#xa;&#xa;self._stopMove(direction)&#xa;self._slewing=False&#xa;return True&#xa;" id="EpiZ8IYGL9Q4" />
    <sourcecode value=":&#xa;self._write(&quot;:Q%s;rate=self.getSlewRate()&#xa;if rate==SlewRate.GUIDE:&#xa;  time.sleep(0.1)&#xa;  return True&#xa;&#xa;elif rate==SlewRate.CENTER:&#xa;  time.sleep(0.2)&#xa;  return True&#xa;&#xa;elif rate==SlewRate.FIND:&#xa;  time.sleep(0.3)&#xa;  return True&#xa;&#xa;elif rate==SlewRate.MAX:&#xa;  time.sleep(0.4)&#xa;  return True&#xa;&#xa;" id="f1CtKiGulrou" />
    <sourcecode value=":&#xa;return self._calibrated&#xa;" id="073vrYlX4Ljm" />
    <sourcecode value=":&#xa;def calcDelta(start,end):&#xa;  return end.angsep(start)&#xa;&#xa;def calibrate(direction,rate):&#xa;  start=self.getPositionRaDec()&#xa;  self._move(direction,self._calibration_time,rate)&#xa;  end=self.getPositionRaDec()&#xa;  return calcDelta(start,end)&#xa;&#xa;for rate in SlewRate:&#xa;  for direction in Direction:&#xa;    self.log.debug(&quot;Calibrating %s %s&quot;%(rate,direction))&#xa;    total=0&#xa;    for i in range(3):&#xa;      total+=calibrate(direction,rate).arcsec()&#xa;&#xa;    self._calibration[rate][direction]=total/3.0&#xa;&#xa;&#xa;try:&#xa;  f=open(self._calibrationFile,&quot;w&quot;)&#xa;  f.write(pickle.dumps(self._calibration))&#xa;  f.close()&#xa;&#xa;except Exception,e:&#xa;  self.log.warning(&quot;Problems persisting calibration data. (%s)&quot;%e)&#xa;&#xa;self.log.info(&quot;Calibration was OK.&quot;)&#xa;self._calibrated=True&#xa;" id="7LJBe3vyD2Hz" />
    <sourcecode value=":&#xa;if not self.isMoveCalibrated():&#xa;  self.log.info(&quot;Telescope fine movement not calibrated. Calibrating now...&quot;)&#xa;  self.calibrateMove()&#xa;&#xa;return arc*(self._calibration_time/self._calibration[rate][direction])&#xa;" id="RRMcTbcrRj49" />
    <sourcecode value=":&#xa;return self._move(Direction.E,&#xa;self._calcDuration(offset,Direction.E,slewRate),slewRate)" id="etfMue2iE7yD" />
    <sourcecode value=":&#xa;return self._move(Direction.W,&#xa;self._calcDuration(offset,Direction.W,slewRate),slewRate)" id="hJSM3iuSzD5N" />
    <sourcecode value=":&#xa;return self._move(Direction.N,&#xa;self._calcDuration(offset,Direction.N,slewRate),slewRate)" id="EguoIuSbnYtt" />
    <sourcecode value=":&#xa;return self._move(Direction.S,&#xa;self._calcDuration(offset,Direction.S,slewRate),slewRate)" id="wBVnxRvdpc5l" />
    <sourcecode value=":&#xa;return self._stopMove(Direction.E)&#xa;" id="ap9ivQlRbRnN" />
    <sourcecode value=":&#xa;return self._stopMove(Direction.W)&#xa;" id="e5AGUvbemuu5" />
    <sourcecode value=":&#xa;return self._stopMove(Direction.N)&#xa;" id="y2elwWqOsQwJ" />
    <sourcecode value=":&#xa;return self._stopMove(Direction.S)&#xa;" id="bxAUN6npZtjS" />
    <sourcecode value=":&#xa;self._write(&quot;:Q;return True&#xa;" id="2QebHN1RSjE7" />
    <sourcecode value=":&#xa;self._write(&quot;:GR;ret=self._readline()&#xa;if len(ret)>9:&#xa;  ret=ret[1:]&#xa;&#xa;return Coord.fromHMS(ret[:-1])&#xa;" id="jCeBvtGn4vGe" />
    <sourcecode value=":&#xa;self._write(&quot;:GD;ret=self._readline()&#xa;if len(ret)>10:&#xa;  ret=ret[1:]&#xa;&#xa;ret=ret.replace('\xdf',':')&#xa;return Coord.fromDMS(ret[:-1])&#xa;" id="a60e1FHdygQW" />
    <sourcecode value=":&#xa;return Position.fromRaDec(self.getRa(),self.getDec())&#xa;" id="yT5w7WS0Rxho" />
    <sourcecode value=":&#xa;return Position.fromAltAz(self.getAlt(),self.getAz())&#xa;" id="WEtv9ajSLqh6" />
    <sourcecode value=":&#xa;return Position.fromRaDec(self.getTargetRa(),self.getTargetDec())&#xa;" id="mx55lkBtVFZv" />
    <sourcecode value=":&#xa;return Position.fromAltAz(self.getTargetAlt(),self.getTargetAz())&#xa;" id="g0yAFV3yLMOZ" />
    <sourcecode value=":&#xa;self.setTargetRa(ra)&#xa;self.setTargetDec(dec)&#xa;return True&#xa;" id="hYN1vlaPB3x4" />
    <sourcecode value=":&#xa;self.setTargetAz(az)&#xa;self.setTargetAlt(alt)&#xa;return True&#xa;" id="z3CYY40nVrBw" />
    <sourcecode value=":&#xa;self._write(&quot;:Gr;ret=self._readline()&#xa;return Coord.fromHMS(ret[:-1])&#xa;" id="EjW2IONsGVx0" />
    <sourcecode value=":&#xa;if not isinstance(ra,Coord):&#xa;  ra=Coord.fromHMS(ra)&#xa;&#xa;self._write(&quot;:Sr%s;ret=self._readbool()&#xa;if not ret:&#xa;  raise MeadeException(&quot;Invalid RA '%s'&quot;%ra)&#xa;&#xa;return True&#xa;" id="pBn5ek3PgP3y" />
    <sourcecode value=":&#xa;if not isinstance(dec,Coord):&#xa;  dec=Coord.fromDMS(dec)&#xa;&#xa;self._write(&quot;:Sd%s;ret=self._readbool()&#xa;if not ret:&#xa;  raise MeadeException(&quot;Invalid DEC '%s'&quot;%dec)&#xa;&#xa;return True&#xa;" id="CuLhPBnn0gpF" />
    <sourcecode value=":&#xa;self._write(&quot;:Gd;ret=self._readline()&#xa;ret=ret.replace('\xdf',':')&#xa;return Coord.fromDMS(ret[:-1])&#xa;" id="HUOp3PsUXFDS" />
    <sourcecode value=":&#xa;self._write(&quot;:GZ;ret=self._readline()&#xa;ret=ret.replace('\xdf',':')&#xa;c=Coord.fromDMS(ret[:-1])&#xa;if self['azimuth180Correct']:&#xa;  self.log.debug('Initial azimuth:  %s'%str(c.toDMS()))&#xa;  if c.toD()>180:&#xa;    c=c-Coord.fromD(180)&#xa;&#xa;  else:&#xa;    c=c+Coord.fromD(180)&#xa;&#xa;  self.log.debug('Final azimuth:  %s'%str(c.toDMS()))&#xa;&#xa;return c&#xa;" id="5nTa0e3XlaGC" />
    <sourcecode value=":&#xa;self._write(&quot;:GA;ret=self._readline()&#xa;ret=ret.replace('\xdf',':')&#xa;return Coord.fromDMS(ret[:-1])&#xa;" id="4eKoCby8A1xR" />
    <sourcecode value=":&#xa;return self._target_alt&#xa;" id="OtPZsKyCDYlj" />
    <sourcecode value=":&#xa;if not isinstance(alt,Coord):&#xa;  alt=Coord.fromD(alt)&#xa;&#xa;self._write(&quot;:Sa%s;ret=self._readbool()&#xa;if not ret:&#xa;  raise MeadeException(&quot;Invalid Altitude '%s'&quot;%alt)&#xa;&#xa;self._target_alt=alt&#xa;return True&#xa;" id="GsWRPHAYeUbn" />
    <sourcecode value=":&#xa;return self._target_az&#xa;" id="BgLl63K8HGZR" />
    <sourcecode value=":&#xa;if not isinstance(az,Coord):&#xa;  az=Coord.fromDMS(az)&#xa;&#xa;self._write(&quot;:Sz%s;ret=self._readbool()&#xa;if not ret:&#xa;  raise MeadeException(&quot;Invalid Azimuth '%s'&quot;%az.strfcoord(&quot;%(d)03d\xdf%(m)02d&quot;))&#xa;&#xa;self._target_az=az&#xa;return True&#xa;" id="fJyxYXOeuEPZ" />
    <sourcecode value=":&#xa;self._write(&quot;:Gt;ret=self._readline()&#xa;ret=ret.replace('\xdf',':')[:-1]&#xa;return Coord.fromDMS(ret)&#xa;" id="YCQC0HyvRzdB" />
    <sourcecode value=":&#xa;if not isinstance(lat,Coord):&#xa;  lat=Coord.fromDMS(lat)&#xa;&#xa;lat_str=lat.strfcoord(&quot;%(d)02d\xdf%(m)02d&quot;)&#xa;self._write(&quot;:St%s;ret=self._readbool()&#xa;if not ret:&#xa;  raise MeadeException(&quot;Invalid Latitude '%s' ('%s')&quot;%(lat,lat_str))&#xa;&#xa;return True&#xa;" id="Q90p8d18lcSR" />
    <sourcecode value=":&#xa;self._write(&quot;:Gg;ret=self._readline()&#xa;ret=ret.replace('\xdf',':')[:-1]&#xa;return Coord.fromDMS(ret)&#xa;" id="DGR6hFT2moVS" />
    <sourcecode value=":&#xa;if not isinstance(coord,Coord):&#xa;  coord=Coord.fromDMS(coord)&#xa;&#xa;self._write(&quot;:Sg%s;ret=self._readbool()&#xa;if not ret:&#xa;  raise MeadeException(&quot;Invalid Longitude '%s'&quot;%long)&#xa;&#xa;return True&#xa;" id="864uuXLFZqH8" />
    <sourcecode value=":&#xa;self._write(&quot;:GC;ret=self._readline()&#xa;return dt.datetime.strptime(ret[:-1],&quot;%m/%d/%y&quot;).date()&#xa;" id="xZDKXK1dtE7P" />
    <sourcecode value=":&#xa;if type(date)==FloatType:&#xa;  date=dt.date.fromtimestamp(date)&#xa;&#xa;self._write(&quot;:SC%s;ret=self._read(1)&#xa;if ret==&quot;0&quot;:&#xa;  self._read(1)&#xa;  raise MeadeException(&quot;Couldn't set date, invalid format '%s'&quot;%date)&#xa;&#xa;elif ret==&quot;1&quot;:&#xa;  tmpTimeout=self._tty.timeout&#xa;  self._tty.timeout=60&#xa;  self._readline()&#xa;  self._readline()&#xa;  self._tty.timeout=tmpTimeout&#xa;  return True&#xa;&#xa;" id="GAy9O5XTdZSh" />
    <sourcecode value=":&#xa;self._write(&quot;:GL;ret=self._readline()&#xa;return dt.datetime.strptime(ret[:-1],&quot;%H:%M:%S&quot;).time()&#xa;" id="TypORXC8zscQ" />
    <sourcecode value=":&#xa;if type(local)==FloatType:&#xa;  local=dt.datetime.fromtimestamp(local).time()&#xa;&#xa;self._write(&quot;:SL%s;ret=self._readbool()&#xa;if not ret:&#xa;  raise MeadeException(&quot;Invalid local time '%s'.&quot;%local)&#xa;&#xa;return True&#xa;" id="df8dWk1EC9tQ" />
    <sourcecode value=":&#xa;self._write(&quot;:GS;ret=self._readline()&#xa;return dt.datetime.strptime(ret[:-1],&quot;%H:%M:%S&quot;).time()&#xa;" id="uLtc4VwQQONQ" />
    <sourcecode value=":&#xa;self._write(&quot;:SS%s;ret=self._readbool()&#xa;if not ret:&#xa;  raise MeadeException(&quot;Invalid Local sidereal time '%s'.&quot;%local)&#xa;&#xa;return True&#xa;" id="juu9IHZacaT3" />
    <sourcecode value=":&#xa;self._write(&quot;:GG;ret=self._readline()&#xa;return ret[:-1]&#xa;" id="DHuLsBuanqid" />
    <sourcecode value=":&#xa;offset=&quot;%+02.1f&quot;%offset&#xa;self._write(&quot;:SG%s;ret=self._readbool()&#xa;if not ret:&#xa;  raise MeadeException(&quot;Invalid UTC offset '%s'.&quot;%offset)&#xa;&#xa;return True&#xa;" id="uaJiQ1L9KWfC" />
    <sourcecode value=":&#xa;self._write(&quot;:GT;ret=self._readline()&#xa;if not ret:&#xa;  raise MeadeException(&quot;Couldn't get the tracking rate&quot;)&#xa;&#xa;ret=float(ret[:-1])&#xa;return ret&#xa;" id="VksqbYL24CJI" />
    <sourcecode value=":&#xa;trk=&quot;%02.1f&quot;%trk&#xa;if len(trk)==3:&#xa;  trk=&quot;0&quot;+trk&#xa;&#xa;self._write(&quot;:ST%s;ret=self._readbool()&#xa;if not ret:&#xa;  raise MeadeException(&quot;Invalid tracking rate '%s'.&quot;%trk)&#xa;&#xa;self._write(&quot;:TM;return ret&#xa;" id="ManQl5jXP8Q1" />
    <sourcecode value=":&#xa;if self.getAlignMode()in(AlignMode.POLAR,AlignMode.ALT_AZ):&#xa;  return True&#xa;&#xa;self.setAlignMode(self._lastAlignMode)&#xa;return True&#xa;" id="jVPRMY2fd37W" />
    <sourcecode value=":&#xa;if self.getAlignMode()==AlignMode.LAND:&#xa;  return True&#xa;&#xa;self._lastAlignMode=self.getAlignMode()&#xa;self.setAlignMode(AlignMode.LAND)&#xa;return True&#xa;" id="cnAGqFk7bSCu" />
    <sourcecode value=":&#xa;if self.getAlignMode()!=AlignMode.LAND:&#xa;  return True&#xa;&#xa;return False&#xa;" id="Kdwt57nsy5OX" />
    <sourcecode value=":&#xa;self._write(&quot;:GR;ret=self._readline()[:-1]&#xa;if len(ret)==7:&#xa;  self._write(&quot;:U;&#xa;return True&#xa;" id="DSj9V7hj82Ms" />
    <sourcecode value=":&#xa;self.setTargetRaDec(position.ra,position.dec)&#xa;self._write(&quot;:CM;ret=self._readline()&#xa;if not ret:&#xa;  raise MeadeException(&quot;Error syncing on '%s' '%s'.&quot;%(position.ra,position.dec))&#xa;&#xa;self.syncComplete(self.getPositionRaDec())&#xa;return True&#xa;" id="vIG3KdtyhkEy" />
    <sourcecode value=":&#xa;if rate==SlewRate.GUIDE:&#xa;  self._write(&quot;:RG;&#xa;elif rate==SlewRate.CENTER:&#xa;  self._write(&quot;:RC;&#xa;elif rate==SlewRate.FIND:&#xa;  self._write(&quot;:RM;&#xa;elif rate==SlewRate.MAX:&#xa;  self._write(&quot;:Sw%d;self._write(&quot;:RS;&#xa;else:&#xa;  raise ValueError(&quot;Invalid slew rate '%s'.&quot;%rate)&#xa;&#xa;self._slewRate=rate&#xa;return True&#xa;" id="jA2R21SW3x3v" />
    <sourcecode value=":&#xa;return self._slewRate&#xa;" id="hZaoCSFfv81U" />
    <sourcecode value=":&#xa;return Position.fromAltAz(self[&quot;park_position_alt&quot;],self[&quot;park_position_az&quot;])&#xa;" id="L1kG9jjKIUkV" />
    <sourcecode value=":&#xa;self[&quot;park_position_az&quot;],self[&quot;park_position_alt&quot;]=position.D&#xa;return True&#xa;" id="qhM897d4XubM" />
    <sourcecode value=":&#xa;return self._parked&#xa;" id="mbenMNCyWIVn" />
    <sourcecode value=":&#xa;if self.isParked():&#xa;  return True&#xa;&#xa;site=self.getManager().getProxy(&quot;/Site/0&quot;)&#xa;self.slewToRaDec(Position.fromRaDec(str(self.getLocalSiderealTime()),&#xa;site[&quot;latitude&quot;]))self.stopTracking()&#xa;self._parked=True&#xa;self.parkComplete()&#xa;return True&#xa;" id="r74LPX8ja2nU" />
    <sourcecode value=":&#xa;if not self.isParked():&#xa;  return True&#xa;&#xa;self.startTracking()&#xa;self._initTelescope()&#xa;self.unparkComplete()&#xa;self._parked=False&#xa;return True&#xa;" id="Z4b74MZE2tLX" />
    <sourcecode value=":&#xa;if not self._tty.isOpen():&#xa;  raise IOError(&quot;Device not open&quot;)&#xa;&#xa;if flush:&#xa;  self._tty.flushInput()&#xa;&#xa;return self._tty.read(n)&#xa;" id="hXcjOyFwAaMR" />
    <sourcecode value=":&#xa;raise IOError(&quot;Device not open&quot;)&#xa;" id="kLVJnsHX13dU" />
    <sourcecode value=":&#xa;ret=int(self._read(1))&#xa;if not ret:&#xa;  return False&#xa;&#xa;return True&#xa;" id="Ruj7MMSlbnCM" />
    <sourcecode value=":&#xa;if not self._tty.isOpen():&#xa;  raise IOError(&quot;Device not open&quot;)&#xa;&#xa;if flush:&#xa;  self._tty.flushOutput()&#xa;&#xa;return self._tty.write(data)" id="aBhBwrWMSKfu" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;self.tty=None&#xa;self._directions=:&#xa;  Direction.IN:&quot;FI&quot;,&#xa;  Direction.OUT:&quot;FO&quot;&#xa;self._modes=:&#xa;  Mode.Manual:&quot;M&quot;,&#xa;  Mode.Free:&quot;F&quot;,Mode.Auto_A:&quot;A&quot;,Mode.Auto_B:&quot;B&quot;&#xa;" id="nLQVfh5D7ECb" />
    <sourcecode value=":&#xa;self.open()&#xa;return True&#xa;" id="EgYLtlvWHqe5" />
    <sourcecode value=":&#xa;self.close()&#xa;return True&#xa;" id="DDDV1pY3LCVu" />
    <sourcecode value=":&#xa;self.tty=serial.Serial(self[&quot;device&quot;],&#xa;baudrate=19200,bytesize=serial.EIGHTBITS,parity=serial.PARITY_NONE,stopbits=serial.STOPBITS_ONE,timeout=None,xonxoff=False,rtscts=False)self.tty.timeout=self[&quot;open_timeout&quot;]&#xa;self.tty.open()&#xa;self.tty.flushInput()&#xa;self.tty.flushOutput()&#xa;self._setMode(Mode.Manual)&#xa;return True&#xa;" id="3KfNU8FkuE88" />
    <sourcecode value=":&#xa;if self.tty.isOpen():&#xa;  self.tty.close()&#xa;  return True&#xa;&#xa;" id="L7ADLGLhDaQZ" />
    <sourcecode value=":&#xa;return self._move(Direction.IN,n)&#xa;" id="tBu4lJcGa2Gp" />
    <sourcecode value=":&#xa;return self._move(Direction.OUT,n)&#xa;" id="cHoc9IwkFsEn" />
    <sourcecode value=":&#xa;current=self.getPosition()&#xa;if current&lt;0:&#xa;  return False&#xa;&#xa;delta=position-current&#xa;if delta>0:&#xa;  return self._move(Direction.OUT,abs(delta))&#xa;&#xa;elif delta&lt;0:&#xa;  return self._move(Direction.IN,abs(delta))&#xa;&#xa;else:&#xa;  return True&#xa;&#xa;" id="SB6AI0yW9Xly" />
    <sourcecode value=":&#xa;if steps&lt;self[&quot;min_position&quot;]or steps>self[&quot;max_position&quot;]:&#xa;  raise InvalidFocusPositionException(&quot;%d is outside focuser limits.&quot;%steps)&#xa;&#xa;if direction not in Direction:&#xa;  raise ValueError(&quot;Invalid direction '%s'.&quot;%direction)&#xa;&#xa;cmd=&quot;%s%04d&quot;%(self._directions[direction],steps)&#xa;self.log.debug(&quot;  move sent: %s&quot;%cmd)&#xa;sys.stdout.flush()&#xa;self.tty.timeout=self[&quot;move_timeout&quot;]&#xa;self._write(cmd)&#xa;ack=self._readline(eol=&quot;\r&quot;)&#xa;self.log.debug(&quot;  move ack: %s &quot;%ack[:-2])&#xa;sys.stdout.flush()&#xa;if not ack:&#xa;  raise IOError(&quot;Error moving the focuser (read timeout).&quot;)&#xa;&#xa;if ack.startswith(&quot;ER=2&quot;):&#xa;  ack=ack=self._readline(eol=&quot;\r&quot;)&#xa;  self.log.debug(&quot;  move ack: %s &quot;%ack[:-2])&#xa;  sys.stdout.flush()&#xa;  if not ack:&#xa;    raise IOError(&quot;Error moving the focuser (read timeout).&quot;)&#xa;&#xa;&#xa;if not ack[:-2]==&quot;*&quot;:&#xa;raise ValueError(&quot;Error moving the focuser (bad ack).&quot;)return True&#xa;" id="pTmDI0RKt5WZ" />
    <sourcecode value=":&#xa;cmd=&quot;FPOSRO&quot;&#xa;self.tty.timeout=self[&quot;open_timeout&quot;]&#xa;self.log.debug(&quot;  getPosition sent: %s&quot;%cmd)&#xa;sys.stdout.flush()&#xa;self._write(cmd)&#xa;ack=self._readline(eol=&quot;\r&quot;)&#xa;self.log.debug(&quot;  getPosition ack: %s&quot;%ack)&#xa;sys.stdout.flush()&#xa;if not ack:&#xa;  raise IOError(&quot;Error getting focuser position (read timeout).&quot;)&#xa;&#xa;try:&#xa;  return int(ack[2:-2])&#xa;&#xa;except ValueError,e:&#xa;  raise IOError(&quot;Error getting focuser position. Invalid position returned '%s'&quot;%ack)&#xa;&#xa;" id="iWxzueVJjMau" />
    <sourcecode value=":&#xa;return(self[&quot;min_position&quot;],self[&quot;max_position&quot;])&#xa;" id="4AVnW6fEVRfU" />
    <sourcecode value=":&#xa;if mode not in Mode:&#xa;  raise ValueError(&quot;Invalid mode '%s'.&quot;%mode)&#xa;&#xa;cmd=&quot;F%sMODE&quot;%mode&#xa;if mode!=Mode.Manual:&#xa;  raise NotImplementedError(&quot;%s mode not supported.&quot;%mode)&#xa;&#xa;self.tty.timeout=self[&quot;open_timeout&quot;]&#xa;self.log.debug(&quot;  setMode sent: %s&quot;%cmd)&#xa;sys.stdout.flush()&#xa;self._write(cmd)&#xa;ack=self._readline(eol=&quot;\r&quot;)&#xa;self.log.debug(&quot;  setMode ack: %s&quot;%ack)&#xa;sys.stdout.flush()&#xa;if not ack:&#xa;  raise IOError(&quot;Error trying to set focuser mode&quot;&#xa;  &quot; to '%s' (read timeout).&quot;%self._modes[mode])&#xa;if not ack[:-2]==&quot;!&quot;:&#xa;raise IOError(&quot;Error setting focuser mode to '%s' (bad ack).&quot;%mode)return True&#xa;" id="bQf5pJZOQc5E" />
    <sourcecode value=":&#xa;return True&#xa;" id="MjKChX2SnqAW" />
    <sourcecode value=":&#xa;if not self.tty.isOpen():&#xa;  raise IOError(&quot;Device not open&quot;)&#xa;&#xa;self.tty.flushInput()&#xa;return self.tty.read(n)&#xa;" id="Vr1GfBm3TdNY" />
    <sourcecode value=":&#xa;if not self.tty.isOpen():&#xa;  raise IOError(&quot;Device not open&quot;)&#xa;&#xa;self.tty.flushInput()&#xa;ret=self.tty.readline(None,eol)&#xa;if ret:&#xa;  return ret&#xa;&#xa;else:&#xa;  return&quot;&quot;&#xa;&#xa;" id="tTlTajMrMuzw" />
    <sourcecode value=":&#xa;ret=int(self._read(1))&#xa;if not ret:&#xa;  return False&#xa;&#xa;return True&#xa;" id="TTaxXD9phuoo" />
    <sourcecode value=":&#xa;if not self.tty.isOpen():&#xa;  raise IOError(&quot;Device not open&quot;)&#xa;&#xa;self.tty.flushOutput()&#xa;return self.tty.write(&quot;%s%s&quot;%(data,eol))" id="R49MsbwvBNur" />
    <sourcecode value=":&#xa;self.__send=send&#xa;self.__name=name&#xa;" id="KzNhyvRrkhei" />
    <sourcecode value=":&#xa;try:&#xa;  return self.__send(self.__name,args)&#xa;&#xa;except socket.error,e:&#xa;  logging.error(&quot;Error while calling remote method (%s). %s&quot;%(self.__name,e))&#xa;  return False&#xa;&#xa;" id="SgqghKqdFuGq" />
    <sourcecode value=":&#xa;return&quot;&lt;RPC Wrapper for method %s>&quot;%self.__name" id="IsKk1ZLdMukM" />
    <sourcecode value=":&#xa;ChimeraException.__init__(self,msg)&#xa;self.code=code&#xa;" id="6YVMNovolXQ0" />
    <sourcecode value=":&#xa;return&quot;%s (%d)&quot;%(self.message,self.code)&#xa;" id="hyOWw0hfZhAd" />
    <sourcecode value=":&#xa;self.mode=mode.mode&#xa;self.gain=float(hex(mode.gain).split('x')[1])/100.0&#xa;self.width=mode.width&#xa;self.height=mode.height&#xa;self.pixelWidth=float(hex(mode.pixel_width).split('x')[1])/100.0&#xa;self.pixelHeight=float(hex(mode.pixel_height).split('x')[1])/100.0&#xa;" id="Fjotsu1JkP0i" />
    <sourcecode value=":&#xa;return(self.width,self.height)&#xa;" id="hyC34eYRcsTI" />
    <sourcecode value=":&#xa;return(self.height,self.width)&#xa;" id="XqU7gxOGoZBo" />
    <sourcecode value=":&#xa;return[0,0,self.width,self.height]&#xa;" id="Ggp2F0okMe0T" />
    <sourcecode value=":&#xa;return(self.pixelWidth,self.pixelHeight)&#xa;" id="yVdI7bjPmbgb" />
    <sourcecode value=":&#xa;return[0,self.width]&#xa;" id="GMM0x0bWTiuX" />
    <sourcecode value=":&#xa;s=&quot;mode: %d: \n\tgain: %.2f\n\tWxH: [%d,%d]&quot;\&#xa;&quot;\n\tpix WxH: [%.2f, %.2f]&quot;%(self.mode,self.gain,self.width,self.height,self.pixelWidth,self.pixelHeight)return s&#xa;" id="rdAIL2oUp4H9" />
    <sourcecode value=":&#xa;return self.__str__()&#xa;" id="hBPUGebpgdR9" />
    <sourcecode value=":&#xa;if sensor not in[&quot;ccd&quot;,&quot;amb&quot;]:&#xa;  sensor=&quot;ccd&quot;&#xa;&#xa;temp=float(temp)&#xa;if temp&lt;-50.0:&#xa;  temp=-50.0&#xa;&#xa;elif temp>35.0:&#xa;  temp=35.0&#xa;&#xa;r=cls.r0*math.exp((math.log(cls.r_ratio[sensor])*(cls.t0-temp))/cls.dt[sensor])&#xa;SetPoint=(cls.max_ad/((cls.r_bridge[sensor]/r)+1.0))+0.5&#xa;return int(SetPoint)&#xa;" id="aNI1QpinaJd0" />
    <sourcecode value=":&#xa;if sensor not in[&quot;ccd&quot;,&quot;amb&quot;]:&#xa;  sensor=&quot;ccd&quot;&#xa;&#xa;SetPoint=int(SetPoint)&#xa;if SetPoint&lt;1:&#xa;  SetPoint=1&#xa;&#xa;elif SetPoint>=(cls.max_ad-1):&#xa;  SetPoint=cls.max_ad-1&#xa;&#xa;r=cls.r_bridge[sensor]/((float(cls.max_ad)/SetPoint)-1.0)&#xa;temp=cls.t0-(cls.dt[sensor]*(math.log(r/cls.r0)/math.log(cls.r_ratio[sensor])))&#xa;return temp&#xa;" id="Nry7ttHjXEBR" />
    <sourcecode value=":&#xa;pass&#xa;" id="845B1TNAlhqX" />
    <sourcecode value=":&#xa;try:&#xa;  return self._cmd(udrv.CC_OPEN_DRIVER,None,None)&#xa;&#xa;except SBIGException,e:&#xa;  if e.code==udrv.CE_DRIVER_NOT_CLOSED:&#xa;    return True&#xa;&#xa;  else:&#xa;    raise&#xa;&#xa;&#xa;" id="XdFGJ3o5PEWx" />
    <sourcecode value=":&#xa;return self._cmd(udrv.CC_CLOSE_DRIVER,None,None)&#xa;" id="KAbkP5happBU" />
    <sourcecode value=":&#xa;odp=udrv.OpenDeviceParams()&#xa;odp.deviceType=device&#xa;try:&#xa;  return self._cmd(udrv.CC_OPEN_DEVICE,odp,None)&#xa;&#xa;except SBIGException,e:&#xa;  if e.code==udrv.CE_DEVICE_NOT_CLOSED:&#xa;    return True&#xa;&#xa;  else:&#xa;    raise&#xa;&#xa;&#xa;" id="OH4B6FfXoGHG" />
    <sourcecode value=":&#xa;return self._cmd(udrv.CC_CLOSE_DEVICE,None,None)&#xa;" id="DRXFXJqXmHeX" />
    <sourcecode value=":&#xa;elp=udrv.EstablishLinkParams()&#xa;elr=udrv.EstablishLinkResults()&#xa;err=self._cmd(udrv.CC_ESTABLISH_LINK,elp,elr)&#xa;if not err:&#xa;  self.queryCCDInfo()&#xa;&#xa;return err&#xa;" id="F15zGhUZs9Bg" />
    <sourcecode value=":&#xa;glsr=udrv.GetLinkStatusResults()&#xa;self._cmd(udrv.CC_GET_LINK_STATUS,None,glsr)&#xa;return bool(glsr.linkEstablished)&#xa;" id="bZYTjj7msTit" />
    <sourcecode value=":&#xa;sep=udrv.StartExposureParams()&#xa;sep.ccd=ccd&#xa;sep.openShutter=shutter&#xa;sep.abgState=0&#xa;sep.exposureTime=exp_time&#xa;return self._cmd(udrv.CC_START_EXPOSURE,sep,None)&#xa;" id="C7Z2YHvj0urW" />
    <sourcecode value=":&#xa;eep=udrv.EndExposureParams()&#xa;eep.ccd=ccd&#xa;return self._cmd(udrv.CC_END_EXPOSURE,eep,None)&#xa;" id="aLWY5FaMFoEu" />
    <sourcecode value=":&#xa;if ccd==self.imaging:&#xa;  return((self._status(udrv.CC_START_EXPOSURE)&amp;self._imgComplete)==self._imgInProgress)&#xa;&#xa;if ccd==self.tracking:&#xa;  return((self._status(udrv.CC_START_EXPOSURE)&amp;self._trkComplete)==self._trkInProgress)&#xa;&#xa;" id="3kpI6fatEnm0" />
    <sourcecode value=":&#xa;if mode not in self.readoutModes[ccd].keys():&#xa;  raise ValueError(&quot;Invalid readout mode&quot;)&#xa;&#xa;readoutMode=self.readoutModes[ccd][mode]&#xa;window=(window or[])or readoutMode.getWindow()&#xa;if(window[0]&lt;0 or window[0]>readoutMode.height):&#xa;  raise ValueError(&quot;Invalid window top point&quot;)&#xa;&#xa;if(window[1]&lt;0 or window[1]>readoutMode.width):&#xa;  raise ValueError(&quot;Invalid window left point&quot;)&#xa;&#xa;if(window[2]&lt;0 or window[2]>readoutMode.width):&#xa;  raise ValueError(&quot;Invalid window width&quot;)&#xa;&#xa;if(window[3]&lt;0 or window[3]>readoutMode.height):&#xa;  raise ValueError(&quot;Invalid window height&quot;)&#xa;&#xa;srp=udrv.StartReadoutParams()&#xa;srp.ccd=ccd&#xa;srp.readoutMode=mode&#xa;srp.top=window[0]&#xa;srp.left=window[1]&#xa;srp.width=window[2]&#xa;srp.height=window[3]&#xa;return self._cmd(udrv.CC_START_READOUT,srp,None)&#xa;" id="q3YVtLPoPiTY" />
    <sourcecode value=":&#xa;erp=udrv.EndReadoutParams()&#xa;erp.ccd=ccd&#xa;return self._cmd(udrv.CC_END_READOUT,erp,None)&#xa;" id="1PxvXuiwFHmG" />
    <sourcecode value=":&#xa;if mode not in self.readoutModes[ccd].keys():&#xa;  raise ValueError(&quot;Invalid readout mode&quot;)&#xa;&#xa;readoutMode=self.readoutModes[ccd][mode]&#xa;line=line or readoutMode.getLine()&#xa;if(line[0]&lt;0 or line[0]>readoutMode.width):&#xa;  raise ValueError(&quot;Invalid pixel start&quot;)&#xa;&#xa;if(line[1]&lt;0 or line[1]>readoutMode.width):&#xa;  raise ValueError(&quot;Invalid pixel lenght&quot;)&#xa;&#xa;rolp=udrv.ReadoutLineParams()&#xa;rolp.ccd=ccd&#xa;rolp.readoutMode=mode&#xa;rolp.pixelStart=line[0]&#xa;rolp.pixelLength=line[1]&#xa;buff=numpy.zeros(line[1],numpy.uint16)&#xa;self._cmd(udrv.CC_READOUT_LINE,rolp,buff)&#xa;return buff&#xa;" id="UyCpv4KkNLNm" />
    <sourcecode value=":&#xa;usb=udrv.QueryUSBResults()&#xa;self._cmd(udrv.CC_QUERY_USB,None,usb)&#xa;cams=[]&#xa;for cam in usb.usbInfo:&#xa;  if cam.cameraFound:&#xa;    cams.append(cam.name)&#xa;&#xa;&#xa;return cams&#xa;" id="Qlj1Q0V9bjBW" />
    <sourcecode value=":&#xa;pass&#xa;" id="Pi1yRCUkC39D" />
    <sourcecode value=":&#xa;infoImg=udrv.GetCCDInfoResults0()&#xa;infoTrk=udrv.GetCCDInfoResults0()&#xa;gcip=udrv.GetCCDInfoParams()&#xa;gcip.request=udrv.CCD_INFO_IMAGING&#xa;self._cmd(udrv.CC_GET_CCD_INFO,gcip,infoImg)&#xa;gcip.request=udrv.CCD_INFO_TRACKING&#xa;self._cmd(udrv.CC_GET_CCD_INFO,gcip,infoTrk)&#xa;for i in range(infoImg.readoutModes):&#xa;  mode=infoImg.readoutInfo[i]&#xa;  self.readoutModes[self.imaging][mode.mode]=ReadoutMode(mode)&#xa;&#xa;for i in range(infoTrk.readoutModes):&#xa;  mode=infoTrk.readoutInfo[i]&#xa;  self.readoutModes[self.tracking][mode.mode]=ReadoutMode(mode)&#xa;&#xa;return True&#xa;" id="OEpYIylKCcwk" />
    <sourcecode value=":&#xa;strp=udrv.SetTemperatureRegulationParams()&#xa;if regulation==True:&#xa;  strp.regulation=udrv.REGULATION_ON&#xa;&#xa;else:&#xa;  strp.regulation=udrv.REGULATION_OFF&#xa;&#xa;strp.ccdSetpoint=TemperatureSetPoint.toAD(setpoint)&#xa;self._cmd(udrv.CC_SET_TEMPERATURE_REGULATION,strp,None)&#xa;if autofreeze==True:&#xa;  strp=udrv.SetTemperatureRegulationParams()&#xa;  strp.regulation=udrv.REGULATION_ENABLE_AUTOFREEZE&#xa;  return self._cmd(udrv.CC_SET_TEMPERATURE_REGULATION,strp,None)&#xa;&#xa;return True&#xa;" id="YSfk2ZTI42JW" />
    <sourcecode value=":&#xa;" id="u337yrK4ifyk" />
    <sourcecode value=":&#xa;self.manager=Manager(port=8000)&#xa;self.manager.addClass(Site,&quot;lna&quot;,:&#xa;  &quot;name&quot;:&quot;LNA&quot;,&#xa;  &quot;latitude&quot;:&quot;-22 32 03&quot;,&quot;longitude&quot;:&quot;-45 34 57&quot;,&quot;altitude&quot;:&quot;1896&quot;,&quot;utc_offset&quot;:&quot;-3&quot;&#xa;)self.manager.addClass(Meade,&quot;meade&quot;,:&#xa;  &quot;device&quot;:&quot;/dev/ttyS0&quot;&#xa;)&#xa;@callback(self.manager)&#xa;def slewBeginClbk(target):&#xa;  print time.time(),&quot;Slew begin. target=%s&quot;%str(target)&#xa;&#xa;@callback(self.manager)&#xa;def slewCompleteClbk(position):&#xa;  print time.time(),&quot;Slew complete. position=%s&quot;%str(position)&#xa;&#xa;@callback(self.manager)&#xa;def parkCompleteClbk(position):&#xa;  print time.time(),&quot;Park complete. position=%s&quot;%str(position)&#xa;&#xa;@callback(self.manager)&#xa;def unparkCompleteClbk(position):&#xa;  print time.time(),&quot;Unpark complete. position=%s&quot;%str(position)&#xa;&#xa;self.m=self.manager.getProxy(Meade)&#xa;self.m.slewBegin+=slewBeginClbk&#xa;self.m.slewComplete+=slewCompleteClbk&#xa;self.m.parkComplete+=parkCompleteClbk&#xa;self.m.unparkComplete+=unparkCompleteClbk&#xa;" id="oyJQw2d8HN1s" />
    <sourcecode value=":&#xa;m=self.m&#xa;print&quot;align mode:&quot;,m.getAlignMode()&#xa;print&quot;ra :&quot;,m.getRa()&#xa;print&quot;dec:&quot;,m.getDec()&#xa;print&quot;az :&quot;,m.getAz()&#xa;print&quot;alt:&quot;,m.getAlt()&#xa;print&quot;lat :&quot;,m.getLat()&#xa;print&quot;long:&quot;,m.getLong()&#xa;print&quot;date:&quot;,m.getDate()&#xa;print&quot;time:&quot;,m.getLocalTime()&#xa;print&quot;to utc:&quot;,m.getUTCOffset()&#xa;print&quot;lst:&quot;,m.getLocalSiderealTime()&#xa;print&quot;tracking rate:&quot;,m.getCurrentTrackingRate()&#xa;" id="u16BM51oRiuw" />
    <sourcecode value=":&#xa;m=self.m&#xa;try:&#xa;  m.setLat(&quot;-22 32 03&quot;)&#xa;  m.setLong(&quot;-45 34 57&quot;)&#xa;  m.setDate(time.time())&#xa;  m.setLocalTime(time.time())&#xa;  m.setUTCOffset(3)&#xa;  m.setLat(Coord.fromDMS(&quot;-22 32 03&quot;))&#xa;  m.setLong(Coord.fromDMS(&quot;-45 34 57&quot;))&#xa;  m.setDate(dt.date.today())&#xa;  m.setLocalTime(dt.datetime.now().time())&#xa;  m.setUTCOffset(3)&#xa;&#xa;except Exception:&#xa;  log.exception(&quot;error&quot;)&#xa;&#xa;" id="jDz9vr5uQKWQ" />
    <sourcecode value=":&#xa;m=self.m&#xa;if header:&#xa;  print&quot;%20s %20s %20s %20s %20s&quot;%(&quot;LST&quot;,&quot;RA&quot;,&quot;DEC&quot;,&quot;AZ&quot;,&quot;ALT&quot;)&#xa;&#xa;print&quot;%20s %20s %20s %20s %20s&quot;%(m.getLocalSiderealTime(),&#xa;m.getRa(),m.getDec(),m.getAz(),m.getAlt())" id="G1HfJl3oyyYd" />
    <sourcecode value=":&#xa;m=self.m&#xa;print&quot;syncing...&quot;&#xa;m.sync(&quot;10 00 00&quot;,&quot;00 00 00&quot;)&#xa;" id="0MiEuraiPj0N" />
    <sourcecode value=":&#xa;m=self.m&#xa;print&#xa;print&quot;current slew rate:&quot;,m.getSlewRate()&#xa;for rate in SlewRate:&#xa;  m.setSlewRate(rate)&#xa;  print&quot;current slew rate:&quot;,m.getSlewRate()&#xa;&#xa;" id="5NHT4IqtzPnd" />
    <sourcecode value=":&#xa;m=self.m&#xa;print&#xa;for rate in SlewRate:&#xa;  print&quot;moving to East at %s rate:&quot;%rate,&#xa;  t=time.time()&#xa;  m.moveEast(5,rate)&#xa;  print time.time()-t&#xa;  print&quot;moving to West at %s rate:&quot;%rate,&#xa;  t=time.time()&#xa;  m.moveWest(5,rate)&#xa;  print time.time()-t&#xa;  print&quot;moving to North at %s rate:&quot;%rate,&#xa;  t=time.time()&#xa;  m.moveNorth(5,rate)&#xa;  print time.time()-t&#xa;  print&quot;moving to South at %s rate:&quot;%rate,&#xa;  t=time.time()&#xa;  m.moveSouth(5,rate)&#xa;  print time.time()-t&#xa;  print&#xa;  print&#xa;&#xa;" id="rcgo1TSoYTt6" />
    <sourcecode value=":&#xa;m=self.m&#xa;for mode in AlignMode:&#xa;  print&quot;current align mode:&quot;,m.getAlignMode()&#xa;  print&quot;switching to:&quot;,mode&#xa;  m.setAlignMode(mode)&#xa;  print&quot;current align mode:&quot;,m.getAlignMode()&#xa;  print&#xa;&#xa;" id="ma0J4sPfyGjk" />
    <sourcecode value=":&#xa;m=self.m&#xa;print&#xa;m.setAlignMode(AlignMode.POLAR)&#xa;print&quot;current align mode:&quot;,m.getAlignMode()&#xa;print&quot;setting new date and time...&quot;&#xa;self.test_set_info()&#xa;print&#xa;self.printCoord(header=True)&#xa;for i in range(10):&#xa;  self.printCoord()&#xa;  time.sleep(1)&#xa;&#xa;print&quot;stopping tracking...&quot;&#xa;sys.stdout.flush()&#xa;m.stopTracking()&#xa;start=time.time()&#xa;finish=start+30&#xa;print&quot;waiting&quot;,&#xa;sys.stdout.flush()&#xa;while time.time()&lt;finish:&#xa;  time.sleep(1)&#xa;&#xa;print&quot;re-starting tracking...&quot;&#xa;sys.stdout.flush()&#xa;m.startTracking()&#xa;print&quot;using old date and time...&quot;&#xa;print&#xa;self.printCoord(header=True)&#xa;for i in range(10):&#xa;  self.printCoord()&#xa;  time.sleep(1)&#xa;&#xa;print&#xa;print&quot;setting new date and time...&quot;&#xa;self.test_set_info()&#xa;print&#xa;for i in range(10):&#xa;  self.printCoord()&#xa;  time.sleep(1)&#xa;&#xa;" id="9uW5BFql3Shd" />
    <sourcecode value=":&#xa;m=self.m&#xa;print&#xa;print&quot;=&quot;*50&#xa;print&quot;Park and unpark test&quot;&#xa;print&quot;=&quot;*50&#xa;print&quot;Initial conditions (post power-on):&quot;&#xa;self.test_print_info()&#xa;print&#xa;print&quot;Starting the scope...&quot;&#xa;self.test_set_info()&#xa;print&#xa;print&quot;Scope location, date, time updated, new conditions:&quot;&#xa;self.test_print_info()&#xa;print&#xa;print&quot;Pooling telescope position:&quot;&#xa;ra=m.getRa()&#xa;self.printCoord(header=True)&#xa;for i in range(10):&#xa;  self.printCoord()&#xa;  time.sleep(1)&#xa;&#xa;print&#xa;print&quot;Slewing... to %s -70:00:00&quot;%ra&#xa;m.slewToRaDec(Position.fromRaDec(ra,&quot;-70:00:00&quot;))&#xa;print&#xa;print&quot;Parking the scope at %s (lst: %s)&quot;%(time.strftime(&quot;%c&quot;),m.getLocalSiderealTime())&#xa;m.park()&#xa;print&#xa;print&quot;Pooling telescope position:&quot;&#xa;self.printCoord(header=True)&#xa;for i in range(10):&#xa;  self.printCoord()&#xa;  time.sleep(1)&#xa;&#xa;print&#xa;start=time.time()&#xa;finish=start+(2*60)&#xa;print&quot;Waiting              &quot;,&#xa;while time.time()&lt;finish:&#xa;  update_scroll_spinner()&#xa;  time.sleep(0.2)&#xa;&#xa;print&#xa;print&quot;Unparking the scope at %s (lst: %s)&quot;%(time.strftime(&quot;%c&quot;),&#xa;m.getLocalSiderealTime())m.unpark()&#xa;print&#xa;print&quot;Pooling telescope position:&quot;&#xa;for i in range(10):&#xa;  self.printCoord()&#xa;  time.sleep(1)&#xa;&#xa;print&quot;=&quot;*50&#xa;" id="I12LUhwBoE4C" />
    <sourcecode value=":&#xa;m=self.m&#xa;self.printCoord()&#xa;m.slewToAltAz((&quot;40:00:00&quot;,&quot;180:00:00&quot;))&#xa;self.printCoord()&#xa;" id="H7O5JQHK4lHP" />
    <sourcecode value=":&#xa;m=self.m&#xa;print&#xa;self.printCoord(header=True)&#xa;ra=m.getRa()&#xa;m.slewToRaDec(Position.fromRaDec(ra,&quot;-70:00:00&quot;))&#xa;self.printCoord()&#xa;" id="r2OwnfLTHzhy" />
    <sourcecode value=":&#xa;print&quot;Calibrating movement...&quot;&#xa;self.m.calibrateMove()&#xa;for rate in SlewRate:&#xa;  start=self.m.getPositionRaDec()&#xa;  print rate,start,&quot;moving 30\&quot; E...&quot;&#xa;  self.m.moveEast(30,rate)&#xa;  end=self.m.getPositionRaDec()&#xa;  print rate,end,&quot;real =&quot;,end.angsep(start).arcsec()&#xa;  start=self.m.getPositionRaDec()&#xa;  print rate,start,&quot;moving 30\&quot; W...&quot;&#xa;  self.m.moveWest(30,rate)&#xa;  end=self.m.getPositionRaDec()&#xa;  print rate,end,&quot;real =&quot;,end.angsep(start).arcsec()&#xa;  start=self.m.getPositionRaDec()&#xa;  print rate,start,&quot;moving 30\&quot; N...&quot;&#xa;  self.m.moveNorth(30,rate)&#xa;  end=self.m.getPositionRaDec()&#xa;  print rate,end,&quot;real =&quot;,end.angsep(start).arcsec()&#xa;  start=self.m.getPositionRaDec()&#xa;  print rate,start,&quot;moving 30\&quot; S...&quot;&#xa;  self.m.moveSouth(30,rate)&#xa;  end=self.m.getPositionRaDec()&#xa;  print rate,end,&quot;real =&quot;,end.angsep(start).arcsec()&#xa;  print" id="9Q5QNmMuEDT3" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;self.abort=threading.Event()&#xa;self.abort.clear()&#xa;" id="4ERrtbShTewr" />
    <sourcecode value=":&#xa;Get a Proxy to the instrument driver.This function is necessary';cause Proxies cannot be shared among different threads.&#xa;So,every time you need a driver Proxy you need to call this to&#xa;get a Proxy to the current thread.&#xa;return self.getManager().getProxy(self['driver'],lazy=True)&#xa;" id="IKflxbbIgTuV" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.exposeBegin+=self.getProxy()._exposeBeginDrvClbk&#xa;drv.exposeComplete+=self.getProxy()._exposeCompleteDrvClbk&#xa;drv.readoutBegin+=self.getProxy()._readoutBeginDrvClbk&#xa;drv.readoutComplete+=self.getProxy()._readoutCompleteDrvClbk&#xa;drv.abortComplete+=self.getProxy()._abortDrvClbk&#xa;drv.temperatureChange+=self.getProxy()._tempChangeDrvClbk&#xa;return True&#xa;" id="yIwclr7h7oVn" />
    <sourcecode value=":&#xa;if self.isExposing():&#xa;  self.abortExposure(False)&#xa;  while self.isExposing():&#xa;    time.sleep(1)&#xa;&#xa;&#xa;drv=self.getDriver()&#xa;drv.exposeBegin-=self.getProxy()._exposeBeginDrvClbk&#xa;drv.exposeComplete-=self.getProxy()._exposeCompleteDrvClbk&#xa;drv.readoutBegin-=self.getProxy()._readoutBeginDrvClbk&#xa;drv.readoutComplete-=self.getProxy()._readoutCompleteDrvClbk&#xa;drv.abortComplete-=self.getProxy()._abortDrvClbk&#xa;drv.temperatureChange-=self.getProxy()._tempChangeDrvClbk&#xa;" id="HyyOnTCAeZ3Y" />
    <sourcecode value=":&#xa;self.exposeBegin(request)&#xa;" id="F2bsacQAyWl9" />
    <sourcecode value=":&#xa;self.exposeComplete(request)&#xa;" id="rYuH6GtMOwJK" />
    <sourcecode value=":&#xa;self.readoutBegin(request)&#xa;" id="TJAKDv4SOX4y" />
    <sourcecode value=":&#xa;self.readoutComplete(request)&#xa;" id="Wpo3nN2NYLDi" />
    <sourcecode value=":&#xa;self.abortComplete()&#xa;" id="FMhQlU6UP8Jn" />
    <sourcecode value=":&#xa;self.temperatureChange(temp,delta)&#xa;" id="pqZDzq0FSeRE" />
    <sourcecode value=":&#xa;if request:&#xa;  if isinstance(request,ImageRequest):&#xa;    imageRequest=request&#xa;&#xa;  elif isinstance(request,dict):&#xa;    imageRequest=ImageRequest(**request)&#xa;&#xa;&#xa;else:&#xa;  if kwargs:&#xa;    imageRequest=ImageRequest(**kwargs)&#xa;&#xa;  else:&#xa;    imageRequest=ImageRequest()&#xa;&#xa;&#xa;frames=imageRequest['frames']&#xa;interval=imageRequest['interval']&#xa;if frames==1:&#xa;  interval=0.0&#xa;&#xa;self.abort.clear()&#xa;drv=self.getDriver()&#xa;images=[]&#xa;for frame_num in range(frames):&#xa;  if self.abort.isSet():&#xa;    return images&#xa;&#xa;  imageRequest.fetchPreHeaders(self.getManager())&#xa;  image=drv.expose(imageRequest)&#xa;  images.append(image)&#xa;  if interval>0 and frame_num&lt;frames:&#xa;    time.sleep(interval)&#xa;&#xa;&#xa;return tuple(images)&#xa;" id="mY4mlSkpovIp" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.abortExposure()&#xa;return True&#xa;" id="EAXsGuTtNK3Q" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.isExposing()&#xa;" id="WYMWaMjhUdpk" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.startCooling(tempC)&#xa;return True&#xa;" id="9BbbmQLWcWVl" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.stopCooling()&#xa;return True&#xa;" id="5mOYvOSrqJC7" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.isCooling()&#xa;" id="dB0TSAY4b2Ap" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getTemperature()&#xa;" id="HT8qTHdxnvFS" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getSetPoint()&#xa;" id="mwtZr91JDWEa" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.startFan(rate)&#xa;" id="n980dNaM3Iwz" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.stopFan()&#xa;" id="R5yK2e306LxF" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.isFanning()&#xa;" id="y095L5I7nSVO" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return[&#xa;('CAMERA',str(self['camera_model']),'Camera Model'),('CCD',str(self['ccd_model']),'CCD Model'),('CCD_DIMX',drv.getPhysicalSize()[0],'CCD X Dimension Size'),('CCD_DIMY',drv.getPhysicalSize()[1],'CCD Y Dimension Size'),('CCDPXSZX',drv.getPixelSize()[0],'CCD X Pixel Size [micrometer]'),('CCDPXSZY',drv.getPixelSize()[1],'CCD Y Pixel Size [micrometer]')]+drv.getMetadata(request)" id="KFs5fMREQeMf" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getCCDs()&#xa;" id="8ACPAWZdtbXX" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getCurrentCCD()&#xa;" id="rBYkm4FMFh8x" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getBinnings()&#xa;" id="nBF0sLyz5SwW" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getADCs()&#xa;" id="vCQycLSNCT8y" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getPhysicalSize()&#xa;" id="78cJZiFtiV50" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getPixelSize()&#xa;" id="jWaRzfQHDy6g" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getOverscanSize()&#xa;" id="FlISjM89IcNJ" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.supports(feature)" id="0NEl75kMtceL" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;self.queue=Queue.Queue()&#xa;self._mode=None&#xa;self._controlTel=None&#xa;self._controlDrv=None&#xa;self.controlAzRes=None&#xa;" id="xzIbWq92mVq5" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.ping()&#xa;drv.slewBegin+=self.getProxy()._slewBeginClbk&#xa;drv.slewComplete+=self.getProxy()._slewCompleteClbk&#xa;drv.abortComplete+=self.getProxy()._abortCompleteClbk&#xa;drv.slitOpened+=self.getProxy()._slitOpenedClbk&#xa;drv.slitClosed+=self.getProxy()._slitClosedClbk&#xa;self.setHz(1/4.0)&#xa;if self[&quot;mode&quot;]==Mode.Track:&#xa;  self.track()&#xa;&#xa;elif self[&quot;mode&quot;]==Mode.Stand:&#xa;  self.stand()&#xa;&#xa;else:&#xa;  self.log.warning(&quot;Invalid dome mode: %s. Will use Stand mode instead.&quot;)&#xa;  self.stand()&#xa;&#xa;self._connectTelEvents()&#xa;return True&#xa;" id="oIdYnRdYKci8" />
    <sourcecode value=":&#xa;if self['park_on_shutdown']:&#xa;  try:&#xa;    self.stand()&#xa;    self.log.info(&quot;Parking the dome...&quot;)&#xa;    self.slewToAz(self['park_pos'])&#xa;&#xa;  except Exception,e:&#xa;    self.log.warning('Unable to park dome: %s',str(e))&#xa;&#xa;&#xa;if self['close_on_shutdown']and self.isSlitOpen():&#xa;  try:&#xa;    self.log.info(&quot;Closing the slit...&quot;)&#xa;    self.closeSlit()&#xa;&#xa;  except Exception,e:&#xa;    self.log.warning('Unable to close dome: %s',str(e))&#xa;&#xa;&#xa;drv=self.getDriver()&#xa;drv.slewBegin-=self.getProxy()._slewBeginClbk&#xa;drv.slewComplete-=self.getProxy()._slewCompleteClbk&#xa;drv.abortComplete-=self.getProxy()._abortCompleteClbk&#xa;drv.slitOpened-=self.getProxy()._slitOpenedClbk&#xa;drv.slitClosed-=self.getProxy()._slitClosedClbk&#xa;self._disconnectTelEvents()&#xa;return True&#xa;" id="XP6rzmxIomj4" />
    <sourcecode value=":&#xa;try:&#xa;  tel=self.getTelescope()&#xa;  tel.slewBegin+=self.getProxy()._telSlewBeginClbk&#xa;  tel.slewComplete+=self.getProxy()._telSlewCompleteClbk&#xa;  tel.abortComplete+=self.getProxy()._telAbortCompleteClbk&#xa;&#xa;except ObjectNotFoundException:&#xa;  self.log.warning(&quot;Couldn't found telescope.&quot;&#xa;  &quot;Telescope events would not be monitored.&quot;)&#xa;return True&#xa;" id="S8KEs4J9sEdP" />
    <sourcecode value=":&#xa;try:&#xa;  tel=self.getTelescope()&#xa;  tel.slewBegin-=self.getProxy()._telSlewBeginClbk&#xa;  tel.slewComplete-=self.getProxy()._telSlewCompleteClbk&#xa;  tel.abortComplete-=self.getProxy()._telAbortCompleteClbk&#xa;&#xa;except ObjectNotFoundException:&#xa;  pass&#xa;&#xa;return True&#xa;" id="t8BlNo8LlsWS" />
    <sourcecode value=":&#xa;self._disconnectTelEvents()&#xa;self._connectTelEvents()&#xa;" id="0zImsoCg9YDE" />
    <sourcecode value=":&#xa;if not isinstance(position,Coord):&#xa;  position=Coord.fromDMS(position)&#xa;&#xa;self.slewBegin(position)&#xa;" id="LNjTuvhk8NMG" />
    <sourcecode value=":&#xa;if not isinstance(position,Coord):&#xa;  position=Coord.fromDMS(position)&#xa;&#xa;self.slewComplete(position)&#xa;" id="ly7LXNIKuhKy" />
    <sourcecode value=":&#xa;if not isinstance(position,Coord):&#xa;  position=Coord.fromDMS(position)&#xa;&#xa;self.abortComplete(position)&#xa;" id="9Xfs2KSQ2se7" />
    <sourcecode value=":&#xa;if not isinstance(position,Coord):&#xa;  position=Coord.fromDMS(position)&#xa;&#xa;self.slitOpened(position)&#xa;" id="KegoIbQC8Pid" />
    <sourcecode value=":&#xa;if not isinstance(position,Coord):&#xa;  position=Coord.fromDMS(position)&#xa;&#xa;self.slitClosed(position)&#xa;" id="0fwf6I8axQ8t" />
    <sourcecode value=":&#xa;if self.getMode()!=Mode.Track:return&#xa;self.log.debug(&quot;[event] telescope slewing to %s.&quot;%target)&#xa;" id="vTDWKhsBCzzt" />
    <sourcecode value=":&#xa;if self.getMode()!=Mode.Track:return&#xa;tel=self.getTelescope()&#xa;self.log.debug(&quot;[event] telescope slew complete, new position=%s.&quot;%target)&#xa;" id="d8P0oFGfjym2" />
    <sourcecode value=":&#xa;if self.getMode()!=Mode.Track:return&#xa;tel=self.getTelescope()&#xa;self.log.debug(&quot;[event] telescope aborted last slew, new position=%s.&quot;%position)&#xa;" id="9apaCYaMPrg1" />
    <sourcecode value=":&#xa;return self.getManager().getProxy(self['driver'],lazy=True)&#xa;" id="26nsPQ3j5A4z" />
    <sourcecode value=":&#xa;return self.getManager().getProxy(self['telescope'],lazy=True)&#xa;" id="kpfpyhomRoph" />
    <sourcecode value=":&#xa;if self.getMode()==Mode.Stand:&#xa;  return True&#xa;&#xa;if not self.queue.empty():&#xa;  self.log.debug(&quot;[control] processing queue... %d item(s).&quot;%self.queue.qsize())&#xa;  self._processQueue()&#xa;  return True&#xa;&#xa;try:&#xa;  if not self._controlTel:&#xa;    self._controlTel=self.getTelescope()&#xa;&#xa;  if self._controlTel.isSlewing():&#xa;    self.log.debug(&quot;[control] telescope slewing... not checking az.&quot;)&#xa;    return True&#xa;&#xa;  self._telescopeChanged(self._controlTel.getAz())&#xa;&#xa;except ObjectNotFoundException:&#xa;  raise ChimeraException(&quot;Couldn't found the selected telescope.&quot;&#xa;  &quot; Dome cannnot track.&quot;)&#xa;return True&#xa;" id="jq78ewn4DmHj" />
    <sourcecode value=":&#xa;if not isinstance(az,Coord):&#xa;  az=Coord.fromDMS(az)&#xa;&#xa;if self._needToMove(az):&#xa;  self.log.debug(&quot;[control] adding %s to the queue.&quot;%az)&#xa;  self.queue.put(az)&#xa;&#xa;else:&#xa;  self.log.debug(&quot;[control] telescope still in the slit, standing&quot;&#xa;  &quot; (dome az=%.2f, tel az=%.2f, delta=%.2f.)&quot;%(self.getAz(),az,abs(self.getAz()-az)))&#xa;" id="W62htHQOZKuK" />
    <sourcecode value=":&#xa;if not self._controlDrv:&#xa;  self._controlDrv=self.getDriver()&#xa;&#xa;if not self.controlAzRes:&#xa;  self.controlAzRes=self._controlDrv[&quot;az_resolution&quot;]&#xa;&#xa;return abs(az-self._controlDrv.getAz())>=self.controlAzRes&#xa;" id="DVXmknmTW0Xo" />
    <sourcecode value=":&#xa;if self.queue.empty():return&#xa;while not self.queue.empty():&#xa;  target=self.queue.get()&#xa;  try:&#xa;    self.log.debug(&quot;[queue] slewing to %s&quot;%target)&#xa;    self.slewToAz(target)&#xa;&#xa;  finally:&#xa;    self.log.debug(&quot;[queue] slew to %s complete&quot;%target)&#xa;    self.queue.task_done()&#xa;&#xa;&#xa;" id="kqyfGfpPW4XX" />
    <sourcecode value=":&#xa;if self.getMode()==Mode.Track:return&#xa;self._reconnectTelEvents()&#xa;tel=self.getTelescope()&#xa;self.log.debug(&quot;[mode] tracking...&quot;)&#xa;self._telescopeChanged(tel.getAz())&#xa;self._mode=Mode.Track&#xa;" id="IAwoCTJ7U0QV" />
    <sourcecode value=":&#xa;self._processQueue()&#xa;self.log.debug(&quot;[mode] standing...&quot;)&#xa;self._mode=Mode.Stand&#xa;" id="uoHMogsSSFRB" />
    <sourcecode value=":&#xa;self._processQueue()&#xa;" id="lNTDauMMI9yu" />
    <sourcecode value=":&#xa;return self._mode&#xa;" id="FcKYkHSqcelp" />
    <sourcecode value=":&#xa;if not isinstance(az,Coord):&#xa;  az=Coord.fromDMS(az)&#xa;&#xa;if int(az)>=360:&#xa;  az=az%360&#xa;&#xa;drv=self.getDriver()&#xa;drv.slewToAz(az)&#xa;" id="JyQtdAii5O2A" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.isSlewing()&#xa;" id="SnU5ifTuZrxV" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.abortSlew()&#xa;" id="aWV9MSc52Ihc" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getAz()&#xa;" id="9X5BpkmpV6NX" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.openSlit()&#xa;" id="8NKeTi9sGAzN" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.closeSlit()&#xa;" id="L7AbF9xIN7X4" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.isSlitOpen()&#xa;" id="s60FBXJrmed1" />
    <sourcecode value=":&#xa;if self.isSlitOpen():&#xa;  slit='Open'&#xa;&#xa;else:&#xa;  slit='Closed'&#xa;&#xa;return[&#xa;('DOME_MDL',str(self['model']),'Dome Model'),('DOME_TYP',str(self['type']),'Dome Type'),('DOME_TRK',str(self['mode']),'Dome Tracking/Standing'),('DOME_SLT',str(slit),'Dome slit status'),]+self.getDriver().getMetadata(request" id="1P6n3hnfUA4L" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;" id="wmriKotcMmhF" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.filterChange+=self.getProxy()._filterChangeClbk&#xa;return True&#xa;" id="EyWZkCmP6IOh" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.filterChange-=self.getProxy()._filterChangeClbk&#xa;return True&#xa;" id="Pk3T2RAUVcHE" />
    <sourcecode value=":&#xa;self.filterChange(self._getFilterName(new),&#xa;self._getFilterName(old))" id="UKoxx3B1475U" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return self._getFilterName(drv.getFilter())&#xa;" id="BtSU4YmLl2e8" />
    <sourcecode value=":&#xa;return self[&quot;filters&quot;].upper().split()&#xa;" id="Gq51sh7D4sUM" />
    <sourcecode value=":&#xa;try:&#xa;  return self.getFilters()[index]&#xa;&#xa;except ValueError:&#xa;  raise InvalidFilterPositionException(&quot;Driver returned an filter that I don't known the name.&quot;)&#xa;&#xa;" id="4oN8epSFTW7W" />
    <sourcecode value=":&#xa;return self.getFilters().index(name)&#xa;" id="OSSTVyzynCkz" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;filterName=str(filter).upper()&#xa;if filterName not in self.getFilters():&#xa;  raise InvalidFilterPositionException(&quot;Invalid filter %s&quot;%filterName)&#xa;&#xa;return drv.setFilter(self._getFilterPosition(filterName))&#xa;" id="GPae06MEgx1H" />
    <sourcecode value=":&#xa;return self.getManager().getProxy(self['driver'],lazy=lazy)&#xa;" id="5JJ3wZcVGohb" />
    <sourcecode value=":&#xa;return[&#xa;('FWHEEL',str(self['model']),'FilterWheel Model'),('FILTER',str(self.getFilter()),'Filter used for this observation'),]+self.getDriver().getMetadata(request" id="nHcifhAE4NEw" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;" id="uC3kvu9F01iQ" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.ping()&#xa;return True&#xa;" id="4zN2z5TqYCYH" />
    <sourcecode value=":&#xa;Get a Proxy to the instrument driver.This function is necessary';cause Proxies cannot be shared among different threads.&#xa;So,every time you need a driver Proxy you need to call this to&#xa;get a Proxy to the current thread.&#xa;return self.getManager().getProxy(self['driver'],lazy=True)&#xa;" id="RZDxmkFEHi8j" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.moveIn(n)&#xa;" id="ZykphsYcy5rb" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.moveOut(n)&#xa;" id="qfWoAe9sQGL2" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.moveTo(position)&#xa;" id="dcGMBIidQwfV" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getPosition()&#xa;" id="oIPlCnpYP5cQ" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getRange()&#xa;" id="KpkjvM8RmD1I" />
    <sourcecode value=":&#xa;return[&#xa;('FOCUSER',str(self['model']),'Focuser Model'),('FOCUS',self.getPosition(),'Focuser position used for this observation'),]+self.getDriver().getMetadata(request" id="VQTHbSXoGcij" />
    <sourcecode value=":&#xa;ChimeraObject.__init__(self)&#xa;" id="R2rSqbC56BTw" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.parkComplete+=self.getProxy()._parkCompleteClbk&#xa;drv.unparkComplete+=self.getProxy()._unparkCompleteClbk&#xa;drv.slewBegin+=self.getProxy()._slewBeginClbk&#xa;drv.slewComplete+=self.getProxy()._slewCompleteClbk&#xa;drv.syncComplete+=self.getProxy()._syncCompleteClbk&#xa;drv.abortComplete+=self.getProxy()._abortCompleteClbk&#xa;" id="JFMQOpMvSVz5" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.parkComplete-=self.getProxy()._parkCompleteClbk&#xa;drv.unparkComplete-=self.getProxy()._unparkCompleteClbk&#xa;drv.slewBegin-=self.getProxy()._slewBeginClbk&#xa;drv.slewComplete-=self.getProxy()._slewCompleteClbk&#xa;drv.syncComplete-=self.getProxy()._syncCompleteClbk&#xa;drv.abortComplete-=self.getProxy()._abortCompleteClbk&#xa;" id="LJIloHr0HquR" />
    <sourcecode value=":&#xa;self.parkComplete()&#xa;" id="QJzf7t6CC8AZ" />
    <sourcecode value=":&#xa;self.unparkComplete()&#xa;" id="7E3JKDr6RByS" />
    <sourcecode value=":&#xa;if isinstance(target,tuple):&#xa;  target=Position.fromRaDec(*target)&#xa;&#xa;self.slewBegin(target)&#xa;" id="gcD7oBX2RVCs" />
    <sourcecode value=":&#xa;if isinstance(position,tuple):&#xa;  position=Position.fromRaDec(*position)&#xa;&#xa;self.slewComplete(position)&#xa;" id="zoFOqjBTjRwB" />
    <sourcecode value=":&#xa;if isinstance(position,tuple):&#xa;  position=Position.fromRaDec(*position)&#xa;&#xa;self.abortComplete(position)&#xa;" id="cgkrZTJ3VWnF" />
    <sourcecode value=":&#xa;if isinstance(position,tuple):&#xa;  position=Position.fromRaDec(*position)&#xa;&#xa;self.syncComplete(position)&#xa;" id="hJ93Cm5YCGyi" />
    <sourcecode value=":&#xa;Get a Proxy to the instrument driver.This function is necessary';cause Proxies cannot be shared among different threads.&#xa;So,every time you need a driver Proxy you need to call this to&#xa;get a Proxy to the current thread.&#xa;return self.getManager().getProxy(self['driver'],lazy=lazy)&#xa;" id="zRP0J0hbG849" />
    <sourcecode value=":&#xa;return ITelescopeSync.syncObject(self,name)&#xa;" id="iVFmmwlJ1GtK" />
    <sourcecode value=":&#xa;if not isinstance(position,Position):&#xa;  position=Position.fromRaDec(*position)&#xa;&#xa;drv=self.getDriver()&#xa;drv.syncRaDec(position)&#xa;" id="dc2OIXD2dYY4" />
    <sourcecode value=":&#xa;return ITelescopeSync.syncAltAz(self,position)&#xa;" id="VknAQ5gSd2V1" />
    <sourcecode value=":&#xa;simbad=Simbad()&#xa;target=simbad.lookup(name)&#xa;self.getDriver().slewToRaDec(target)&#xa;" id="vdZtNtzvTjVT" />
    <sourcecode value=":&#xa;if not isinstance(position,Position):&#xa;  position=Position.fromRaDec(*position)&#xa;&#xa;drv=self.getDriver()&#xa;drv.slewToRaDec(position)&#xa;" id="wumuGZFysJag" />
    <sourcecode value=":&#xa;if not isinstance(position,Position):&#xa;  position=Position.fromAltAz(*position)&#xa;&#xa;drv=self.getDriver()&#xa;try:&#xa;  drv.slewToAltAz(position)&#xa;&#xa;except Exception,e:&#xa;  self.log.exception(&quot;Apollo 13 is out of control!&quot;)&#xa;&#xa;" id="ognN8LG8HUEW" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;if not self.isSlewing():return&#xa;return drv.abortSlew()&#xa;" id="hyEi28IOTvea" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.isSlewing()&#xa;" id="ADCb6o9todHv" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.moveEast(offset,rate)&#xa;" id="OT9C7O6Tha6q" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.moveWest(offset,rate)&#xa;" id="CArNEqbgwKma" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.moveNorth(offset,rate)&#xa;" id="7VWKbilaVqQc" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.moveSouth(offset,rate)&#xa;" id="5CWNDvHv4l71" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;if offsetRA==0:&#xa;  pass&#xa;&#xa;elif offsetRA>0:&#xa;  drv.moveEast(offsetRA,rate)&#xa;&#xa;else:&#xa;  drv.moveWest(abs(offsetRA),rate)&#xa;&#xa;if offsetDec==0:&#xa;  pass&#xa;&#xa;elif offsetDec>0:&#xa;  drv.moveNorth(offsetDec,rate)&#xa;&#xa;else:&#xa;  drv.moveSouth(abs(offsetDec),rate)&#xa;&#xa;" id="h2y8Q5kgWF0e" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getRa()&#xa;" id="OMGmzWU7AypH" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getDec()&#xa;" id="lEIvB7Dar2IN" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getAz()&#xa;" id="cHQTIipXFXUU" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.getAlt()&#xa;" id="v1xBWRdr4fIc" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;ret=drv.getPositionRaDec()&#xa;if not isinstance(ret,Position):&#xa;  ret=Position.fromRaDec(*ret)&#xa;&#xa;return ret&#xa;" id="mTIo8aRz4NBQ" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;ret=drv.getPositionAltAz()&#xa;if not isinstance(ret,Position):&#xa;  ret=Position.fromAltAz(*ret)&#xa;&#xa;return ret&#xa;" id="jF9naIBIPJvI" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;ret=drv.getTargetRaDec()&#xa;if not isinstance(ret,Position):&#xa;  ret=Position.fromRaDec(*ret)&#xa;&#xa;return ret&#xa;" id="WZktsdBzD9SJ" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;ret=drv.getTargetAltAz()&#xa;if not isinstance(ret,Position):&#xa;  ret=Position.fromAltAz(*ret)&#xa;&#xa;return ret&#xa;" id="sBr5IIMvIC2e" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.park()&#xa;" id="Mtae3cGyVAP0" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.unpark()&#xa;" id="RWIwefutvce9" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.setParkPosition(position)&#xa;" id="Pf3KFhTN9CNe" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.startTracking()&#xa;" id="4ODM8U5uDgCi" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;drv.stopTracking()&#xa;" id="RZdeDnLGTvIc" />
    <sourcecode value=":&#xa;drv=self.getDriver()&#xa;return drv.isTracking()&#xa;" id="0DxT7G3ls3nM" />
    <sourcecode value=":&#xa;return[&#xa;('TELESCOP',self['model'],'Telescope Model'),('OPTICS',self['optics'],'Telescope Optics Type'),('MOUNT',self['mount'],'Telescope Mount Type'),('APERTURE',self['aperture'],'Telescope aperture size [mm]'),('F_LENGTH',self['focal_length'],'Telescope focal length [mm]'),('F_REDUCT',self['focal_reduction'],'Telescope focal reduction'),('RA',self.getRa().toHMS().__str__(),'Right ascension of the observed object'),('DEC',self.getDec().toDMS().__str__(),'Declination of the observed object'),(&quot;EQUINOX&quot;,2000.0,&quot;coordinate epoch&quot;),('ALT',self.getAlt().toDMS().__str__(),'Altitude of the observed object'),('AZ',self.getAz().toDMS().__str__(),'Azimuth of the observed object'),(&quot;WCSAXES&quot;,2,&quot;wcs dimensionality&quot;),(&quot;RADESYS&quot;,&quot;ICRS&quot;,&quot;frame of reference&quot;),(&quot;CRVAL1&quot;,self.getTargetRaDec().ra.D,&quot;coordinate system value at reference pixel&quot;),(&quot;CRVAL2&quot;,self.getTargetRaDec().dec.D,&quot;coordinate system value at reference pixel&quot;),(&quot;CTYPE1&quot;,'RA---TAN',&quot;name of the coordinate axis&quot;),(&quot;CTYPE2&quot;,'DEC---TAN',&quot;name of the coordinate axis&quot;),(&quot;CUNIT1&quot;,'deg',&quot;units of coordinate value&quot;),(&quot;CUNIT2&quot;,'deg',&quot;units of coordinate value&quot;)]+self.getDriver().getMetadata(request" id="PWXFZIcHIMNH" />
    <sourcecode value=":&#xa;RemoteObject.__init__(self)&#xa;self.__events_proxy__=EventsProxy()&#xa;self.__config_proxy__=Config(self)&#xa;self.__state__=State.STOPPED&#xa;self.__location__=&quot;&quot;&#xa;logName=self.__module__&#xa;if not logName.startswith(&quot;chimera.&quot;):&#xa;  logName=&quot;chimera.&quot;+logName+&quot; (%s)&quot;%logName&#xa;&#xa;self.log=logging.getLogger(logName)&#xa;self._Hz=2&#xa;self._loop_abort=threading.Event()&#xa;" id="Ivhdbq8M1qOb" />
    <sourcecode value=":&#xa;lock=getattr(self,RWLOCK_ATTRIBUTE_NAME)&#xa;try:&#xa;  lock.acquireRead()&#xa;  return self.__config_proxy__.__getitem__(item)&#xa;&#xa;finally:&#xa;  lock.release()&#xa;&#xa;" id="nXjmN5MUgfzL" />
    <sourcecode value=":&#xa;lock=getattr(self,RWLOCK_ATTRIBUTE_NAME)&#xa;try:&#xa;  lock.acquireWrite()&#xa;  return self.__config_proxy__.__setitem__(item,value)&#xa;&#xa;finally:&#xa;  lock.release()&#xa;&#xa;" id="KLx5F4L1NRad" />
    <sourcecode value=":&#xa;lock=getattr(self,RWLOCK_ATTRIBUTE_NAME)&#xa;try:&#xa;  lock.acquireWrite()&#xa;  self.__config_proxy__.__iadd__(configDict)&#xa;&#xa;finally:&#xa;  lock.release()&#xa;  return self.getProxy()&#xa;&#xa;" id="dceJpEE6B9iY" />
    <sourcecode value=":&#xa;return getattr(self,INSTANCE_MONITOR_ATTRIBUTE_NAME).__enter__()&#xa;" id="CGw6pK4S8GyA" />
    <sourcecode value=":&#xa;return getattr(self,INSTANCE_MONITOR_ATTRIBUTE_NAME).__exit__(*args)&#xa;" id="1R97h6HTg5JV" />
    <sourcecode value=":&#xa;return getattr(self,INSTANCE_MONITOR_ATTRIBUTE_NAME).acquire(blocking)&#xa;" id="wjkkgBhELvdC" />
    <sourcecode value=":&#xa;return getattr(self,INSTANCE_MONITOR_ATTRIBUTE_NAME).release()&#xa;" id="mZPyDXUQ36Cl" />
    <sourcecode value=":&#xa;return getattr(self,INSTANCE_MONITOR_ATTRIBUTE_NAME).wait(timeout)&#xa;" id="onhqttbTM1Do" />
    <sourcecode value=":&#xa;return getattr(self,INSTANCE_MONITOR_ATTRIBUTE_NAME).notify(n)&#xa;" id="LSqmG9nZKEwm" />
    <sourcecode value=":&#xa;return getattr(self,INSTANCE_MONITOR_ATTRIBUTE_NAME).notifyAll()&#xa;" id="VxYCWDU5DBPy" />
    <sourcecode value=":&#xa;return getattr(self,EVENTS_ATTRIBUTE_NAME)&#xa;" id="zKgCV38QsAS1" />
    <sourcecode value=":&#xa;return getattr(self,METHODS_ATTRIBUTE_NAME)&#xa;" id="8nR1vt2spYH9" />
    <sourcecode value=":&#xa;return getattr(self,CONFIG_PROXY_NAME).items()&#xa;" id="xtHkPYuiSjY1" />
    <sourcecode value=":&#xa;return True&#xa;" id="4ldWV9WWAsd2" />
    <sourcecode value=":&#xa;return True&#xa;" id="C7XMxBOMQIzL" />
    <sourcecode value=":&#xa;return self._Hz&#xa;" id="3aNRtKmcoRub" />
    <sourcecode value=":&#xa;tmpHz=self.getHz()&#xa;self._Hz=freq&#xa;return tmpHz&#xa;" id="8T1uuvWDuqrp" />
    <sourcecode value=":&#xa;self._loop_abort.clear()&#xa;timeslice=0.5&#xa;runCondition=True&#xa;while runCondition:&#xa;  runCondition=self.control()&#xa;  if self._loop_abort.isSet():&#xa;    return True&#xa;&#xa;  timeToWakeUp=1.0/self.getHz()&#xa;  sleeped=0&#xa;  while sleeped&lt;timeToWakeUp:&#xa;    time.sleep(timeslice)&#xa;    if self._loop_abort.isSet():return True&#xa;    sleeped+=timeslice&#xa;&#xa;&#xa;return True&#xa;" id="m2CkEFvNiO20" />
    <sourcecode value=":&#xa;self._loop_abort.set()&#xa;" id="JBJ1ZL08QPJX" />
    <sourcecode value=":&#xa;return False&#xa;" id="u1QIOkoTmQ3C" />
    <sourcecode value=":&#xa;return self.__state__&#xa;" id="3GRneUxaGYbs" />
    <sourcecode value=":&#xa;oldstate=self.__state__&#xa;self.__state__=state&#xa;return oldstate&#xa;" id="CrdQPDGGfI3G" />
    <sourcecode value=":&#xa;return self.__location__&#xa;" id="jw88BceXPIIr" />
    <sourcecode value=":&#xa;location=Location(location)&#xa;self.__location__=location&#xa;self.setGUID(&quot;/%s/%s&quot;%(location.cls,location.name))&#xa;return True&#xa;" id="3CkQT3FF3kNT" />
    <sourcecode value=":&#xa;if self.getDaemon():&#xa;  return self.getDaemon().getProxyForObj(self.getDaemon().getManager())&#xa;&#xa;" id="zKSCck72JSVJ" />
    <sourcecode value=":&#xa;return super(ChimeraObject,self).getProxy()&#xa;" id="r3GBTmSmwnCV" />
    <sourcecode value=":&#xa;return self.objectGUID&#xa;" id="I48CpIfJP7CC" />
    <sourcecode value=":&#xa;return[]" id="uPuHW4SavEyu" />
    <sourcecode value=":&#xa;self.manager=Manager(port=8000)&#xa;self.manager.addClass(FakeCamera,&quot;fake&quot;,:&#xa;  &quot;device&quot;:Device.USB&#xa;)&#xa;self.manager.addClass(Camera,&quot;cam&quot;,:&#xa;  &quot;driver&quot;:&quot;/FakeCamera/fake&quot;&#xa;)&#xa;@callback(self.manager)&#xa;def exposeBeginClbk(request):&#xa;  print&#xa;  print time.time(),&quot;Expose begin for request %s.&quot;%request&#xa;&#xa;@callback(self.manager)&#xa;def exposeCompleteClbk(request):&#xa;  print time.time(),&quot;Expose complete for request %s.&quot;%request&#xa;&#xa;@callback(self.manager)&#xa;def readoutBeginClbk(request):&#xa;  print time.time(),&quot;Readout begin for request %s.&quot;%request[&quot;filename&quot;]&#xa;&#xa;@callback(self.manager)&#xa;def readoutCompleteClbk(request):&#xa;  print time.time(),&quot;Readout complete for request %s.&quot;%request[&quot;filename&quot;]&#xa;&#xa;@callback(self.manager)&#xa;def abortCompleteClbk():&#xa;  print time.time(),&quot;Abort complete.&quot;&#xa;&#xa;cam=self.manager.getProxy(Camera)&#xa;cam.exposeBegin+=exposeBeginClbk&#xa;cam.exposeComplete+=exposeCompleteClbk&#xa;cam.readoutBegin+=readoutBeginClbk&#xa;cam.readoutComplete+=readoutCompleteClbk&#xa;cam.abortComplete+=abortCompleteClbk&#xa;" id="tNiUAaOeXmj4" />
    <sourcecode value=":&#xa;self.manager.shutdown()&#xa;" id="ItrndarzqjJ1" />
    <sourcecode value=":&#xa;cam=self.manager.getProxy(Camera)&#xa;assert cam.isExposing()==False&#xa;" id="1pdrYusmdjTR" />
    <sourcecode value=":&#xa;cam=self.manager.getProxy(Camera)&#xa;frames=0&#xa;try:&#xa;  frames=cam.expose(exptime=2,frames=2,interval=0.5,filename=&quot;autogen-expose.fits&quot;)&#xa;&#xa;except Exception,e:&#xa;  log.exception(&quot;problems&quot;)&#xa;&#xa;assert len(frames)==2&#xa;assert isinstance(frames[0],Proxy)&#xa;assert isinstance(frames[1],Proxy)&#xa;" id="cKxF1QePjxLe" />
    <sourcecode value=":&#xa;cam=self.manager.getProxy(Camera)&#xa;assert_raises(ChimeraValueError,cam.expose,exptime=-1)&#xa;assert_raises(ChimeraValueError,cam.expose,exptime=1e100)&#xa;assert_raises(ChimeraValueError,cam.expose,exptime=1,frames=0)&#xa;assert_raises(ChimeraValueError,cam.expose,exptime=1,frames=-1)&#xa;assert_raises(ChimeraValueError,cam.expose,exptime=0,interval=-1)&#xa;" id="nTCUQX9uS27h" />
    <sourcecode value=":&#xa;cam=self.manager.getProxy(Camera)&#xa;begin_times=[]&#xa;end_times=[]&#xa;@callback(self.manager)&#xa;def exposeBeginClbk(request):&#xa;  begin_times.append(time.time())&#xa;&#xa;@callback(self.manager)&#xa;def readoutCompleteClbk(request):&#xa;  end_times.append(time.time())&#xa;&#xa;cam.exposeBegin+=exposeBeginClbk&#xa;cam.readoutComplete+=readoutCompleteClbk&#xa;def doExpose():&#xa;  cam=self.manager.getProxy(Camera)&#xa;  cam.expose(exptime=2,filename=&quot;autogen-expose-lock.fits&quot;)&#xa;&#xa;pool=ThreadPool()&#xa;pool.queueTask(doExpose)&#xa;pool.queueTask(doExpose)&#xa;time.sleep(1)&#xa;while len(end_times)&lt;2:time.sleep(1)&#xa;assert len(begin_times)==2&#xa;assert len(end_times)==2&#xa;assert(end_times[1]>begin_times[0])&#xa;pool.joinAll()&#xa;" id="Im0io5PL5kbr" />
    <sourcecode value=":&#xa;cam=self.manager.getProxy(Camera)&#xa;print&#xa;def doExpose():&#xa;  cam=self.manager.getProxy(Camera)&#xa;  cam.expose(exptime=10,filename=&quot;autogen-expose-abort.fits&quot;)&#xa;&#xa;pool=ThreadPool()&#xa;pool.queueTask(doExpose)&#xa;time.sleep(2)&#xa;assert cam.isExposing()==True&#xa;cam.abortExposure()&#xa;assert cam.isExposing()==False&#xa;pool.joinAll()&#xa;" id="IGwN0VCFhNGT" />
    <sourcecode value=":&#xa;cam=self.manager.getProxy(Camera)&#xa;def eps_equal(a,b,eps):&#xa;  return abs(a-b)&lt;=eps&#xa;&#xa;cam.stopCooling()&#xa;assert cam.isCooling()==False&#xa;cool=10&#xa;cam.startCooling(cool)&#xa;assert cam.isCooling()==True&#xa;print&#xa;while not eps_equal(cam.getTemperature(),cool,0.25):&#xa;  print&quot;\rwaiting to cool to %d oC:&quot;%cool,cam.getTemperature(),&#xa;  sys.stdout.flush()&#xa;  time.sleep(1)&#xa;&#xa;cam.stopCooling()&#xa;assert cam.isCooling()==False" id="PyI6LYYWanTp" />
    <sourcecode value=":&#xa;self.manager=Manager()&#xa;self.manager.addClass(Site,&quot;lna&quot;,:&#xa;  &quot;name&quot;:&quot;LNA&quot;,&#xa;  &quot;latitude&quot;:&quot;-22 32 03&quot;,&quot;longitude&quot;:&quot;-45 34 57&quot;,&quot;altitude&quot;:&quot;1896&quot;,&quot;utc_offset&quot;:&quot;-3&quot;&#xa;)self.manager.addClass(FakeTelescope,&quot;fake&quot;)&#xa;self.manager.addClass(Telescope,&quot;tel&quot;,:&#xa;  &quot;driver&quot;:&quot;/FakeTelescope/0&quot;&#xa;)&#xa;self.manager.addClass(FakeDome,&quot;fake&quot;)&#xa;self.manager.addClass(Dome,&quot;dome&quot;,:&#xa;  &quot;driver&quot;:&quot;/FakeDome/0&quot;,&#xa;  &quot;telescope&quot;:&quot;/Telescope/0&quot;&#xa;)@callback(self.manager)&#xa;def slewBeginClbk(target):&#xa;  print&#xa;  print time.time(),&quot;[dome] Slew begin. target=%s&quot;%str(target)&#xa;  print&#xa;&#xa;@callback(self.manager)&#xa;def slewCompleteClbk(position):&#xa;  print&#xa;  print time.time(),&quot;[dome] Slew complete. position=%s&quot;%str(position)&#xa;  print&#xa;&#xa;@callback(self.manager)&#xa;def abortCompleteClbk(position):&#xa;  print&#xa;  print time.time(),&quot;[dome] Abort slew at position=%s&quot;%str(position)&#xa;  print&#xa;&#xa;@callback(self.manager)&#xa;def slitOpenedClbk(position):&#xa;  print&#xa;  print time.time(),&quot;[dome] Slit opened with dome at at position=%s&quot;%str(position)&#xa;  print&#xa;&#xa;@callback(self.manager)&#xa;def slitClosedClbk(position):&#xa;  print&#xa;  print time.time(),&quot;[dome] Slit closed with dome at at position=%s&quot;%str(position)&#xa;  print&#xa;&#xa;dome=self.manager.getProxy(Dome)&#xa;dome.slewBegin+=slewBeginClbk&#xa;dome.slewComplete+=slewCompleteClbk&#xa;dome.abortComplete+=abortCompleteClbk&#xa;dome.slitOpened+=slitOpenedClbk&#xa;dome.slitClosed+=slitClosedClbk&#xa;" id="vKTs62wWzWVf" />
    <sourcecode value=":&#xa;dome=self.manager.getProxy(Dome)&#xa;tel=self.manager.getProxy(Telescope)&#xa;dome.track()&#xa;for i in range(25):&#xa;  ra=&quot;%d %d 00&quot;%(random.randint(0,23),random.randint(0,59))&#xa;  dec=&quot;%d %d 00&quot;%(random.randint(-90,0),random.randint(0,59))&#xa;  tel.slewToRaDec((ra,dec))&#xa;  time.sleep(random.randint(0,10))&#xa;&#xa;dome.sync()&#xa;" id="nJznoUSTv3Tk" />
    <sourcecode value=":&#xa;dome=self.manager.getProxy(Dome)&#xa;for i in range(25):&#xa;  az=random.randint(0,359)&#xa;  dome.slewToAz(az)&#xa;  assert dome.getAz()==az&#xa;&#xa;" id="FWHBXitpMgjv" />
    <sourcecode value=":&#xa;dome=self.manager.getProxy(Dome)&#xa;assert dome.getAz()>=0&#xa;" id="1GzLwgGHLSoi" />
    <sourcecode value=":&#xa;dome=self.manager.getProxy(Dome)&#xa;start=dome.getAz()&#xa;delta=20&#xa;dome.slewToAz(start+delta)&#xa;assert dome.getAz()==(start+delta)&#xa;" id="kJd6lRmoWhAG" />
    <sourcecode value=":&#xa;dome=self.manager.getProxy(Dome)&#xa;dome.openSlit()&#xa;assert dome.isSlitOpen()==True&#xa;dome.closeSlit()&#xa;assert dome.isSlitOpen()==False" id="7aJdFTrIn7wK" />
    <sourcecode value=":&#xa;self.manager=Manager(port=8000)&#xa;self.manager.addClass(FakeFilterWheel,&quot;fake&quot;,:&#xa;  &quot;device&quot;:&quot;/dev/ttyS0&quot;&#xa;)&#xa;self.manager.addClass(FilterWheel,&quot;filter&quot;,:&#xa;  &quot;driver&quot;:&quot;/FakeFilterWheel/0&quot;,&#xa;  &quot;filters&quot;:&quot;U B V R I&quot;&#xa;)" id="VDAJOT41Fqgr" />
    <sourcecode value=":&#xa;self.manager.shutdown()&#xa;" id="7y4MmjDzKu4P" />
    <sourcecode value=":&#xa;f=self.manager.getProxy(FilterWheel)&#xa;filters=f.getFilters()&#xa;for filter in filters:&#xa;  f.setFilter(filter)&#xa;  assert f.getFilter()==filter&#xa;&#xa;" id="NqYgic3A9TNq" />
    <sourcecode value=":&#xa;f=self.manager.getProxy(FilterWheel)&#xa;filters=f.getFilters()&#xa;assert isinstance(filters,tuple)or isinstance(filters,list)" id="aDYhfvWFvn5K" />
    <sourcecode value=":&#xa;self.manager=Manager(port=8000)&#xa;self.manager.addClass(Site,&quot;lna&quot;,:&#xa;  &quot;name&quot;:&quot;LNA&quot;,&#xa;  &quot;latitude&quot;:&quot;-22 32 03&quot;,&quot;longitude&quot;:&quot;-45 34 57&quot;,&quot;altitude&quot;:&quot;1896&quot;,&quot;utc_offset&quot;:&quot;-3&quot;&#xa;)self.manager.addClass(FakeFocuser,&quot;fake&quot;,:&#xa;  &quot;device&quot;:&quot;/dev/ttyS0&quot;&#xa;)&#xa;self.manager.addClass(Focuser,&quot;focus&quot;,:&#xa;  &quot;driver&quot;:&quot;/FakeFocuser/0&quot;&#xa;)&#xa;" id="hQEsVkjEGtlH" />
    <sourcecode value=":&#xa;self.manager.shutdown()&#xa;" id="GIaUBJl93RjW" />
    <sourcecode value=":&#xa;focus=self.manager.getProxy(Focuser)&#xa;assert focus.getPosition()>=0&#xa;" id="JgeM6LqvSLY2" />
    <sourcecode value=":&#xa;focus=self.manager.getProxy(Focuser)&#xa;start=focus.getPosition()&#xa;delta=int(random.Random().random()*1000)&#xa;focus.moveIn(delta)&#xa;assert focus.getPosition()==start-delta&#xa;start=focus.getPosition()&#xa;focus.moveOut(delta)&#xa;assert focus.getPosition()==start+delta&#xa;focus.moveTo(1000)&#xa;assert focus.getPosition()==1000&#xa;assert_raises(InvalidFocusPositionException,focus.moveTo,1e9)" id="J7ljSHjnmAvw" />
    <sourcecode value=":&#xa;self.manager=Manager(port=8000)&#xa;self.manager.addClass(Site,&quot;lna&quot;,:&#xa;  &quot;name&quot;:&quot;UFSC&quot;,&#xa;  &quot;latitude&quot;:&quot;-27 36 13 &quot;,&quot;longitude&quot;:&quot;-48 31 20&quot;,&quot;altitude&quot;:&quot;20&quot;,&quot;utc_offset&quot;:&quot;-3&quot;&#xa;)self.manager.addClass(FakeTelescope,&quot;fake&quot;)&#xa;self.manager.addClass(Telescope,&quot;fake&quot;,:&#xa;  &quot;driver&quot;:&quot;/FakeTelescope/fake&quot;&#xa;)&#xa;self.tel=self.manager.getProxy(Telescope)&#xa;" id="eA0cFmbEfsIS" />
    <sourcecode value=":&#xa;self.manager.shutdown()&#xa;" id="Kb5yRNQXDjcp" />
    <sourcecode value=":&#xa;ra=self.tel.getRa()&#xa;dec=self.tel.getDec()&#xa;dest_ra=(ra+&quot;1 00 00&quot;)&#xa;dest_dec=(dec+&quot;15 00 00&quot;)&#xa;@callback(self.manager)&#xa;def slewBeginClbk(target):&#xa;  assert target.ra==dest_ra&#xa;  assert target.dec==dest_dec&#xa;&#xa;@callback(self.manager)&#xa;def slewCompleteClbk(position):&#xa;  assertEpsEqual(position.ra,dest_ra,60)&#xa;  assertEpsEqual(position.dec,dest_dec,60)&#xa;&#xa;self.tel.slewBegin+=slewBeginClbk&#xa;self.tel.slewComplete+=slewCompleteClbk&#xa;self.tel.slewToRaDec((dest_ra,dest_dec))&#xa;" id="PahaJHNBnnut" />
    <sourcecode value=":&#xa;last_ra=self.tel.getRa()&#xa;last_dec=self.tel.getDec()&#xa;dest_ra=last_ra+&quot;01 00 00&quot;&#xa;dest_dec=last_dec+&quot;10 00 00&quot;&#xa;@callback(self.manager)&#xa;def abortCompleteClbk(position):&#xa;  assert last_ra&lt;position.ra&lt;dest_ra&#xa;  assert last_dec&lt;position.dec&lt;dest_dec&#xa;&#xa;self.tel.abortComplete+=abortCompleteClbk&#xa;def slew():&#xa;  self.tel=self.manager.getProxy(Telescope)&#xa;  self.tel.slewToRaDec((dest_ra,dest_dec))&#xa;&#xa;pool=ThreadPool()&#xa;pool.queueTask(slew)&#xa;time.sleep(2)&#xa;self.tel.abortSlew()&#xa;pool.joinAll()&#xa;" id="xuyifqZTw6My" />
    <sourcecode value=":&#xa;real_ra=self.tel.getRa()&#xa;real_dec=self.tel.getDec()&#xa;@callback(self.manager)&#xa;def syncCompleteClbk(position):&#xa;  assert position.ra==real_ra&#xa;  assert position.dec==real_dec&#xa;&#xa;self.tel.syncComplete+=syncCompleteClbk&#xa;self.tel.slewToRaDec((real_ra+&quot;01 00 00&quot;,real_dec+&quot;01 00 00&quot;))&#xa;self.tel.syncRaDec((real_ra,real_dec))&#xa;" id="HjQEnkCCocEn" />
    <sourcecode value=":&#xa;return&#xa;def printPosition():&#xa;  print self.tel.getPositionRaDec(),self.tel.getPositionAltAz()&#xa;  sys.stdout.flush()&#xa;&#xa;print&#xa;ra=self.tel.getRa()&#xa;dec=self.tel.getDec()&#xa;print&quot;current position:&quot;,self.tel.getPositionRaDec()&#xa;print&quot;moving to:&quot;,(ra-&quot;01 00 00&quot;),(dec-&quot;01 00 00&quot;)&#xa;self.tel.slewToRaDec((ra-&quot;01 00 00&quot;,dec-&quot;01 00 00&quot;))&#xa;for i in range(10):&#xa;  printPosition()&#xa;  time.sleep(0.5)&#xa;&#xa;print&quot;parking...&quot;&#xa;sys.stdout.flush()&#xa;self.tel.park()&#xa;t0=time.time()&#xa;wait=30&#xa;for i in range(10):&#xa;  printPosition()&#xa;  time.sleep(0.5)&#xa;&#xa;while time.time()&lt;t0+wait:&#xa;  print&quot;\rwaiting ... &quot;,&#xa;  sys.stdout.flush()&#xa;  time.sleep(1)&#xa;&#xa;print&quot;unparking...&quot;&#xa;sys.stdout.flush()&#xa;self.tel.unpark()&#xa;for i in range(10):&#xa;  printPosition()&#xa;  time.sleep(0.5)" id="ujLgLZTuKGzR" />
    <sourcecode value=":&#xa;Returns the current filter position starting with 0.&#xa;@rtype:int&#xa;" id="l7MV2DqMfa6b" />
    <sourcecode value=":&#xa;Set current filter.&#xa;@param filter:Filter position starting in 0.&#xa;@type filter:int&#xa;" id="uwnXWt6UQVm3" />
    <sourcecode value=":&#xa;pass" id="GzS4KQl1k49o" />
    <sourcecode value=":&#xa;Do object initialization.&#xa;Constructor should only do basic initialization.Shouldn't;even'touch'any hardware,open files or sockets.Constructor&#xa;is called by L:&#xa;  Manager&#xa;.&#xa;@note:Runs on the Manager's thread.;@warning:This method must not block,so be a good boy/girl.&#xa;" id="ycqn2I8QNhQg" />
    <sourcecode value=":&#xa;Do device initialization.Open files,access drivers and&#xa;sockets.This method it's called by Manager, just after the constructor.;@note:Runs on the L:&#xa;  Manager&#xa;thread.&#xa;@warning:This method must not block,so be a good boy/girl.&#xa;" id="C4kaj9GTu6oK" />
    <sourcecode value=":&#xa;Cleanup:&#xa;  __start__&#xa;actions.&#xa;:&#xa;  __stop__&#xa;it's called by Manager when Manager is dying or;programatically at any time(to remove an Instrument during&#xa;system lifetime).&#xa;@note:Runs on the Manager thread.&#xa;@warning:This method must not block,so be a good boy/girl.&#xa;" id="YbHSh5kzeYvZ" />
    <sourcecode value=":&#xa;Main control method.Implementers could use this method to&#xa;implement control loop functions.&#xa;@note:This method runs on their own thread.&#xa;" id="P771f2ZtlPzp" />
    <sourcecode value=":&#xa;Get the current state of the object as a L:&#xa;  State&#xa;enum.&#xa;@see:L:&#xa;  State&#xa;for possible values.&#xa;" id="lylUNiJAkC4s" />
    <sourcecode value=":&#xa;Internally used function to set the current state of the object.&#xa;@see:L:&#xa;  State&#xa;for possible values.&#xa;" id="0AkiMmZqTlgG" />
    <sourcecode value=":&#xa;Get the current L:&#xa;  Location&#xa;where the object is deployed.&#xa;" id="1j8E6u5mEIfo" />
    <sourcecode value=":&#xa;Internally used function to set the current location of the object.&#xa;" id="7JqJbT5zcQav" />
    <sourcecode value=":&#xa;Get the current Manager for this object.&#xa;" id="Ru7gHFxqQFNp" />
    <sourcecode value=":&#xa;Get a Proxy for this object(useful for callbacks)&#xa;" id="iY78nSvZNEFg" />
    <sourcecode value=":&#xa;Get object metadata.&#xa;@param data:Context relevant data.&#xa;@type data:object&#xa;@rtype:list" id="wEIJQVyjqmxh" />
    <sourcecode value=":&#xa;pass&#xa;" id="CNKuHKI2YGh8" />
    <sourcecode value=":&#xa;pass&#xa;" id="J6ccdbDsZara" />
    <sourcecode value=":&#xa;pass&#xa;" id="M2FazUUCbfHH" />
    <sourcecode value=":&#xa;pass&#xa;" id="skgVt9T0KJUy" />
    <sourcecode value=":&#xa;pass&#xa;" id="YJ8fv3bfJ4pM" />
    <sourcecode value=":&#xa;pass&#xa;" id="wm2FqpZEafUU" />
    <sourcecode value=":&#xa;pass" id="G9HomkHr33TS" />
    <sourcecode value=":&#xa;@param:fullfilename entire path to image&#xa;@type:str&#xa;@param:findstarmethod(astrometry.net,sex)&#xa;@type:str&#xa;Does astrometry to image=fullfilename&#xa;Uses either astrometry.net or sex(tractor)as its star finder&#xa;pathname,filename=os.path.split(fullfilename)&#xa;pathname=pathname+&quot;/&quot;&#xa;basefilename,file_xtn=os.path.splitext(filename)&#xa;if(file_xtn!=&quot;.fits&quot;):&#xa;  raise ValueError(&quot;File extension must be .fits it was = %s\n&quot;%file_xtn)&#xa;&#xa;if(os.path.exists(fullfilename)==False):&#xa;  raise IOError(&quot;You selected image %s  It does not exist\n&quot;%fullfilename)&#xa;&#xa;outfilename=basefilename+&quot;-out&quot;&#xa;image=Image.fromFile(fullfilename)&#xa;try:&#xa;  ra=image[&quot;CRVAL1&quot;]&#xa;&#xa;except:&#xa;  raise AstrometryNetException(&quot;Need CRVAL1 and CRVAL2 and CD1_1 on header&quot;)&#xa;&#xa;try:&#xa;  dec=image[&quot;CRVAL2&quot;]&#xa;&#xa;except:&#xa;  raise AstrometryNetException(&quot;Need CRVAL1 and CRVAL2 and CD1_1 on header&quot;)&#xa;&#xa;width=image[&quot;NAXIS1&quot;]&#xa;height=image[&quot;NAXIS2&quot;]&#xa;radius=5.0*abs(image[&quot;CD1_1&quot;])*width&#xa;if findstarmethod==&quot;astrometry.net&quot;:&#xa;  line=&quot;solve-field %s --overwrite -o %s --ra %f --dec %f --radius %f&quot;%(fullfilename,outfilename,ra,dec,radius)&#xa;  print line&#xa;&#xa;elif findstarmethod==&quot;sex&quot;:&#xa;  sexoutfilename=pathname+outfilename+&quot;.xyls&quot;&#xa;  line=&quot;solve-field %s --overwrite -o %s --x-column X_IMAGE --y-column Y_IMAGE --sort-column MAG_ISO --sort-ascending --width %d --height %d --ra %f --dec %f --radius %f&quot;%(sexoutfilename,outfilename,width,height,ra,dec,radius)&#xa;  print&quot;Sextractor command line %s&quot;%line&#xa;  sex=SExtractor()&#xa;  sex.config['BACK_TYPE']=&quot;AUTO&quot;&#xa;  sex.config['DETECT_THRESH']=3.0&#xa;  sex.config['DETECT_MINAREA']=18.0&#xa;  sex.config['VERBOSE_TYPE']=&quot;QUIET&quot;&#xa;  sex.config['CATALOG_TYPE']=&quot;FITS_1.0&quot;&#xa;  sex.config['CATALOG_NAME']=sexoutfilename&#xa;  sex.config['PARAMETERS_LIST']=[&quot;X_IMAGE&quot;,&quot;Y_IMAGE&quot;,&quot;MAG_ISO&quot;]&#xa;  sex.run(fullfilename)&#xa;&#xa;else:&#xa;  log.error(&quot;Unknown option used in astrometry.net&quot;)&#xa;&#xa;is_solved=pathname+outfilename+&quot;.solved&quot;&#xa;if(os.path.exists(is_solved)):&#xa;  os.remove(is_solved)&#xa;&#xa;solve=Popen(line.split())&#xa;solve.wait()&#xa;if(os.path.exists(is_solved)==False):&#xa;  raise NoSolutionAstrometryNetException(&quot;Astrometry.net could not find a solution for image: %s %s&quot;%(fullfilename,is_solved))&#xa;&#xa;wcs_imgname=pathname+outfilename+&quot;-wcs&quot;+&quot;.fits&quot;&#xa;wcs_solution=pathname+outfilename+&quot;.wcs&quot;&#xa;shutil.copyfile(wcs_solution,wcs_solution+&quot;.fits&quot;)&#xa;if(os.path.exists(wcs_imgname)==True):&#xa;  iraf.imdelete(wcs_imgname)&#xa;&#xa;iraf.artdata()&#xa;iraf.imcopy(fullfilename,wcs_imgname)&#xa;iraf.mkheader(images=wcs_imgname,headers=wcs_solution+&quot;.fits&quot;,&#xa;append=&quot;no&quot;,verbose=&quot;no&quot;,mode=&quot;al&quot;)return(wcs_imgname)&#xa;" id="WXzAGvDUGbs2" />
    <sourcecode value=":&#xa;return abs(a-b)&lt;=eps&#xa;" id="KWfUWFCsRIg2" />
    <sourcecode value=":&#xa;See CoordUtil.d2dms.&#xa;return CoordUtil.d2dms(d/15,sec_prec)&#xa;" id="eYGcyp6dZRia" />
    <sourcecode value=":&#xa;This function returns a tuple which can be used to reconstruct&#xa;the decimal value of Coord as follow:&#xa;  d=sign*(dd+mm/60.0+ss/3600.0)&#xa;&#xa;sec_prec parameters defines how much decimal places we want on&#xa;seconds values.strfcoord uses this to round values when using&#xa;specific%.xf values.&#xa;dd=int(d)&#xa;mms=(d-dd)*60&#xa;mm=int(mms)&#xa;ss=(mms-mm)*60&#xa;sec_prec=sec_prec or 7&#xa;sec_prec+=1&#xa;ss=round(ss,sec_prec)&#xa;if CoordUtil.epsEqual(abs(ss),60.0,10**(-sec_prec)):&#xa;  ss=0&#xa;  if d&lt;0:mm-=1&#xa;  else:mm+=1&#xa;&#xa;sign=1&#xa;if d&lt;0:&#xa;  sign*=-1&#xa;&#xa;return(sign,abs(dd),abs(mm),abs(ss))&#xa;" id="tNH79PvKolqN" />
    <sourcecode value=":&#xa;if type(dms)in[FloatType,IntType,LongType]:&#xa;  return float(dms)&#xa;&#xa;if type(dms)==StringType:&#xa;  matches=CoordUtil.COORD_RE.match(dms.strip())&#xa;  if any(matches.groups()):&#xa;    m_dict=matches.groupdict()&#xa;    sign=m_dict[&quot;sign&quot;]or'+'&#xa;    dd=m_dict[&quot;dd&quot;]or 0&#xa;    mm=m_dict[&quot;mm&quot;]or 0&#xa;    ss=m_dict[&quot;ss&quot;]or 0&#xa;    msec=m_dict[&quot;msec&quot;]or 0&#xa;    try:&#xa;      dd=int(dd)&#xa;      mm=int(mm)&#xa;      ss=int(ss)&#xa;      msec=float(msec)&#xa;&#xa;    except ValueError,e:&#xa;      raise ValueError(&quot;Invalid coordinate: '%s' (%s).&quot;%(dms,e))&#xa;&#xa;    d=abs(dd)+mm*CoordUtil._min2deg+((ss+msec)*CoordUtil._arcsec2deg)&#xa;    if sign=='-':&#xa;      d*=-1&#xa;&#xa;    return d&#xa;&#xa;  else:&#xa;    try:&#xa;      return float(dms)&#xa;&#xa;    except ValueError,e:&#xa;      raise ValueError(&quot;Invalid coordinate: '%s' (%s).&quot;%(dms,e))&#xa;&#xa;&#xa;&#xa;raise ValueError(&quot;Invalid coordinate type: '%s'. Expecting string or numbers.&quot;%str(type(dms)))&#xa;" id="zAn8SJaBdi4k" />
    <sourcecode value=":&#xa;d=CoordUtil.dms2d(hms)&#xa;return d*15&#xa;" id="C8nnopVZCBl7" />
    <sourcecode value=":&#xa;return c.strfcoord()&#xa;" id="sLM4W59TZA8f" />
    <sourcecode value=":&#xa;return c.strfcoord()&#xa;" id="VMk4VrhJ3hcn" />
    <sourcecode value=":&#xa;&quot;strfcoord acts like sprintf family, allowing arbitrary;coordinate conversion to str following the given template&#xa;format.&#xa;String template follow standard python%mapping.The&#xa;available components are:&#xa;  d[d]:decimal degrees&#xa;  m[m]:minutes&#xa;  s[s]:seconds(can be float)&#xa;  s[h]:hours&#xa;  if signed was True,decimal degrees will always begins with&#xa;  a sign(+or-)and hours values will have a negative sign if&#xa;  needed.Note that&#xa;  Examples:&#xa;    'normal'dms string:format='%(d)02d:%(m)02d:%(s)06.3f'&#xa;    'normal'hms string:format='%(h)02d:%(m)02d:%(s)06.3f'&#xa;    @note:You don't need to add + to your format strings, sign;will be added as specified above.&#xa;    @note:To avoid truncation errors with miliseconds numbers,&#xa;    always use%f to represent seconds of arc,This example show&#xa;    what can happen if you don't do that{>>>c=Coord.fromDMS('+13 23 46')&#xa;    >>>c&#xa;    &lt;Coord object+13:23:46.000(DMS)at 0x83a3ae>&#xa;    >>>print c&#xa;    +13:23:46.000&#xa;    >>>c.strfcoord('%(d)02d %(m)02d %(s)02d')&#xa;    '+13 23 45'&#xa;    >>>c.DMS&#xa;    (1,13,23,45.999999999999091)&#xa;    >>>&#xa;    >>>&#xa;&#xa;  default=None&#xa;  if c.state==State.HMS:&#xa;    default='%(h)02d:%(m)02d:%(s)06.3f'&#xa;&#xa;  else:&#xa;    default='%(d)02d:%(m)02d:%(s)06.3f'&#xa;&#xa;  format=format or default&#xa;  need=None&#xa;  if&quot;%(s)&quot;in format:&#xa;    need=&quot;%(s)&quot;&#xa;&#xa;  if&quot;%(ss)&quot;in format:&#xa;    need=&quot;%(ss)&quot;&#xa;&#xa;  sec_prec=None&#xa;  if need:&#xa;    try:&#xa;      ss_index=format.index(need)&#xa;      sec_prec=format[ss_index:format.index('f',ss_index)]&#xa;      parts=sec_prec.split(&quot;.&quot;)&#xa;      if len(parts)==2:&#xa;        sec_prec=int(parts[1])+1&#xa;&#xa;&#xa;    except ValueError:&#xa;      pass&#xa;&#xa;&#xa;  sign,d,dm,ds=CoordUtil.d2dms(c.D,sec_prec)&#xa;  _,h,hm,hs=CoordUtil.d2hms(c.D,sec_prec)&#xa;  m=s=0&#xa;  sign_str=&quot;&quot;&#xa;  if sign&lt;0:&#xa;    sign_str=&quot;-&quot;&#xa;&#xa;  else:&#xa;    sign_str=&quot;+&quot;&#xa;&#xa;  if'(h)'in format or'(hh)'in format:&#xa;    m=hm&#xa;    s=hs&#xa;    if sign>0:sign_str=&quot;&quot;&#xa;&#xa;  else:&#xa;    m=dm&#xa;    s=ds&#xa;&#xa;  subs=dict(d=d,dd=d,&#xa;  m=m,mm=m,s=s,ss=s,h=h,hh=h)if signed:&#xa;    return(sign_str+format)%subs&#xa;&#xa;  else:&#xa;    return format%subs&#xa;&#xa;&#xa;@staticmethod&#xa;def coordToR(coord):&#xa;  if isinstance(coord,Coord):&#xa;    return float(coord.toR())&#xa;&#xa;  else:&#xa;    return float(coord)&#xa;&#xa;&#xa;@staticmethod&#xa;def makeValid0to360(coord):&#xa;  coordR=CoordUtil.coordToR(coord)&#xa;  coordR=coordR%TWO_PI&#xa;  if coordR&lt;0.0:&#xa;    coordR+=TWO_PI&#xa;&#xa;  return Coord.fromR(coordR)&#xa;&#xa;@staticmethod&#xa;def makeValid180to180(coord):&#xa;  coordR=CoordUtil.coordToR(coord)&#xa;  coordR=coordR%TWO_PI&#xa;  if coordR>math.pi:&#xa;    coordR-=TWO_PI&#xa;&#xa;  if coordR&lt;(-math.pi):&#xa;    coordR+=TWO_PI&#xa;&#xa;  return Coord.fromR(coordR)&#xa;&#xa;@staticmethod&#xa;def raToHa(ra,lst):&#xa;  return Coord.fromR(CoordUtil.coordToR(lst)-CoordUtil.coordToR(ra))&#xa;&#xa;@staticmethod&#xa;def haToRa(ha,lst):&#xa;  return Coord.fromR(CoordUtil.coordToR(lst)-CoordUtil.coordToR(ha))&#xa;&#xa;@staticmethod&#xa;def coordRotate(x,y,z):&#xa;  &quot;Used to convert between equatorial and horizon coordinates.;[x,y,and z are angles in radians->return(xt,yt)where xt=arcsin(sin(x)*sin(y)+cos(x)*cos(y)*cos(z))and yt=arccos((sin(x)-sin(y)*sin(xt))/(cos(y)*cos(xt)))]xt=math.asin(math.sin(x)*math.sin(y)+&#xa;  math.cos(x)*math.cos(y)*math.cos(z))yt=math.acos((math.sin(x)-math.sin(y)*math.sin(xt))/&#xa;  (math.cos(y)*math.cos(xt)))if math.sin(z)>0.0:&#xa;    yt=TWO_PI-yt&#xa;&#xa;  return(xt,yt)&#xa;&#xa;" id="me4nJeZoScAl" />
    <sourcecode value=":&#xa;if not have_ds9:&#xa;  raise IOError(&quot;No DS9 available. Check if you have DS9 and XPA&quot;&#xa;  &quot; installed and correctly accesible from Chimera's PATH.&quot;)&#xa;id=&quot;ds9&quot;&#xa;ids=xpaaccess()&#xa;if ids:&#xa;  id=ids[-1]&#xa;&#xa;try:&#xa;  self.ds9=DS9Win(doRaise=True,doOpen=open,template=id,closeFDs=True)&#xa;&#xa;except RuntimeError,e:&#xa;  raise IOError(&quot;DS9 is not available, check if you have the XPA package installed. Display disabled.&quot;)&#xa;&#xa;" id="gBR0JBzKaqVu" />
    <sourcecode value=":&#xa;self.ds9.doOpen()&#xa;" id="U1zSWjDLwA6d" />
    <sourcecode value=":&#xa;return self.ds9.isOpen()&#xa;" id="GaEDiIoalmN3" />
    <sourcecode value=":&#xa;if self.isOpen():&#xa;  self.set(&quot;exit&quot;)&#xa;&#xa;" id="rGua2Hc8cttS" />
    <sourcecode value=":&#xa;try:&#xa;  self.displayFile(image.filename())&#xa;&#xa;except IOError:&#xa;  self.dipslayFile(image.http())&#xa;&#xa;" id="XeTAXLcSnMcx" />
    <sourcecode value=":&#xa;Display a file either from a local file or from a remote URL.&#xa;@param filename:local filename.&#xa;@type filename:str&#xa;@param url:remote URL&#xa;@type url:str&#xa;@rtype:None&#xa;if not filename and not url:&#xa;  raise TypeError(&quot;You must pass either a filename or a url.&quot;)&#xa;&#xa;if filename:&#xa;  if not os.path.exists(filename):&#xa;    raise IOError(&quot;%s doesn't exists&quot;%filename)&#xa;&#xa;  self.set(&quot;file '%s'&quot;%filename)&#xa;&#xa;if url:&#xa;  self.set(&quot;file url '%s'&quot;%url)&#xa;&#xa;" id="Tk2UzY8ENCoV" />
    <sourcecode value=":&#xa;pass&#xa;" id="ExvY01YLVLQV" />
    <sourcecode value=":&#xa;self.ds9.xpaset(cmd,data)&#xa;" id="4TN3gEJUD8UW" />
    <sourcecode value=":&#xa;return self.ds9.xpaget(cmd)&#xa;" id="tq98qQ111ORj" />
    <sourcecode value=":&#xa;return self.ds9.template" id="46DuM4MFDasS" />
    <sourcecode value=":&#xa;return&quot;Enumerations cannot be empty&quot;&#xa;" id="k5kF7GTXY9no" />
    <sourcecode value=":&#xa;self.key=key&#xa;" id="oBSkp3NNGzut" />
    <sourcecode value=":&#xa;return&quot;Enumeration keys must be strings: %s&quot;%(self.key,)&#xa;" id="8FD0ot0X9hHF" />
    <sourcecode value=":&#xa;self.args=args&#xa;" id="hNuwuq6x59lC" />
    <sourcecode value=":&#xa;return&quot;Enumeration does not allow modification&quot;&#xa;" id="oPdWYarPc2l0" />
    <sourcecode value=":&#xa;if self.__class__ is EnumException:&#xa;  raise NotImplementedError,\&#xa;  &quot;%s is an abstract class for subclassing&quot;%self.__class__&#xa;" id="kXMJQwmNHETW" />
    <sourcecode value=":&#xa;&quot; Set up a new instance &quot;&quot;&quot;&#xa;self.__enumtype=enumtype&#xa;self.__index=index&#xa;self.__key=key&#xa;" id="QCN86URFPB0p" />
    <sourcecode value=":&#xa;return self.__enumtype&#xa;" id="zjUaGSK2gslS" />
    <sourcecode value=":&#xa;return self.__key&#xa;" id="d5FKwzmGgtKh" />
    <sourcecode value=":&#xa;return&quot;%s&quot;%(self.key)&#xa;" id="JB8y3QfvWruW" />
    <sourcecode value=":&#xa;return self.index&#xa;" id="Vk91c1X8oZOL" />
    <sourcecode value=":&#xa;return self.__index&#xa;" id="i1OWYkrnEhyx" />
    <sourcecode value=":&#xa;return&quot;EnumValue(%s, %s, %s)&quot;%(&#xa;repr(self.__enumtype),repr(self.__index),repr(self.__key),)&#xa;" id="vfs7Ko5GOswA" />
    <sourcecode value=":&#xa;return hash(self.__index)&#xa;" id="j3K7tFHUTPgn" />
    <sourcecode value=":&#xa;result=NotImplemented&#xa;self_type=self.enumtype&#xa;try:&#xa;  assert self_type==other.enumtype&#xa;  result=cmp(self.index,other.index)&#xa;&#xa;except(AssertionError,AttributeError):&#xa;  result=NotImplemented&#xa;&#xa;return result&#xa;" id="2msT9XHz2NBO" />
    <sourcecode value=":&#xa;&quot; Create an enumeration instance &quot;&quot;&quot;&#xa;value_type=kwargs.get('value_type',EnumValue)&#xa;if not keys:&#xa;  raise EnumEmptyError()&#xa;&#xa;keys=tuple(keys)&#xa;values=[None]*len(keys)&#xa;for i,key in enumerate(keys):&#xa;  value=value_type(self,i,key)&#xa;  values[i]=value&#xa;  try:&#xa;    super(Enum,self).__setattr__(key,value)&#xa;&#xa;  except TypeError,e:&#xa;    raise EnumBadKeyError(key)&#xa;&#xa;&#xa;super(Enum,self).__setattr__('_keys',keys)&#xa;super(Enum,self).__setattr__('_values',values)&#xa;" id="C4SN0RbClE3Y" />
    <sourcecode value=":&#xa;raise EnumImmutableError(name)&#xa;" id="d2ZVRzQQDyjC" />
    <sourcecode value=":&#xa;raise EnumImmutableError(name)&#xa;" id="Wx2kvzNtOP2h" />
    <sourcecode value=":&#xa;return len(self._values)&#xa;" id="rRA6JfcSOFDR" />
    <sourcecode value=":&#xa;return self._values[index]&#xa;" id="mYkBlyc9SddC" />
    <sourcecode value=":&#xa;raise EnumImmutableError(index)&#xa;" id="9LqlODL1blf8" />
    <sourcecode value=":&#xa;raise EnumImmutableError(index)&#xa;" id="ULjSVLlqD6pt" />
    <sourcecode value=":&#xa;return iter(self._values)&#xa;" id="RObGhTsu2AGW" />
    <sourcecode value=":&#xa;is_member=False&#xa;if isinstance(value,basestring):&#xa;  is_member=(value in self._keys)&#xa;&#xa;else:&#xa;  try:&#xa;    is_member=(value in self._values)&#xa;&#xa;  except Exception,e:&#xa;    is_member=False&#xa;&#xa;&#xa;return is_member&#xa;" id="3GG5PWbm41kZ" />
    <sourcecode value=":&#xa;Rationale here is:if,for whatever reason,our Enum get&#xa;copied,normal equality test used in EnumValue.__cmp__ would&#xa;fail,so this ensure that two Enum's are equals even if;different(id)objects,given that they accepts the same&#xa;values(keys).&#xa;assert type(other)==type(self)&#xa;return cmp(getattr(self,'_keys'),getattr(other,'_keys'))" id="AA9YXOfBcuXU" />
    <sourcecode value=":&#xa;self.filename=filename&#xa;self.separator=separator&#xa;self.extension=extension&#xa;self.fullpath=self.filename+self.separator&#xa;self.re=re.compile(&quot;%s(?P&lt;num>[0-9]+).%s&quot;%(self.fullpath,self.extension))&#xa;" id="UpVjKkoKIAyX" />
    <sourcecode value=":&#xa;&quot;Get next sequence number.;nums=[0]&#xa;filenames=glob.glob(self.fullpath+&quot;*&quot;)&#xa;for filename in filenames:&#xa;  match=self.re.match(filename)&#xa;  if not match:continue&#xa;  try:&#xa;    num=int(match.groups()[0])&#xa;    nums.append(num)&#xa;&#xa;  except ValueError:&#xa;    continue&#xa;&#xa;&#xa;return max(nums)+1" id="3ikJXir6RjyM" />
    <sourcecode value=":&#xa;Exception.__init__(self,msg,*args)&#xa;if not all(sys.exc_info()):&#xa;  self.cause=None&#xa;&#xa;else:&#xa;  self.cause=strException(sys.exc_info()[1])&#xa;&#xa;" id="y9kjUPWbyrJD" />
    <sourcecode value=":&#xa;return datetime.strftime(&quot;%Y-%m-%dT%H:%M:%S&quot;)&#xa;" id="D9xbVMXYBswS" />
    <sourcecode value=":&#xa;" id="vIu68qWr6w09" />
    <sourcecode value=":&#xa;fd=pyfits.open(filename,mode=&quot;update&quot;)&#xa;img=Image(filename,fd)&#xa;if fix:&#xa;  img.fix()&#xa;&#xa;return img&#xa;" id="OoUmCRqkjeml" />
    <sourcecode value=":&#xa;if imageRequest:&#xa;  try:&#xa;    filename=imageRequest[&quot;filename&quot;]&#xa;&#xa;  except KeyError:&#xa;    if not filename:&#xa;      raise TypeError(&quot;Invalid filename, you must pass filename=something&quot;&#xa;      &quot;or a valid ImageRequest object&quot;)&#xa;&#xa;&#xa;filename=ImageUtil.makeFilename(filename)&#xa;hdu=pyfits.PrimaryHDU(data)&#xa;headers=[(&quot;DATE&quot;,ImageUtil.formatDate(dt.datetime.now()),&quot;date of file creation&quot;),&#xa;(&quot;CREATOR&quot;,_chimera_name_,_chimera_long_description_)]hdu.scale('int16','',bzero=32768,bscale=1)&#xa;if imageRequest:&#xa;  headers+=imageRequest.headers&#xa;&#xa;for header in headers:&#xa;  try:&#xa;    hdu.header.update(*header)&#xa;&#xa;  except Exception,e:&#xa;    log.warning(&quot;Couldn't add %s: %s&quot;%(str(header),str(e)))&#xa;&#xa;&#xa;hduList=pyfits.HDUList([hdu])&#xa;hduList.writeto(filename)&#xa;hduList.close()&#xa;del hduList&#xa;del hdu&#xa;return Image.fromFile(filename)&#xa;" id="pA1FtINMSsC2" />
    <sourcecode value=":&#xa;RemoteObject.__init__(self)&#xa;self._fd=fd&#xa;self._filename=filename&#xa;self._http=None&#xa;self._wcs=None&#xa;" id="nC46Foexl0yT" />
    <sourcecode value=":&#xa;if http:&#xa;  self._http=http&#xa;&#xa;return self._http&#xa;" id="AGpDJAV6Aje8" />
    <sourcecode value=":&#xa;return&quot;&lt;Image %s>&quot;%self.filename()&#xa;" id="Cuf7ckIzIZR6" />
    <sourcecode value=":&#xa;self._fd.close()&#xa;return self.__dict__&#xa;" id="33RJatPgGSaT" />
    <sourcecode value=":&#xa;self.__dict__=args&#xa;self._fd=pyfits.open(self._filename,mode=&quot;update&quot;)&#xa;" id="kgWy64Rlc0KI" />
    <sourcecode value=":&#xa;if not self._findWCS():&#xa;  return(0,0)&#xa;&#xa;pixel=self._valueAt(self._wcs.wcs_sky2pix_fits,*world)&#xa;pixel=list(round(p,6)for p in pixel)&#xa;if pixel[0]==(-0.0):&#xa;  pixel[0]=0.0&#xa;&#xa;if pixel[1]==(-0.0):&#xa;  pixel[1]=0.0&#xa;&#xa;return tuple(pixel)&#xa;" id="mXJLlisCWNtC" />
    <sourcecode value=":&#xa;if not self._findWCS():&#xa;  return Position.fromRaDec(0,0)&#xa;&#xa;world=self._valueAt(self._wcs.wcs_pix2sky_fits,*pixel)&#xa;return Position.fromRaDec(Coord.fromD(world[0]),Coord.fromD(world[1]))&#xa;" id="X3ZILnpC0xf4" />
    <sourcecode value=":&#xa;if not have_pywcs:return False&#xa;if not self._wcs:&#xa;  try:&#xa;    self._wcs=pywcs.WCS(self._fd[&quot;PRIMARY&quot;].header)&#xa;&#xa;  except KeyError:&#xa;    raise WCSNotFoundException(&quot;Couldn't find WCS information on %s&quot;%(self._filename))&#xa;&#xa;&#xa;return True&#xa;" id="SwjTNYn1NdDn" />
    <sourcecode value=":&#xa;Accepts a function callback and variable coords.&#xa;If len(coords)==1 convert(from tuple or Position)to decimal degress.&#xa;If len(coords)==2,convert(from number or Coord)to decimal degress&#xa;assert len(coords)>=1&#xa;assert self._wcs!=None&#xa;if len(coords)==2:&#xa;  c1=Coord.fromH(coords[0]).D&#xa;  c2=Coord.fromD(coords[1]).D&#xa;&#xa;else:&#xa;  if isinstance(coords[0],Position):&#xa;    c1,c2=coords[0].dd()&#xa;&#xa;  else:&#xa;    c1,c2=coords[0]&#xa;&#xa;&#xa;value=fn([N.array([c1,c2])])&#xa;if len(value)>=1:&#xa;  return tuple(value[0])&#xa;&#xa;else:&#xa;  raise WCSNotFoundException(&quot;Couldn't convert coordinates.&quot;)&#xa;&#xa;" id="rwWEYhzy7gDH" />
    <sourcecode value=":&#xa;" id="QaDQXBv98Nrk" />
    <sourcecode value=":&#xa;Pyro.core.ObjBase.__init__(self)&#xa;self.__lastUsed=None&#xa;self.daemon=None&#xa;" id="c0eZszU6N7gF" />
    <sourcecode value=":&#xa;return 1&#xa;" id="aGBwNr9ikcy6" />
    <sourcecode value=":&#xa;if not self.daemon:&#xa;  return False&#xa;&#xa;return self.daemon.getProxyForObj(self)&#xa;" id="eUUN4QTwRmn9" />
    <sourcecode value=":&#xa;self.__lastUsed=time.time()&#xa;keywords=:&#xa;&#xa;&#xa;if flags&amp;Pyro.constants.RIF_Keywords:&#xa;  keywords=args[-1]&#xa;  args=args[:-1]&#xa;&#xa;if flags&amp;Pyro.constants.RIF_Varargs:&#xa;  args=args[:-1]+args[-1]&#xa;&#xa;if method in dir(Pyro.core.ObjBase):&#xa;  return getattr(self,method)(*args,**keywords)&#xa;&#xa;else:&#xa;  try:&#xa;    target=method.split(&quot;.&quot;)&#xa;    if len(target)==1:&#xa;      return getattr(self,method)(*args,**keywords)&#xa;&#xa;    elif len(target)==2:&#xa;      tmp=getattr(self,target[0])&#xa;      if target[1]in dir(tmp):&#xa;        return getattr(tmp,target[1])(*args,**keywords)&#xa;&#xa;&#xa;    else:&#xa;      raise Exception(&quot;Invalid method %s.&quot;%method)&#xa;&#xa;&#xa;  except:&#xa;    exc_info=sys.exc_info()&#xa;    try:&#xa;      if type(exc_info[0])==StringType:&#xa;        if exc_info[1]==None:&#xa;          raise Exception,exc_info[0],exc_info[2]&#xa;&#xa;        else:&#xa;          raise Exception,&quot;%s: %s&quot;%(exc_info[0],exc_info[1]),exc_info[2]&#xa;&#xa;&#xa;      else:&#xa;        raise&#xa;&#xa;&#xa;    finally:&#xa;      del exc_info" id="Y0mxkX67nUz5" />
    <sourcecode value=":&#xa;self.proxy=ServiceProxy(Simbad.WSDL)&#xa;" id="TWKZ6yzq1Wc2" />
    <sourcecode value=":&#xa;res=self.proxy.sesame(name,'x')&#xa;target=self._parseSesame(res)&#xa;if not target:&#xa;  raise ObjectNotFoundException(&quot;Cound't found %s on SIMBAD&quot;%name)&#xa;&#xa;return target&#xa;" id="ZwcaSCbFSTlH" />
    <sourcecode value=":&#xa;sesame=ET.fromstring(xml.replace(&quot;&amp;&quot;,&quot;&amp;amp;&quot;))&#xa;for resolver in sesame.findall(&quot;Resolver&quot;):&#xa;  jpos=resolver.find(&quot;jpos&quot;)&#xa;  if jpos is None:&#xa;    continue&#xa;&#xa;  return Position.fromRaDec(*jpos.text.split())&#xa;&#xa;return False&#xa;" id="ks0QYt5S5C6u" />
    <sourcecode value=":&#xa;self.limits=[]&#xa;" id="wOSjT1c1TyU6" />
    <sourcecode value=":&#xa;pass&#xa;" id="lKlEGELIhR3K" />
    <sourcecode value=":&#xa;pass" id="Ttq3GtkVIS2R" />
    <sourcecode value=":&#xa;VizQuery.__init__(self)&#xa;" id="uu4VQERaJ76U" />
    <sourcecode value=":&#xa;return&quot;Landolt&quot;&#xa;" id="RR0lY4DbnWLV" />
    <sourcecode value=":&#xa;self.useCat(&quot;II/183A/&quot;)&#xa;if conditions.get(&quot;closest&quot;,False):&#xa;  limit=1&#xa;  self.useColumns(&quot;*POS_EQ_RA_MAIN,*POS_EQ_DEC_MAIN,*ID_MAIN,Vmag,_r&quot;,sortBy=&quot;_r&quot;)&#xa;&#xa;else:&#xa;  self.useColumns(&quot;*POS_EQ_RA_MAIN,*POS_EQ_DEC_MAIN,*ID_MAIN,Vmag,_r&quot;,sortBy=&quot;*POS_EQ_RA_MAIN&quot;)&#xa;&#xa;if near:&#xa;  self.useTarget(near,radius=conditions.get(&quot;radius&quot;,45))&#xa;&#xa;x=super(Landolt,self).find(limit)&#xa;for i in x:&#xa;  RA=i.pop(&quot;*POS_EQ_RA_MAIN&quot;)&#xa;  i[&quot;RA&quot;]=Coord.fromHMS(str(RA))&#xa;  DEC=i.pop(&quot;*POS_EQ_DEC_MAIN&quot;)&#xa;  i[&quot;DEC&quot;]=Coord.fromDMS(str(DEC))&#xa;  ID=i.pop(&quot;*ID_MAIN&quot;)&#xa;  i[&quot;ID&quot;]=str(ID)&#xa;  V=i.pop(&quot;Vmag&quot;)&#xa;  i[&quot;V&quot;]=str(V)&#xa;  i.pop(&quot;_r&quot;)&#xa;&#xa;return x" id="j81UeK0PlF9k" />
    <sourcecode value=":&#xa;self.args=:&#xa;&#xa;&#xa;self.args[&quot;-mime&quot;]=&quot;xml&quot;&#xa;self.columns=None&#xa;" id="FJCHvEelDaWR" />
    <sourcecode value=":&#xa;@param catName:the catalog's name in Vizier;@type catName:str&#xa;Simply sets the catalog's name;self.args[&quot;-source&quot;]=catName&#xa;" id="ybuBBRaWFMtu" />
    <sourcecode value=":&#xa;@param columns:list of catalog's columns to use;@type columns:list&#xa;@param sortBy:define which column to sort by&#xa;@type sortBy:str&#xa;@param reverse:decide to reverse sort@type reverse:bool&#xa;Define which columns will be fetched and which column will be used&#xa;for sorting.&#xa;self.columns=columns.split(&quot;,&quot;)&#xa;self.args[&quot;-out&quot;]=columns&#xa;if reverse:&#xa;  self.args[&quot;-sort&quot;]=&quot;-&quot;+sortBy&#xa;&#xa;else:&#xa;  self.args[&quot;-sort&quot;]=sortBy&#xa;&#xa;" id="FluMwdw4uEPw" />
    <sourcecode value=":&#xa;One sets here which column to sort by&#xa;@param column:name of column to sort by&#xa;@type column:str&#xa;" id="HYwgDDHviqQr" />
    <sourcecode value=":&#xa;Use this to add constraints to any of the columns&#xa;@param columns:list of dictionaries:&#xa;  COLUMN:condition&#xa;&#xa;@type columns:list&#xa;self.args.update(columns)&#xa;" id="nh4yK4FrYafj" />
    <sourcecode value=":&#xa;@param center:center of search in catalog&#xa;@type center:L:&#xa;  Position&#xa;&#xa;@param radius:radius of search&#xa;@type radius:float&#xa;@param box:box size,if you want a square use an integer&#xa;if you want a rectangle use a tuple(ww,hh)@type box:int|tuple&#xa;self.args[&quot;-c&quot;]=str(center)&#xa;self.args[&quot;-c.eq&quot;]=&quot;J2000&quot;&#xa;if radius:&#xa;  self.args[&quot;-c.rd&quot;]=radius&#xa;&#xa;elif box:&#xa;  try:&#xa;    self.args[&quot;-c.bd&quot;]=&quot;=%fx%f&quot;%radius&#xa;&#xa;  except:&#xa;    self.args[&quot;-c.bd&quot;]=radius&#xa;&#xa;&#xa;else:&#xa;  raise TypeError(&quot;You must specify either radius or box size&quot;)&#xa;&#xa;" id="dFnJQBFmxl78" />
    <sourcecode value=":&#xa;@param limit:Number of stars to return from Vizier&#xa;@type limit:int&#xa;self.args[&quot;-out.max&quot;]=limit&#xa;results=tempfile.NamedTemporaryFile(mode='w+',&#xa;prefix=&quot;chimera.vizquery&quot;,dir=tempfile.gettempdir())conn=HTTPConnection(&quot;webviz.u-strasbg.fr&quot;)&#xa;s=urllib.urlencode(self.args)&#xa;conn.request(&quot;POST&quot;,&quot;/viz-bin/votable&quot;,s)&#xa;resp=conn.getresponse()&#xa;ret=resp.read()&#xa;f=open(results.name,&quot;w&quot;)&#xa;f.write(ret)&#xa;f.close()&#xa;obj=[]&#xa;votable=VOTable(results.name)&#xa;for linha in votable.getDataRows():&#xa;  v=[c.getContent()for c in linha.getNodeList()]&#xa;  obj.append(dict(zip(self.columns,v)))&#xa;&#xa;return obj" id="AK8ZuPOitxRA" />
    <sourcecode value=":&#xa;Catalog.__init__(self)&#xa;self.scat=SCatWrapper()&#xa;" id="v4d2NcXojMJD" />
    <sourcecode value=":&#xa;return&quot;PPM&quot;&#xa;" id="dCtLZAYO6DW8" />
    <sourcecode value=":&#xa;return[(&quot;PPM_NUM&quot;,&quot;arbitrary&quot;,&quot;PPM number&quot;),&#xa;(&quot;RA&quot;,&quot;h:m:s&quot;,&quot;Right Ascension (J2000)&quot;),(&quot;DEC&quot;,&quot;d:m:s&quot;,&quot;Declination (J2000)&quot;),(&quot;MAG_J&quot;,&quot;mag&quot;,&quot;J magnitude (1.2 um) from 2MASS&quot;),(&quot;SpTyp&quot;,&quot;arbitrary&quot;,&quot;Spectral type&quot;),(&quot;R&quot;,&quot;arcsec&quot;,&quot;Distance from the target&quot;)]" id="MuNQ7rZWAzZO" />
    <sourcecode value=":&#xa;return[&quot;V&quot;]&#xa;" id="zCU9A1VTZQzz" />
    <sourcecode value=":&#xa;scat_options=:&#xa;  &quot;catalog&quot;:&quot;ppm&quot;,&#xa;  &quot;near&quot;:near or&quot;00:00:00 +00:00:00&quot;,&quot;limit&quot;:limit or 100,&quot;bands&quot;:self.getMagnitudeBands(),&quot;conditions&quot;:conditions,&quot;metadata&quot;:self.getMetadata(),&quot;env&quot;:os.environ.update(:&#xa;    &quot;PPM_PATH&quot;:&quot;/home/henrique/catalogs/&quot;&#xa;  )&#xa;data=self.scat.run(scat_options)&#xa;return data" id="B5QiUQfkqeFN" />
    <sourcecode value=":&#xa;Catalog.__init__(self)&#xa;self.scat=SCatWrapper()&#xa;" id="pP5BpKHR8OXT" />
    <sourcecode value=":&#xa;return&quot;UCAC2&quot;&#xa;" id="YGEecl7BMy7X" />
    <sourcecode value=":&#xa;return[(&quot;UCAC2_NUM&quot;,&quot;arbitrary&quot;,&quot;UCAC2 number&quot;),&#xa;(&quot;RA&quot;,&quot;h:m:s&quot;,&quot;Right Ascension (J2000)&quot;),(&quot;DEC&quot;,&quot;d:m:s&quot;,&quot;Declination (J2000)&quot;),(&quot;MAG_J&quot;,&quot;mag&quot;,&quot;J magnitude (1.2 um) from 2MASS&quot;),(&quot;MAG_H&quot;,&quot;mag&quot;,&quot;H magnitude (1.6 um) from 2MASS&quot;),(&quot;MAG_K&quot;,&quot;mag&quot;,&quot;Ks magnitude (2.2 um) from 2MASS&quot;),(&quot;MAG_UCAC&quot;,&quot;mag&quot;,&quot;Internal UCAC magnitude (red bandpass)&quot;),(&quot;R&quot;,&quot;arcsec&quot;,&quot;Distance from the target&quot;)]" id="psL9pTenRnlg" />
    <sourcecode value=":&#xa;return[&quot;J&quot;,&quot;H&quot;,&quot;K&quot;,&quot;UCAC&quot;]&#xa;" id="1TASEv63CiO1" />
    <sourcecode value=":&#xa;scat_options=:&#xa;  &quot;catalog&quot;:&quot;ucac2&quot;,&#xa;  &quot;near&quot;:near or&quot;00:00:00 +00:00:00&quot;,&quot;limit&quot;:limit or 100,&quot;bands&quot;:self.getMagnitudeBands(),&quot;conditions&quot;:conditions,&quot;metadata&quot;:self.getMetadata(),&quot;env&quot;:os.environ.update(:&#xa;    &quot;UCAC2_PATH&quot;:&quot;/home/henrique/catalogs/ucac2/&quot;&#xa;  )&#xa;data=self.scat.run(scat_options)&#xa;return data" id="8JpJ1BIZQCKo" />
    <sourcecode value=":&#xa;Return the catalog name&#xa;" id="2hdchxNAnq28" />
    <sourcecode value=":&#xa;Returns a list of tuples with information about the each&#xa;column of the catalog.Each tuple contains,in this order,&#xa;name of the column,unit of the column data and a comment.&#xa;" id="urqfitl470hn" />
    <sourcecode value=":&#xa;Return a list of the available magnitude bands on this catalog&#xa;" id="1z06zfugwxgW" />
    <sourcecode value=":&#xa;Query the catalog near a specific object/place with spatial&#xa;and flux limits.&#xa;Examples:&#xa;  ucac=Catalog()&#xa;  ucac.find(near='00:00:00 +00:00:00',radius=10)&#xa;  ucac.find(near='m5',box=(240,240))&#xa;  ucac.find(near='m4',radius=10,magV=10,limit=1)&#xa;  ucac.find(near='meridian',magV=(10,12),limit=10)&#xa;  Keywords:&#xa;    closest(bool)&#xa;    =====================&#xa;    return the closest star near the given coordinate independent&#xa;    of radius and box limits.(it's ortogonal to box/radius;options).&#xa;    near(str)&#xa;    ======================&#xa;    name(resolved by any resolver),ra dec pair in degress or&#xa;    sexagesimal,special names(meridian,zenith)&#xa;    radius(int)&#xa;    ==========&#xa;    limit selection to r arseconds from target(r can be arcsec or&#xa;    degress)&#xa;    box(int or tuple of 2 ints)&#xa;    ================&#xa;    limit to a box centered on the target with w arcsec(or&#xa;    degresss)in increasing right ascension direction and h&#xa;    arseconds towards the north(or degress)&#xa;    limit(int)&#xa;    =========&#xa;    max number of objects to return(default=100)&#xa;    magX(float|tuple of 2 floats)&#xa;    ================================&#xa;    Limit the query based on the X magnitude.One float N param&#xa;    was given,limit the query to the Nth faintest magnitude(only&#xa;    stars brighter than N will be returned).&#xa;    If a tuple(B,F)was given,limit the query to stars brighter&#xa;    than F but fainter than B.&#xa;    Unknown keywords will be ignored(properly warned on the log)." id="PKWJFApMp9Zi" />
    <sourcecode value=":&#xa;tokens=xpath_tokenizer(path)&#xa;self.path=[]&#xa;self.tag=None&#xa;if tokens and tokens[0][0]==&quot;/&quot;:&#xa;  raise SyntaxError(&quot;cannot use absolute path on element&quot;)&#xa;&#xa;while tokens:&#xa;  op,tag=tokens.pop(0)&#xa;  if tag or op==&quot;*&quot;:&#xa;    self.path.append(tag or op)&#xa;&#xa;  elif op==&quot;.&quot;:&#xa;    pass&#xa;&#xa;  elif op==&quot;/&quot;:&#xa;    self.path.append(xpath_descendant_or_self())&#xa;    continue&#xa;&#xa;  else:&#xa;    raise SyntaxError(&quot;unsupported path syntax (%s)&quot;%op)&#xa;&#xa;  if tokens:&#xa;    op,tag=tokens.pop(0)&#xa;    if op!=&quot;/&quot;:&#xa;      raise SyntaxError(&#xa;      &quot;expected path separator (%s)&quot;%(op or tag))&#xa;&#xa;&#xa;if self.path and isinstance(self.path[-1],xpath_descendant_or_self):&#xa;  raise SyntaxError(&quot;path cannot end with //&quot;)&#xa;&#xa;if len(self.path)==1 and isinstance(self.path[0],type(&quot;&quot;)):&#xa;  self.tag=self.path[0]&#xa;&#xa;" id="aIWFGmBxPYVm" />
    <sourcecode value=":&#xa;tag=self.tag&#xa;if tag is None:&#xa;  nodeset=self.findall(element)&#xa;  if not nodeset:&#xa;    return None&#xa;&#xa;  return nodeset[0]&#xa;&#xa;for elem in element:&#xa;  if elem.tag==tag:&#xa;    return elem&#xa;&#xa;&#xa;return None&#xa;" id="l4ejhaBvk8se" />
    <sourcecode value=":&#xa;tag=self.tag&#xa;if tag is None:&#xa;  nodeset=self.findall(element)&#xa;  if not nodeset:&#xa;    return default&#xa;&#xa;  return nodeset[0].text or&quot;&quot;&#xa;&#xa;for elem in element:&#xa;  if elem.tag==tag:&#xa;    return elem.text or&quot;&quot;&#xa;&#xa;&#xa;return default&#xa;" id="BD7nPblYV7Io" />
    <sourcecode value=":&#xa;nodeset=[element]&#xa;index=0&#xa;while 1:&#xa;  try:&#xa;    path=self.path[index]&#xa;    index=index+1&#xa;&#xa;  except IndexError:&#xa;    return nodeset&#xa;&#xa;  set=[]&#xa;  if isinstance(path,xpath_descendant_or_self):&#xa;    try:&#xa;      tag=self.path[index]&#xa;      if not isinstance(tag,type(&quot;&quot;)):&#xa;        tag=None&#xa;&#xa;      else:&#xa;        index=index+1&#xa;&#xa;&#xa;    except IndexError:&#xa;      tag=None&#xa;&#xa;    for node in nodeset:&#xa;      new=list(node.getiterator(tag))&#xa;      if new and new[0]is node:&#xa;        set.extend(new[1:])&#xa;&#xa;      else:&#xa;        set.extend(new)&#xa;&#xa;&#xa;&#xa;  else:&#xa;    for node in nodeset:&#xa;      for node in node:&#xa;        if path==&quot;*&quot;or node.tag==path:&#xa;          set.append(node)&#xa;&#xa;&#xa;&#xa;&#xa;  if not set:&#xa;    return[]&#xa;&#xa;  nodeset=set&#xa;&#xa;" id="mz9xpoYGEgCk" />
    <sourcecode value=":&#xa;for elem in element:&#xa;  if elem.tag==tag:&#xa;    return elem&#xa;&#xa;&#xa;return None&#xa;" id="FbtI5lBO9JtC" />
    <sourcecode value=":&#xa;for elem in element:&#xa;  if elem.tag==tag:&#xa;    return elem.text or&quot;&quot;&#xa;&#xa;&#xa;return default&#xa;" id="Ffv4XGz8lItb" />
    <sourcecode value=":&#xa;if tag[:3]==&quot;.//&quot;:&#xa;  return element.getiterator(tag[3:])&#xa;&#xa;result=[]&#xa;for elem in element:&#xa;  if elem.tag==tag:&#xa;    result.append(elem)&#xa;&#xa;&#xa;return result&#xa;" id="BAPwoUehkFdy" />
    <sourcecode value=":&#xa;if not hasattr(source,&quot;read&quot;):&#xa;  source=open(source,&quot;rb&quot;)&#xa;&#xa;if not parser:&#xa;  parser=XMLTreeBuilder()&#xa;&#xa;while 1:&#xa;  data=source.read(32768)&#xa;  if not data:&#xa;    break&#xa;&#xa;  parser.feed(data)&#xa;&#xa;return parser.close()&#xa;" id="nhoeKi9NzqtK" />
    <sourcecode value=":&#xa;return _iterparse(source,events)&#xa;" id="jZtpBMFYy2pO" />
    <sourcecode value=":&#xa;parser=XMLTreeBuilder()&#xa;parser.feed(text)&#xa;return parser.close()&#xa;" id="6nh3KFAB4myu" />
    <sourcecode value=":&#xa;self.tag=tag&#xa;self.attrib=attrib&#xa;self._children=[]&#xa;" id="XvtBG28qMDSS" />
    <sourcecode value=":&#xa;return&quot;&lt;Element %s at %x>&quot;%(self.tag,id(self))&#xa;" id="OUTUYmneAv5l" />
    <sourcecode value=":&#xa;return Element(tag,attrib)&#xa;" id="cLEkGHVlC4rl" />
    <sourcecode value=":&#xa;return len(self._children)&#xa;" id="2lniOdeFyJHM" />
    <sourcecode value=":&#xa;return self._children[index]&#xa;" id="kr5hAN31RhrW" />
    <sourcecode value=":&#xa;assert iselement(element)&#xa;self._children[index]=element&#xa;" id="XZF8oADoPoIo" />
    <sourcecode value=":&#xa;del self._children[index]&#xa;" id="z3PvMVdom8fs" />
    <sourcecode value=":&#xa;return self._children[start:stop]&#xa;" id="8yzyts32g565" />
    <sourcecode value=":&#xa;for element in elements:&#xa;  assert iselement(element)&#xa;&#xa;self._children[start:stop]=list(elements)&#xa;" id="YT6D0JnMYMPr" />
    <sourcecode value=":&#xa;del self._children[start:stop]&#xa;" id="sXgClkTiWuIA" />
    <sourcecode value=":&#xa;assert iselement(element)&#xa;self._children.append(element)&#xa;" id="GPL1jqYmmkKa" />
    <sourcecode value=":&#xa;assert iselement(element)&#xa;self._children.insert(index,element)&#xa;" id="i1B3AA1QRkEj" />
    <sourcecode value=":&#xa;assert iselement(element)&#xa;self._children.remove(element)&#xa;" id="gI8Xb5X41uxh" />
    <sourcecode value=":&#xa;return self._children&#xa;" id="cR4SETfp0pPM" />
    <sourcecode value=":&#xa;return ElementPath.find(self,path)&#xa;" id="VlUVYuqf6DKG" />
    <sourcecode value=":&#xa;return ElementPath.findtext(self,path,default)&#xa;" id="ZqT2Upb8CoHc" />
    <sourcecode value=":&#xa;return ElementPath.findall(self,path)&#xa;" id="L1rxuj2aBESO" />
    <sourcecode value=":&#xa;self.attrib.clear()&#xa;self._children=[]&#xa;self.text=self.tail=None&#xa;" id="oGLaq3qjDHKx" />
    <sourcecode value=":&#xa;return self.attrib.get(key,default)&#xa;" id="L5EYKYUcRXvj" />
    <sourcecode value=":&#xa;self.attrib[key]=value&#xa;" id="UF3gOsB1BI6z" />
    <sourcecode value=":&#xa;return self.attrib.keys()&#xa;" id="IfLJCGiaN78k" />
    <sourcecode value=":&#xa;return self.attrib.items()&#xa;" id="ppmAwsuWUMUx" />
    <sourcecode value=":&#xa;nodes=[]&#xa;if tag==&quot;*&quot;:&#xa;  tag=None&#xa;&#xa;if tag is None or self.tag==tag:&#xa;  nodes.append(self)&#xa;&#xa;for node in self._children:&#xa;  nodes.extend(node.getiterator(tag))&#xa;&#xa;return nodes&#xa;" id="OUWtoyqlaR0F" />
    <sourcecode value=":&#xa;if tag:&#xa;  text_or_uri=&quot;{%s}%s&quot;%(text_or_uri,tag)&#xa;&#xa;self.text=text_or_uri&#xa;" id="hIOHN8gRht2e" />
    <sourcecode value=":&#xa;return self.text&#xa;" id="n0z6Mymodpy9" />
    <sourcecode value=":&#xa;return hash(self.text)&#xa;" id="wMQXBOe46JxN" />
    <sourcecode value=":&#xa;if isinstance(other,QName):&#xa;  return cmp(self.text,other.text)&#xa;&#xa;return cmp(self.text,other)&#xa;" id="jJlnaiAA4y64" />
    <sourcecode value=":&#xa;assert element is None or iselement(element)&#xa;self._root=element&#xa;if file:&#xa;  self.parse(file)&#xa;&#xa;" id="3sB4FefLGOQr" />
    <sourcecode value=":&#xa;return self._root&#xa;" id="ee9TGt3jqoh6" />
    <sourcecode value=":&#xa;assert iselement(element)&#xa;self._root=element&#xa;" id="qQUeECk0M7aB" />
    <sourcecode value=":&#xa;if parser:&#xa;  tree=default_parser_api.parse(source,parser)&#xa;&#xa;else:&#xa;  tree=parser_api.parse(source)&#xa;&#xa;self._root=tree&#xa;return tree&#xa;" id="1gk72DUKWp6l" />
    <sourcecode value=":&#xa;assert self._root is not None&#xa;return self._root.getiterator(tag)&#xa;" id="Q34tYJQE2DPY" />
    <sourcecode value=":&#xa;assert self._root is not None&#xa;if path[:1]==&quot;/&quot;:&#xa;  path=&quot;.&quot;+path&#xa;&#xa;return self._root.find(path)&#xa;" id="3LlnSKPBZzgO" />
    <sourcecode value=":&#xa;assert self._root is not None&#xa;if path[:1]==&quot;/&quot;:&#xa;  path=&quot;.&quot;+path&#xa;&#xa;return self._root.findtext(path,default)&#xa;" id="k1bxhhnP5SQJ" />
    <sourcecode value=":&#xa;assert self._root is not None&#xa;if path[:1]==&quot;/&quot;:&#xa;  path=&quot;.&quot;+path&#xa;&#xa;return self._root.findall(path)&#xa;" id="lziLpKdKlKvc" />
    <sourcecode value=":&#xa;assert self._root is not None&#xa;if not hasattr(file,&quot;write&quot;):&#xa;  file=open(file,&quot;wb&quot;)&#xa;&#xa;if not encoding:&#xa;  encoding=&quot;us-ascii&quot;&#xa;&#xa;elif encoding!=&quot;utf-8&quot;and encoding!=&quot;us-ascii&quot;:&#xa;  file.write(&quot;&lt;?xml version='1.0' encoding='%s'?>\n&quot;%encoding)&#xa;&#xa;self._write(file,self._root,encoding,:&#xa;&#xa;)&#xa;" id="73A2qXOeNURN" />
    <sourcecode value=":&#xa;tag=node.tag&#xa;if tag is Comment:&#xa;  file.write(&quot;&lt;!-- %s -->&quot;%_escape_cdata(node.text,encoding))&#xa;&#xa;elif tag is ProcessingInstruction:&#xa;  file.write(&quot;&lt;?%s?>&quot;%_escape_cdata(node.text,encoding))&#xa;&#xa;else:&#xa;  items=node.items()&#xa;  xmlns_items=[]&#xa;  try:&#xa;    if isinstance(tag,QName)or tag[:1]==&quot;{&quot;:&#xa;      tag,xmlns=fixtag(tag,namespaces)&#xa;      if xmlns:xmlns_items.append(xmlns)&#xa;&#xa;&#xa;  except TypeError:&#xa;    _raise_serialization_error(tag)&#xa;&#xa;  file.write(&quot;&lt;&quot;+_encode(tag,encoding))&#xa;  if items or xmlns_items:&#xa;    items.sort()&#xa;    for k,v in items:&#xa;      try:&#xa;        if isinstance(k,QName)or k[:1]==&quot;{&quot;:&#xa;          k,xmlns=fixtag(k,namespaces)&#xa;          if xmlns:xmlns_items.append(xmlns)&#xa;&#xa;&#xa;      except TypeError:&#xa;        _raise_serialization_error(k)&#xa;&#xa;      try:&#xa;        if isinstance(v,QName):&#xa;          v,xmlns=fixtag(v,namespaces)&#xa;          if xmlns:xmlns_items.append(xmlns)&#xa;&#xa;&#xa;      except TypeError:&#xa;        _raise_serialization_error(v)&#xa;&#xa;      file.write(&quot; %s=\&quot;%s\&quot;&quot;%(_encode(k,encoding),&#xa;      _escape_attrib(v,encoding)))&#xa;    for k,v in xmlns_items:&#xa;      file.write(&quot; %s=\&quot;%s\&quot;&quot;%(_encode(k,encoding),&#xa;      _escape_attrib(v,encoding)))&#xa;&#xa;  if node.text or len(node):&#xa;    file.write(&quot;>&quot;)&#xa;    if node.text:&#xa;      file.write(_escape_cdata(node.text,encoding))&#xa;&#xa;    for n in node:&#xa;      self._write(file,n,encoding,namespaces)&#xa;&#xa;    file.write(&quot;&lt;/&quot;+_encode(tag,encoding)+&quot;>&quot;)&#xa;&#xa;  else:&#xa;    file.write(&quot; />&quot;)&#xa;&#xa;  for k,v in xmlns_items:&#xa;    del namespaces[v]&#xa;&#xa;&#xa;if node.tail:&#xa;  file.write(_escape_cdata(node.tail,encoding))&#xa;&#xa;" id="1rl1Z2rniMPr" />
    <sourcecode value=":&#xa;if not hasattr(source,&quot;read&quot;):&#xa;  source=open(source,&quot;rb&quot;)&#xa;&#xa;self._file=source&#xa;self._events=[]&#xa;self._index=0&#xa;self.root=self._root=None&#xa;self._parser=XMLTreeBuilder()&#xa;parser=self._parser._parser&#xa;append=self._events.append&#xa;if events is None:&#xa;  events=[&quot;end&quot;]&#xa;&#xa;for event in events:&#xa;  if event==&quot;start&quot;:&#xa;    try:&#xa;      parser.ordered_attributes=1&#xa;      parser.specified_attributes=1&#xa;      def handler(tag,attrib_in,event=event,append=append,&#xa;      start=self._parser._start_list):&#xa;        append((event,start(tag,attrib_in)))&#xa;&#xa;      parser.StartElementHandler=handler&#xa;&#xa;    except AttributeError:&#xa;      def handler(tag,attrib_in,event=event,append=append,&#xa;      start=self._parser._start):&#xa;        append((event,start(tag,attrib_in)))&#xa;&#xa;      parser.StartElementHandler=handler&#xa;&#xa;&#xa;  elif event==&quot;end&quot;:&#xa;    def handler(tag,event=event,append=append,&#xa;    end=self._parser._end):&#xa;      append((event,end(tag)))&#xa;&#xa;    parser.EndElementHandler=handler&#xa;&#xa;  elif event==&quot;start-ns&quot;:&#xa;    def handler(prefix,uri,event=event,append=append):&#xa;      try:&#xa;        uri=_encode(uri,&quot;ascii&quot;)&#xa;&#xa;      except UnicodeError:&#xa;        pass&#xa;&#xa;      append((event,(prefix or&quot;&quot;,uri)))&#xa;&#xa;    parser.StartNamespaceDeclHandler=handler&#xa;&#xa;  elif event==&quot;end-ns&quot;:&#xa;    def handler(prefix,event=event,append=append):&#xa;      append((event,None))&#xa;&#xa;    parser.EndNamespaceDeclHandler=handler&#xa;&#xa;&#xa;" id="4oQFuCqQqAee" />
    <sourcecode value=":&#xa;while 1:&#xa;  try:&#xa;    item=self._events[self._index]&#xa;&#xa;  except IndexError:&#xa;    if self._parser is None:&#xa;      self.root=self._root&#xa;      try:&#xa;        raise StopIteration&#xa;&#xa;      except NameError:&#xa;        raise IndexError&#xa;&#xa;&#xa;    del self._events[:]&#xa;    self._index=0&#xa;    data=self._file.read(16384)&#xa;    if data:&#xa;      self._parser.feed(data)&#xa;&#xa;    else:&#xa;      self._root=self._parser.close()&#xa;      self._parser=None&#xa;&#xa;&#xa;  else:&#xa;    self._index=self._index+1&#xa;    return item&#xa;&#xa;&#xa;" id="hWBdh8R4vgFq" />
    <sourcecode value=":&#xa;return self&#xa;" id="FQI84WzZZNom" />
    <sourcecode value=":&#xa;self._data=[]&#xa;self._elem=[]&#xa;self._last=None&#xa;self._tail=None&#xa;if element_factory is None:&#xa;  element_factory=_ElementInterface&#xa;&#xa;self._factory=element_factory&#xa;" id="3agZc2kiHENc" />
    <sourcecode value=":&#xa;assert len(self._elem)==0,&quot;missing end tags&quot;&#xa;assert self._last!=None,&quot;missing toplevel element&quot;&#xa;return self._last&#xa;" id="KwvyjDdiUuTO" />
    <sourcecode value=":&#xa;if self._data:&#xa;  if self._last is not None:&#xa;    text=string.join(self._data,&quot;&quot;)&#xa;    if self._tail:&#xa;      assert self._last.tail is None,&quot;internal error (tail)&quot;&#xa;      self._last.tail=text&#xa;&#xa;    else:&#xa;      assert self._last.text is None,&quot;internal error (text)&quot;&#xa;      self._last.text=text&#xa;&#xa;&#xa;  self._data=[]&#xa;&#xa;" id="LWOqPrENtYuC" />
    <sourcecode value=":&#xa;self._data.append(data)&#xa;" id="GGu8noK8R7Uj" />
    <sourcecode value=":&#xa;self._flush()&#xa;self._last=elem=self._factory(tag,attrs)&#xa;if self._elem:&#xa;  self._elem[-1].append(elem)&#xa;&#xa;self._elem.append(elem)&#xa;self._tail=0&#xa;return elem&#xa;" id="EbdPNuTm9lLo" />
    <sourcecode value=":&#xa;self._flush()&#xa;self._last=self._elem.pop()&#xa;assert self._last.tag==tag,\&#xa;&quot;end tag mismatch (expected %s, got %s)&quot;%(self._last.tag,tag)self._tail=1&#xa;return self._last&#xa;" id="jaKkMy917Kox" />
    <sourcecode value=":&#xa;try:&#xa;  from xml.parsers import expat&#xa;&#xa;except ImportError:&#xa;  raise ImportError(&#xa;  &quot;No module named expat; use SimpleXMLTreeBuilder instead&quot;)&#xa;self._parser=parser=expat.ParserCreate(None,&quot;}&quot;)&#xa;if target is None:&#xa;  target=TreeBuilder()&#xa;&#xa;self._target=target&#xa;self._names=:&#xa;&#xa;&#xa;parser.DefaultHandlerExpand=self._default&#xa;parser.StartElementHandler=self._start&#xa;parser.EndElementHandler=self._end&#xa;parser.CharacterDataHandler=self._data&#xa;try:&#xa;  self._parser.buffer_text=1&#xa;&#xa;except AttributeError:&#xa;  pass&#xa;&#xa;try:&#xa;  self._parser.ordered_attributes=1&#xa;  self._parser.specified_attributes=1&#xa;  parser.StartElementHandler=self._start_list&#xa;&#xa;except AttributeError:&#xa;  pass&#xa;&#xa;encoding=None&#xa;if not parser.returns_unicode:&#xa;  encoding=&quot;utf-8&quot;&#xa;&#xa;self._doctype=None&#xa;self.entity=:&#xa;&#xa;&#xa;" id="Cj2qVypG0q7N" />
    <sourcecode value=":&#xa;try:&#xa;  return _encode(text,&quot;ascii&quot;)&#xa;&#xa;except UnicodeError:&#xa;  return text&#xa;&#xa;" id="nrY616sN9R7I" />
    <sourcecode value=":&#xa;try:&#xa;  name=self._names[key]&#xa;&#xa;except KeyError:&#xa;  name=key&#xa;  if&quot;}&quot;in name:&#xa;    name=&quot;{&quot;+name&#xa;&#xa;  self._names[key]=name=self._fixtext(name)&#xa;&#xa;return name&#xa;" id="oUJZPj4g21Bl" />
    <sourcecode value=":&#xa;fixname=self._fixname&#xa;tag=fixname(tag)&#xa;attrib=:&#xa;&#xa;&#xa;for key,value in attrib_in.items():&#xa;  attrib[fixname(key)]=self._fixtext(value)&#xa;&#xa;return self._target.start(tag,attrib)&#xa;" id="GqGZFtl2w3y2" />
    <sourcecode value=":&#xa;fixname=self._fixname&#xa;tag=fixname(tag)&#xa;attrib=:&#xa;&#xa;&#xa;if attrib_in:&#xa;  for i in range(0,len(attrib_in),2):&#xa;    attrib[fixname(attrib_in[i])]=self._fixtext(attrib_in[i+1])&#xa;&#xa;&#xa;return self._target.start(tag,attrib)&#xa;" id="Qa55fzydesXI" />
    <sourcecode value=":&#xa;return self._target.data(self._fixtext(text))&#xa;" id="PMlTy0CWBWjC" />
    <sourcecode value=":&#xa;return self._target.end(self._fixname(tag))&#xa;" id="2Na9dC2ayuRd" />
    <sourcecode value=":&#xa;prefix=text[:1]&#xa;if prefix==&quot;&amp;&quot;:&#xa;  try:&#xa;    self._target.data(self.entity[text[1:-1]])&#xa;&#xa;  except KeyError:&#xa;    from xml.parsers import expat&#xa;    raise expat.error(&#xa;    &quot;undefined entity %s: line %d, column %d&quot;%(text,self._parser.ErrorLineNumber,self._parser.ErrorColumnNumber))&#xa;&#xa;elif prefix==&quot;&lt;&quot;and text[:9]==&quot;&lt;!DOCTYPE&quot;:&#xa;  self._doctype=[]&#xa;&#xa;elif self._doctype is not None:&#xa;  if prefix==&quot;>&quot;:&#xa;    self._doctype=None&#xa;    return&#xa;&#xa;  text=string.strip(text)&#xa;  if not text:&#xa;    return&#xa;&#xa;  self._doctype.append(text)&#xa;  n=len(self._doctype)&#xa;  if n>2:&#xa;    type=self._doctype[1]&#xa;    if type==&quot;PUBLIC&quot;and n==4:&#xa;      name,type,pubid,system=self._doctype&#xa;&#xa;    elif type==&quot;SYSTEM&quot;and n==3:&#xa;      name,type,system=self._doctype&#xa;      pubid=None&#xa;&#xa;    else:&#xa;      return&#xa;&#xa;    if pubid:&#xa;      pubid=pubid[1:-1]&#xa;&#xa;    self.doctype(name,pubid,system[1:-1])&#xa;    self._doctype=None&#xa;&#xa;&#xa;" id="d8wW1Wb2eCOD" />
    <sourcecode value=":&#xa;pass&#xa;" id="rniAwf7pMEJU" />
    <sourcecode value=":&#xa;self._parser.Parse(data,0)&#xa;" id="ZTUyyyxtJ91X" />
    <sourcecode value=":&#xa;self._parser.Parse(&quot;&quot;,1)&#xa;tree=self._target.close()&#xa;del self._target,self._parser&#xa;return tree&#xa;" id="iXCGtfYLD6GR" />
    <sourcecode value=":&#xa;for catalog in[Landolt]:&#xa;  cat=catalog()&#xa;  data=cat.find(near=&quot;15:18:33.7 +02:04:58&quot;,closest=True)&#xa;&#xa;" id="g5PqQHanQZiz" />
    <sourcecode value=":&#xa;print&#xa;for catalog in[Landolt]:&#xa;  cat=catalog()&#xa;  data=cat.find(near=&quot;15:18:33.7 +02:04:58&quot;,box=3600)&#xa;" id="YETwmBwpEfOM" />
    <sourcecode value=":&#xa;return(abs(a-b)&lt;=e)&#xa;" id="cS9eK8Oo1P7E" />
    <sourcecode value=":&#xa;&quot;Parsing and comparing to Vizier calculated values the entire 5th Bright Star Catalogue&quot;&quot;&quot;&#xa;bsc=asciidata.open(os.path.abspath(os.path.join(os.path.dirname(__file__),'bsc.dat')),comment_char=';expected_ra=[]&#xa;expected_ra_str=[]&#xa;expected_dec=[]&#xa;expected_dec_str=[]&#xa;ra=[]&#xa;dec=[]&#xa;for i in range(bsc.nrows):&#xa;  expected_ra.append(bsc[0][i])&#xa;  expected_dec.append(bsc[1][i])&#xa;  expected_ra_str.append(bsc[2][i].strip())&#xa;  expected_dec_str.append(bsc[3][i].strip())&#xa;  ra.append(Coord.fromHMS(bsc[2][i]))&#xa;  dec.append(Coord.fromDMS(bsc[3][i]))&#xa;&#xa;for i in range(bsc.nrows):&#xa;  assert TestCoord.equal(ra[i].D,expected_ra[i],e=1e-4),&quot;ra: %.6f != coord ra: %.6f (%.6f)&quot;%(expected_ra[i],ra[i].D,&#xa;  expected_ra[i]-ra[i].D)assert TestCoord.equal(dec[i].D,expected_dec[i],e=1e-4),&quot;dec: %.6f != coord dec: %.64f (%.6f)&quot;%(expected_dec[i],dec[i].D,&#xa;  expected_dec[i]-dec[i].D)assert expected_ra_str[i]==ra[i].strfcoord(&quot;%(h)02d %(m)02d %(s)04.1f&quot;),&quot;ra: %s != coord ra: %s&quot;%(expected_ra_str[i],&#xa;  ra[i].strfcoord(&quot;%(h)02d %(m)02d %(s)04.1f&quot;))assert expected_dec_str[i]==dec[i].strfcoord(&quot;%(d)02d %(m)02d %(s)02.0f&quot;),&quot;dec: %s != coord dec: %s&quot;%(expected_dec_str[i],&#xa;  dec[i].strfcoord(&quot;%(d)02d %(m)02d %(s)02.0f&quot;))&#xa;" id="DaUG7IeoVpS5" />
    <sourcecode value=":&#xa;&quot;Parsing and comparing a subset of the Hipparcos and Tycho Catalog&quot;&quot;&quot;&#xa;bsc=asciidata.open(os.path.abspath(os.path.join(os.path.dirname(__file__),'hipparcos-tycho.dat')),comment_char=';expected_ra=[]&#xa;expected_ra_str=[]&#xa;expected_dec=[]&#xa;expected_dec_str=[]&#xa;ra=[]&#xa;ra_hms=[]&#xa;dec=[]&#xa;dec_dms=[]&#xa;for i in range(bsc.nrows):&#xa;  expected_ra_str.append(bsc[0][i].strip())&#xa;  expected_dec_str.append(bsc[1][i].strip())&#xa;  expected_ra.append(float(bsc[2][i]))&#xa;  expected_dec.append(float(bsc[3][i]))&#xa;  ra.append(Coord.fromD(bsc[2][i]))&#xa;  dec.append(Coord.fromD(bsc[3][i]))&#xa;  ra_hms.append(Coord.fromHMS(bsc[0][i]))&#xa;  dec_dms.append(Coord.fromDMS(bsc[1][i]))&#xa;&#xa;for i in range(bsc.nrows):&#xa;  assert expected_ra_str[i]==ra_hms[i].strfcoord(&quot;%(h)02d %(m)02d %(s)05.2f&quot;),&quot;ra: %s != coord ra: %s&quot;%(expected_ra_str[i],&#xa;  ra_hms[i].strfcoord(&quot;%(h)02d %(m)02d %(s)05.2f&quot;))assert expected_dec_str[i]==dec_dms[i].strfcoord(&quot;%(d)02d %(m)02d %(s)04.1f&quot;),&quot;dec: %s != coord dec: %s&quot;%(expected_dec_str[i],&#xa;  dec_dms[i].strfcoord(&quot;%(d)02d %(m)02d %(s)04.1f&quot;))assert TestCoord.equal(ra[i].D,expected_ra[i],e=1e-8),&quot;ra: %.6f != coord ra: %.6f (%.6f)&quot;%(expected_ra[i],ra[i].D,&#xa;  expected_ra[i]-ra[i].D)assert TestCoord.equal(dec[i].D,expected_dec[i],e=1e-8),&quot;dec: %.6f != coord dec: %.64f (%.6f)&quot;%(expected_dec[i],dec[i].D,&#xa;  expected_dec[i]-dec[i].D)assert TestCoord.equal(ra_hms[i].D,expected_ra[i],e=1e-4),&quot;ra: %.6f != coord ra: %.6f (%.6f)&quot;%(expected_ra[i],ra_hms[i].D,&#xa;  expected_ra[i]-ra_hms[i].D)assert TestCoord.equal(dec_dms[i].D,expected_dec[i],e=1e-4),&quot;dec: %.6f != coord dec: %.64f (%.6f)&quot;%(expected_dec[i],dec_dms[i].D,&#xa;  expected_dec[i]-dec_dms[i].D)&#xa;" id="ErskgKnje3xo" />
    <sourcecode value=":&#xa;coords=[]&#xa;t_parse=0&#xa;t_check=0&#xa;for dd in range(-23,24):&#xa;  for mm in range(0,60):&#xa;    for ss in range(0,60):&#xa;      s='%+03d:%02d:%06.3f'%(dd,mm,ss)&#xa;      t=time.clock()&#xa;      c=Coord.fromDMS(s)&#xa;      t_parse+=time.clock()-t&#xa;      coords.append((s,c))&#xa;&#xa;&#xa;&#xa;for coord in coords:&#xa;  t=time.clock()&#xa;  assert coord[0]==str(coord[1]),(coord[0],&quot;!=&quot;,str(coord[1]))&#xa;  t_check+=time.clock()-t&#xa;&#xa;print&quot;;t_check,len(coords)/t_check" id="6cSkfPX80nGt" />
    <sourcecode value=":&#xa;ds9=DS9()&#xa;assert ds9!=None&#xa;ds9.open()&#xa;assert ds9.isOpen()==True&#xa;ds9.quit()&#xa;assert ds9.isOpen()==False&#xa;" id="havlsVOdweXl" />
    <sourcecode value=":&#xa;filename=os.path.realpath(os.path.join(os.path.dirname(__file__),&quot;teste-sem-wcs.fits&quot;))&#xa;p=subprocess.Popen(&quot;ds9 %s&quot;%filename,shell=True)&#xa;time.sleep(2)&#xa;ds9=DS9()&#xa;assert ds9.isOpen()==True&#xa;assert ds9.get(&quot;file&quot;).strip()==filename&#xa;os.kill(p.pid,signal.SIGTERM)&#xa;ds9.quit()" id="sPZp34aLCpAr" />
    <sourcecode value=":&#xa;img=Image.fromFile(os.path.join(self.base,&quot;teste-sem-wcs.fits&quot;),fix=False)&#xa;print&#xa;for k,v in img.items():&#xa;  print k,v,type(v)&#xa;&#xa;" id="yDvfRohNgzS8" />
    <sourcecode value=":&#xa;for f in[&quot;teste-com-wcs.fits&quot;,&quot;teste-sem-wcs.fits&quot;]:&#xa;  img=Image.fromFile(os.path.join(self.base,f),fix=False)&#xa;  print f&#xa;  world=img.worldAt(0,0)&#xa;  print&quot;world value at pixel 0,0:&quot;,world&#xa;  print&quot;pixel value at world %s:&quot;%world,img.pixelAt(world)&#xa;  print&quot;world value at center pix %s:&quot;%str(img.center()),img.worldAt(img.center())&#xa;  print&#xa;&#xa;" id="EU6uTY0lCA3Z" />
    <sourcecode value=":&#xa;for f in[&quot;teste-com-wcs.fits&quot;,&quot;teste-sem-wcs.fits&quot;]:&#xa;  try:&#xa;    img=Image.fromFile(os.path.join(self.base,f),fix=False)&#xa;    stars=img.extract()&#xa;    print&#xa;    print&quot;Found %d star(s) on image %s, showing first 10:&quot;%(len(stars),img.filename)&#xa;    for star in stars[:10]:&#xa;      print star[&quot;NUMBER&quot;],star[&quot;XWIN_IMAGE&quot;],star[&quot;YWIN_IMAGE&quot;],star[&quot;FLUX_BEST&quot;]&#xa;&#xa;&#xa;  except SExtractorException:&#xa;    print&quot;You don't have SExtractor... try to install it before&quot;&#xa;&#xa;&#xa;" id="xwv77zeKgx7B" />
    <sourcecode value=":&#xa;names=[]&#xa;for i in range(10):&#xa;  name=ImageUtil.makeFilename(os.path.join(os.path.curdir,&quot;autogen-$OBJECT.fits&quot;),subs=:&#xa;    &quot;OBJECT&quot;:&quot;M5&quot;&#xa;  )&#xa;  names.append(name)&#xa;  file(name,&quot;w&quot;).close()&#xa;&#xa;print&#xa;for n in names:print n&#xa;" id="J43zzA9AvnYn" />
    <sourcecode value=":&#xa;img=Image.create(N.zeros((100,100)),filename=&quot;autogen-teste.fits&quot;)&#xa;print img.width,img.height" id="yWirKHdbaWpA" />
    <sourcecode value=":&#xa;landolt=Landolt()&#xa;landolt.useTarget(Position.fromRaDec(&quot;14:00:00&quot;,&quot;-22:00:00&quot;),radius=45)&#xa;landolt.constrainColumns(:&#xa;  &quot;Vmag&quot;:&quot;&lt;10&quot;&#xa;)&#xa;data=landolt.find(limit=5)&#xa;for obj in data:&#xa;  for k,v in obj.items():&#xa;    print k,v" id="tuOrdQGfl3U9" />
    <sourcecode value=":&#xa;p=Position.fromRaDec(&quot;10:00:00&quot;,&quot;20 00 00&quot;)&#xa;assert p.dd()==(150,20)&#xa;assert_raises(ValueError,Position.fromRaDec,&quot;xyz&quot;,&quot;abc&quot;)&#xa;" id="RaaNwFKy8EXZ" />
    <sourcecode value=":&#xa;p=Position.fromAltAz(&quot;60&quot;,&quot;200&quot;)&#xa;assert p.dd()==(200,60)&#xa;assert_raises(ValueError,Position.fromAltAz,&quot;xyz&quot;,&quot;abc&quot;)&#xa;" id="9K3FYaoRrp2c" />
    <sourcecode value=":&#xa;p=Position.fromLongLat(&quot;-27 30&quot;,&quot;-48 00&quot;)&#xa;assert p.dd()==(-27.5,-48.0)&#xa;assert_raises(ValueError,Position.fromLongLat,&quot;xyz&quot;,&quot;abc&quot;)&#xa;" id="d6cSvd4wzGES" />
    <sourcecode value=":&#xa;p=Position.fromGalactic(&quot;-27 30&quot;,&quot;-48 00&quot;)&#xa;assert p.dd()==(-27.5,-48.0)&#xa;assert_raises(ValueError,Position.fromGalactic,&quot;xyz&quot;,&quot;abc&quot;)&#xa;" id="DPYCdke5HMxx" />
    <sourcecode value=":&#xa;p=Position.fromEcliptic(&quot;-27 30&quot;,&quot;-48 00&quot;)&#xa;assert p.dd()==(-27.5,-48.0)&#xa;assert_raises(ValueError,Position.fromEcliptic,&quot;xyz&quot;,&quot;abc&quot;)&#xa;" id="2wXJJUE1xb8J" />
    <sourcecode value=":&#xa;altAz=Position.fromAltAz('20:30:40','222:11:00')&#xa;lat=Coord.fromD(0)&#xa;o=ephem.Observer()&#xa;o.lat='0:0:0'&#xa;o.long='0:0:0'&#xa;o.date=dt.now(tz.tzutc())&#xa;lst=float(o.sidereal_time())&#xa;raDec=Position.altAzToRaDec(altAz,lat,lst)&#xa;altAz2=Position.raDecToAltAz(raDec,lat,lst)&#xa;assert equal(altAz.alt.toR(),altAz2.alt.toR())&amp;equal(altAz.az.toR(),altAz2.az.toR())" id="GN2Dx9XAfLJu" />
    <sourcecode value=":&#xa;x=VizQuery()&#xa;x.useCat(&quot;II/183A/&quot;)&#xa;x.useColumns(&quot;*POS_EQ_RA_MAIN,*POS_EQ_DEC_MAIN,*ID_MAIN,Vmag,_r&quot;,&#xa;sortBy=&quot;*POS_EQ_RA_MAIN&quot;)x.useTarget(Position.fromRaDec(&quot;14:00:00&quot;,&quot;-22:00:00&quot;),radius=45)&#xa;data=x.find(limit=5)&#xa;for obj in data:&#xa;  for k,v in obj.items():&#xa;    print k,v&#xa;&#xa;  print" id="L32YNJgN5uRO" />
    <sourcecode value=":&#xa;self.wait=wait&#xa;self.options,self.args=self.parseArgs(args)&#xa;if self.options.verbose==1:&#xa;  chimera.core.log.setConsoleLevel(logging.INFO)&#xa;&#xa;if self.options.verbose>1:&#xa;  chimera.core.log.setConsoleLevel(logging.DEBUG)&#xa;&#xa;self.manager=None&#xa;self.paths=:&#xa;  &quot;instruments&quot;:[],&#xa;  &quot;controllers&quot;:[],&quot;drivers&quot;:[]&#xa;self.paths[&quot;instruments&quot;].append(ChimeraPath.instruments())&#xa;self.paths[&quot;controllers&quot;].append(ChimeraPath.controllers())&#xa;self.paths[&quot;drivers&quot;].append(ChimeraPath.drivers())&#xa;" id="RPLGaOmZh8Eg" />
    <sourcecode value=":&#xa;def check_location(option,opt_str,value,parser):&#xa;  try:&#xa;    l=Location(value)&#xa;&#xa;  except InvalidLocationException:&#xa;    raise optparse.OptionValueError(&quot;%s isnt't a valid location.&quot;%value)&#xa;&#xa;  eval('parser.values.%s.append (&quot;%s&quot;)'%(option.dest,value))&#xa;&#xa;def check_includepath(option,opt_str,value,parser):&#xa;  if not value or not os.path.isdir(os.path.abspath(value)):&#xa;    raise optparse.OptionValueError(&quot;Couldn't found %s include path.&quot;%value)&#xa;&#xa;  eval('parser.values.%s.append (&quot;%s&quot;)'%(option.dest,value))&#xa;&#xa;parser=optparse.OptionParser(prog=&quot;chimera&quot;,version=find_dev_version()or _chimera_version_,&#xa;description=_chimera_description_,usage=&quot;chimera --help for more information&quot;)manag_group=optparse.OptionGroup(parser,&quot;Basic options&quot;)&#xa;manag_group.add_option(&quot;-H&quot;,&quot;--host&quot;,action=&quot;store&quot;,&#xa;dest=&quot;pyro_host&quot;,type=&quot;string&quot;,help=&quot;Host name/IP address to run as; [default=%default]&quot;,metavar=&quot;HOST&quot;)manag_group.add_option(&quot;-P&quot;,&quot;--port&quot;,action=&quot;store&quot;,&#xa;dest=&quot;pyro_port&quot;,type=&quot;string&quot;,help=&quot;Port on which to listen for requests; [default=%default]&quot;,metavar=&quot;PORT&quot;)config_group=optparse.OptionGroup(parser,&quot;Configuration&quot;)&#xa;config_group.add_option(&quot;--config&quot;,dest=&quot;config_file&quot;,&#xa;help=&quot;Start Chimera using configuration from FILE.&quot;,metavar=&quot;FILE&quot;)config_group.add_option(&quot;--skip-global&quot;,action=&quot;store_false&quot;,&#xa;dest=&quot;use_global&quot;,help=&quot;Don't use global coniguration file.&quot;)config_group.add_option(&quot;--daemon&quot;,action=&quot;store_true&quot;,dest='daemon',&#xa;help=&quot;Run Chimera in Daemon mode (will detach from current terminal).&quot;)misc_group=optparse.OptionGroup(parser,&quot;General&quot;)&#xa;misc_group.add_option(&quot;--dry-run&quot;,action=&quot;store_true&quot;,&#xa;dest=&quot;dry&quot;,help=&quot;Only list all configured objects (from command line and configuration files) without starting the system.&quot;)misc_group.add_option(&quot;-v&quot;,&quot;--verbose&quot;,action=&quot;count&quot;,dest='verbose',&#xa;help=&quot;Increase log level (multiple v's to increase even more).&quot;)inst_group=optparse.OptionGroup(parser,&quot;Instruments, Controllers and Drivers Management&quot;)&#xa;inst_group.add_option(&quot;-i&quot;,&quot;--instrument&quot;,action=&quot;callback&quot;,callback=check_location,&#xa;dest=&quot;instruments&quot;,type=&quot;string&quot;,help=&quot;Load the instrument defined by LOCATION.&quot;&quot;This option could be setted many times to load multiple instruments.&quot;,metavar=&quot;LOCATION&quot;)inst_group.add_option(&quot;-c&quot;,&quot;--controller&quot;,action=&quot;callback&quot;,callback=check_location,&#xa;dest=&quot;controllers&quot;,type=&quot;string&quot;,help=&quot;Load the controller defined by LOCATION.&quot;&quot;This option could be setted many times to load multiple controllers.&quot;,metavar=&quot;LOCATION&quot;)inst_group.add_option(&quot;-d&quot;,&quot;--driver&quot;,action=&quot;callback&quot;,callback=check_location,&#xa;dest=&quot;drivers&quot;,type=&quot;string&quot;,help=&quot;Load the driver defined by LOCATION.&quot;&quot;This option could be setted many times to load multiple drivers.&quot;,metavar=&quot;LOCATION&quot;)inst_group.add_option(&quot;-I&quot;,&quot;--instruments-dir&quot;,action=&quot;callback&quot;,callback=check_includepath,&#xa;dest=&quot;inst_dir&quot;,type=&quot;string&quot;,help=&quot;Append PATH to instruments load path.&quot;,metavar=&quot;PATH&quot;)inst_group.add_option(&quot;-C&quot;,&quot;--controllers-dir&quot;,action=&quot;callback&quot;,callback=check_includepath,&#xa;dest=&quot;ctrl_dir&quot;,type=&quot;string&quot;,help=&quot;Append PATH to controllers load path.&quot;,metavar=&quot;PATH&quot;)inst_group.add_option(&quot;-D&quot;,&quot;--drivers-dir&quot;,action=&quot;callback&quot;,callback=check_includepath,&#xa;dest=&quot;drv_dir&quot;,type=&quot;string&quot;,help=&quot;Append PATH to drivers load path.&quot;,metavar=&quot;PATH&quot;)parser.add_option_group(manag_group)&#xa;parser.add_option_group(config_group)&#xa;parser.add_option_group(misc_group)&#xa;parser.add_option_group(inst_group)&#xa;parser.set_defaults(instruments=[],&#xa;controllers=[],drivers=[],config_file=SYSTEM_CONFIG_DEFAULT_FILENAME,inst_dir=[],ctrl_dir=[],drv_dir=[],dry=False,use_global=True,verbose=0,daemon=False,pyro_host=MANAGER_DEFAULT_HOST,pyro_port=MANAGER_DEFAULT_PORT)return parser.parse_args(args)&#xa;" id="xu7johDwo22A" />
    <sourcecode value=":&#xa;if self.options.daemon:&#xa;  log.info(&quot;FIXME: Daemon...&quot;)&#xa;&#xa;self.config=SystemConfig.fromFile(self.options.config_file,self.options.use_global)&#xa;if not self.options.dry:&#xa;  log.info(&quot;Starting system.&quot;)&#xa;  log.info(&quot;Chimera version: %s&quot;%find_dev_version()or _chimera_version_)&#xa;  log.info(&quot;Chimera prefix: %s&quot;%ChimeraPath.root())&#xa;  try:&#xa;    self.manager=Manager(**self.config.chimera)&#xa;&#xa;  except ChimeraException,e:&#xa;    log.error(&quot;Chimera is already running on this machine. Use chimera-admin to manage it.&quot;)&#xa;    sys.exit(1)&#xa;&#xa;  log.info(&quot;Chimera: running on &quot;+self.manager.getHostname()+&quot;:&quot;+str(self.manager.getPort()))&#xa;  if self.options.use_global:&#xa;    log.info(&quot;Chimera: reading configuration from %s&quot;%SYSTEM_CONFIG_DEFAULT_GLOBAL)&#xa;&#xa;  log.info(&quot;Chimera: reading configuration from %s&quot;%os.path.realpath(self.options.config_file))&#xa;&#xa;if not self.options.dry:&#xa;  for site in self.config.sites:&#xa;    self.manager.addClass(Site,site.name,site.config,True)&#xa;&#xa;&#xa;log.info(&quot;Setting objects include path from command line parameters...&quot;)&#xa;for _dir in self.options.inst_dir:&#xa;  self.paths[&quot;instruments&quot;].append(_dir)&#xa;&#xa;for _dir in self.options.ctrl_dir:&#xa;  self.paths[&quot;controllers&quot;].append(_dir)&#xa;&#xa;for _dir in self.options.drv_dir:&#xa;  self.paths[&quot;drivers&quot;].append(_dir)&#xa;&#xa;log.info(&quot;Trying to start drivers...&quot;)&#xa;for drv in self.config.drivers+self.options.drivers:&#xa;  if self.options.dry:&#xa;    print drv&#xa;&#xa;  else:&#xa;    self._add(drv,path=self.paths[&quot;drivers&quot;],start=True)&#xa;&#xa;&#xa;log.info(&quot;Trying to start instruments...&quot;)&#xa;for inst in self.config.instruments+self.options.instruments:&#xa;  if self.options.dry:&#xa;    print inst&#xa;&#xa;  else:&#xa;    self._add(inst,path=self.paths[&quot;instruments&quot;],start=True)&#xa;&#xa;&#xa;log.info(&quot;Trying to start controllers...&quot;)&#xa;for ctrl in self.config.controllers+self.options.controllers:&#xa;  if self.options.dry:&#xa;    print ctrl&#xa;&#xa;  else:&#xa;    self._add(ctrl,path=self.paths[&quot;controllers&quot;],start=True)&#xa;&#xa;&#xa;log.info(&quot;System up and running.&quot;)&#xa;if self.wait and not self.options.dry:&#xa;  self.manager.wait()&#xa;&#xa;" id="xxjdR4GKewM4" />
    <sourcecode value=":&#xa;try:&#xa;  self.manager.addLocation(location,path,start)&#xa;&#xa;except Exception,e:&#xa;  printException(e)&#xa;&#xa;" id="FHHsCdwQLMtY" />
    <sourcecode value=":&#xa;log.info(&quot;Shutting down system.&quot;)&#xa;self.manager.shutdown()" id="l6oRGbmjv2xl" />
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
