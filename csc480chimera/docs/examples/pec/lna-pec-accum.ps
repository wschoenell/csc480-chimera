%!PS-Adobe-2.0
%%Title: lna-pec-accum.ps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Sat Apr 14 17:10:27 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
546 420 M
6416 0 V
1.000 UL
LTb
546 420 M
63 0 V
6353 0 R
-63 0 V
462 420 M
(-4) Rshow
1.000 UL
LTa
546 1020 M
6416 0 V
1.000 UL
LTb
546 1020 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(-3) Rshow
1.000 UL
LTa
546 1620 M
6416 0 V
1.000 UL
LTb
546 1620 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(-2) Rshow
1.000 UL
LTa
546 2220 M
6416 0 V
1.000 UL
LTb
546 2220 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(-1) Rshow
1.000 UL
LTa
546 2820 M
6416 0 V
1.000 UL
LTb
546 2820 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
( 0) Rshow
1.000 UL
LTa
546 3420 M
6416 0 V
1.000 UL
LTb
546 3420 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
( 1) Rshow
1.000 UL
LTa
546 4020 M
6416 0 V
1.000 UL
LTb
546 4020 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
( 2) Rshow
1.000 UL
LTa
546 4620 M
6416 0 V
1.000 UL
LTb
546 4620 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
( 3) Rshow
1.000 UL
LTa
546 420 M
0 4200 V
1.000 UL
LTb
546 420 M
0 63 V
0 4137 R
0 -63 V
546 280 M
( 0) Cshow
1.000 UL
LTa
1829 420 M
0 4200 V
1.000 UL
LTb
1829 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 50) Cshow
1.000 UL
LTa
3112 420 M
0 4200 V
1.000 UL
LTb
3112 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 100) Cshow
1.000 UL
LTa
4396 420 M
0 4200 V
1.000 UL
LTb
4396 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 150) Cshow
1.000 UL
LTa
5679 420 M
0 4200 V
1.000 UL
LTb
5679 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 200) Cshow
1.000 UL
LTa
6962 420 M
0 4200 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 250) Cshow
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
140 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(Accumulated Offset \(arcsec\)) Cshow
grestore
3754 70 M
(RA Worm Phase \(s\)) Cshow
3754 4830 M
(Periodic Error for LNA's Meade 16") Cshow
1.000 UL
LT0
6311 4487 M
(RA) Rshow
6395 4487 M
399 0 V
546 2862 M
31 37 V
30 30 V
31 17 V
31 9 V
31 13 V
30 19 V
31 20 V
31 18 V
30 11 V
31 5 V
31 11 V
31 21 V
30 27 V
31 24 V
31 22 V
30 21 V
31 23 V
31 23 V
31 21 V
30 17 V
31 14 V
31 14 V
30 17 V
31 16 V
31 10 V
31 4 V
30 2 V
31 2 V
31 8 V
30 15 V
31 19 V
31 23 V
31 25 V
30 26 V
31 32 V
31 38 V
30 38 V
31 35 V
31 28 V
31 19 V
30 15 V
31 10 V
31 3 V
30 -5 V
31 -8 V
31 -8 V
30 -7 V
31 -6 V
31 -2 V
31 2 V
30 9 V
31 19 V
31 25 V
30 31 V
31 33 V
31 33 V
31 31 V
30 27 V
31 26 V
31 28 V
30 23 V
31 17 V
31 12 V
31 4 V
30 3 V
31 7 V
31 8 V
30 8 V
31 8 V
31 7 V
31 7 V
30 8 V
31 10 V
31 10 V
30 10 V
31 7 V
31 2 V
31 -4 V
30 -10 V
31 -18 V
31 -25 V
30 -29 V
31 -35 V
31 -38 V
31 -43 V
30 -51 V
31 -55 V
31 -59 V
30 -56 V
31 -50 V
31 -43 V
31 -40 V
30 -37 V
31 -40 V
31 -39 V
30 -35 V
31 -32 V
31 -31 V
31 -38 V
30 -44 V
31 -53 V
31 -58 V
30 -63 V
31 -66 V
31 -71 V
31 -73 V
30 -73 V
31 -75 V
31 -72 V
30 -68 V
31 -64 V
31 -61 V
31 -60 V
30 -58 V
31 -54 V
31 -53 V
30 -53 V
31 -56 V
31 -57 V
31 -56 V
30 -53 V
31 -54 V
31 -57 V
30 -57 V
31 -57 V
31 -53 V
31 -45 V
30 -39 V
31 -37 V
31 -32 V
30 -32 V
31 -32 V
31 -32 V
31 -33 V
30 -36 V
31 -39 V
31 -40 V
30 -40 V
31 -39 V
31 -37 V
30 -36 V
31 -38 V
31 -40 V
31 -38 V
30 -35 V
31 -32 V
31 -32 V
30 -33 V
31 -33 V
31 -33 V
31 -27 V
30 -22 V
31 -18 V
31 -14 V
30 -8 V
31 -3 V
31 6 V
31 16 V
30 26 V
31 32 V
31 38 V
30 40 V
31 44 V
31 46 V
31 45 V
30 41 V
31 41 V
31 42 V
30 47 V
31 51 V
31 51 V
31 49 V
30 49 V
31 52 V
31 58 V
30 65 V
31 71 V
31 71 V
31 65 V
30 62 V
31 57 V
31 57 V
30 57 V
31 55 V
31 51 V
31 47 V
30 47 V
31 54 V
31 55 V
30 54 V
31 55 V
31 58 V
31 62 V
30 64 V
31 59 V
31 52 V
30 44 V
31 44 V
31 51 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
